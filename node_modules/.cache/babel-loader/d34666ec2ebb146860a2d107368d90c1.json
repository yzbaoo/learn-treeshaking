{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest as __HttpRequest, isValidHostname as __isValidHostname } from \"@aws-sdk/protocol-http\";\nimport { dateToUtcString as __dateToUtcString, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, expectUnion as __expectUnion, extendedEncodeURIComponent as __extendedEncodeURIComponent, getArrayIfSingleItem as __getArrayIfSingleItem, getValueFromTextNode as __getValueFromTextNode, parseBoolean as __parseBoolean, parseRfc3339DateTime as __parseRfc3339DateTime, parseRfc7231DateTime as __parseRfc7231DateTime, strictParseInt32 as __strictParseInt32, strictParseLong as __strictParseLong } from \"@aws-sdk/smithy-client\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { decodeHTML } from \"entities\";\nimport { parse as xmlParse } from \"fast-xml-parser\";\nimport { AnalyticsFilter, LifecycleRuleFilter, MetricsFilter, ReplicationRuleFilter } from \"../models/models_0\";\nexport var serializeAws_restXmlAbortMultipartUploadCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"x-id\": \"AbortMultipartUpload\"\n          }, input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCompleteMultipartUploadCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"x-id\": \"CompleteMultipartUpload\"\n          }, input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n\n          if (input.MultipartUpload !== undefined) {\n            body = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n          }\n\n          if (input.MultipartUpload !== undefined) {\n            contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n            contents = contents.withName(\"CompleteMultipartUpload\");\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCopyObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.CopySource) && {\n            \"x-amz-copy-source\": input.CopySource\n          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {\n            \"x-amz-copy-source-if-match\": input.CopySourceIfMatch\n          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n            \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n            \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch\n          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n            \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.MetadataDirective) && {\n            \"x-amz-metadata-directive\": input.MetadataDirective\n          }), isSerializableHeaderValue(input.TaggingDirective) && {\n            \"x-amz-tagging-directive\": input.TaggingDirective\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n            \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n            \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            \"x-id\": \"CopyObject\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCreateBucketCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ObjectLockEnabledForBucket) && {\n            \"x-amz-bucket-object-lock-enabled\": input.ObjectLockEnabledForBucket.toString()\n          }), isSerializableHeaderValue(input.ObjectOwnership) && {\n            \"x-amz-object-ownership\": input.ObjectOwnership\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.CreateBucketConfiguration !== undefined) {\n            body = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n          }\n\n          if (input.CreateBucketConfiguration !== undefined) {\n            contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCreateMultipartUploadCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            uploads: \"\",\n            \"x-id\": \"CreateMultipartUpload\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketCorsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketLifecycleCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            ownershipControls: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketReplicationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketWebsiteCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"x-id\": \"DeleteObject\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            delete: \"\",\n            \"x-id\": \"DeleteObjects\"\n          };\n\n          if (input.Delete !== undefined) {\n            body = serializeAws_restXmlDelete(input.Delete, context);\n          }\n\n          if (input.Delete !== undefined) {\n            contents = serializeAws_restXmlDelete(input.Delete, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeletePublicAccessBlockCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            accelerate: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            acl: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\",\n            \"x-id\": \"GetBucketAnalyticsConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketCorsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\",\n            \"x-id\": \"GetBucketIntelligentTieringConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketInventoryConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\",\n            \"x-id\": \"GetBucketInventoryConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLocationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            location: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLoggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            logging: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketMetricsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\",\n            \"x-id\": \"GetBucketMetricsConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketNotificationConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            notification: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketOwnershipControlsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            ownershipControls: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketPolicyStatusCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policyStatus: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketReplicationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketRequestPaymentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            requestPayment: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketVersioningCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            versioning: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketWebsiteCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.IfMatch) && {\n            \"if-match\": input.IfMatch\n          }), isSerializableHeaderValue(input.IfModifiedSince) && {\n            \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.IfNoneMatch) && {\n            \"if-none-match\": input.IfNoneMatch\n          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n            \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Range) && {\n            range: input.Range\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"x-id\": \"GetObject\"\n          }, input.ResponseCacheControl !== undefined && {\n            \"response-cache-control\": input.ResponseCacheControl\n          }), input.ResponseContentDisposition !== undefined && {\n            \"response-content-disposition\": input.ResponseContentDisposition\n          }), input.ResponseContentEncoding !== undefined && {\n            \"response-content-encoding\": input.ResponseContentEncoding\n          }), input.ResponseContentLanguage !== undefined && {\n            \"response-content-language\": input.ResponseContentLanguage\n          }), input.ResponseContentType !== undefined && {\n            \"response-content-type\": input.ResponseContentType\n          }), input.ResponseExpires !== undefined && {\n            \"response-expires\": __dateToUtcString(input.ResponseExpires).toString()\n          }), input.VersionId !== undefined && {\n            versionId: input.VersionId\n          }), input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            acl: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectLegalHoldCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"legal-hold\": \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectLockConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            \"object-lock\": \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectRetentionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            retention: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectTorrentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            torrent: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetPublicAccessBlockCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlHeadBucketCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"HEAD\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlHeadObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.IfMatch) && {\n            \"if-match\": input.IfMatch\n          }), isSerializableHeaderValue(input.IfModifiedSince) && {\n            \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.IfNoneMatch) && {\n            \"if-none-match\": input.IfNoneMatch\n          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n            \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Range) && {\n            range: input.Range\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({}, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          }), input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"HEAD\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\",\n            \"x-id\": \"ListBucketAnalyticsConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\",\n            \"x-id\": \"ListBucketIntelligentTieringConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketInventoryConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\",\n            \"x-id\": \"ListBucketInventoryConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketMetricsConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\",\n            \"x-id\": \"ListBucketMetricsConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/xml\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/\";\n          body = \"\";\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListMultipartUploadsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign({\n            uploads: \"\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.KeyMarker !== undefined && {\n            \"key-marker\": input.KeyMarker\n          }), input.MaxUploads !== undefined && {\n            \"max-uploads\": input.MaxUploads.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.UploadIdMarker !== undefined && {\n            \"upload-id-marker\": input.UploadIdMarker\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign({}, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.Marker !== undefined && {\n            marker: input.Marker\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectsV2Command = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"list-type\": \"2\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          }), input.FetchOwner !== undefined && {\n            \"fetch-owner\": input.FetchOwner.toString()\n          }), input.StartAfter !== undefined && {\n            \"start-after\": input.StartAfter\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectVersionsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign({\n            versions: \"\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.KeyMarker !== undefined && {\n            \"key-marker\": input.KeyMarker\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.VersionIdMarker !== undefined && {\n            \"version-id-marker\": input.VersionIdMarker\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListPartsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign(__assign({\n            \"x-id\": \"ListParts\"\n          }, input.MaxParts !== undefined && {\n            \"max-parts\": input.MaxParts.toString()\n          }), input.PartNumberMarker !== undefined && {\n            \"part-number-marker\": input.PartNumberMarker\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            accelerate: \"\"\n          };\n\n          if (input.AccelerateConfiguration !== undefined) {\n            body = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n          }\n\n          if (input.AccelerateConfiguration !== undefined) {\n            contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            acl: \"\"\n          };\n\n          if (input.AccessControlPolicy !== undefined) {\n            body = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n          }\n\n          if (input.AccessControlPolicy !== undefined) {\n            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.AnalyticsConfiguration !== undefined) {\n            body = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n          }\n\n          if (input.AnalyticsConfiguration !== undefined) {\n            contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketCorsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n\n          if (input.CORSConfiguration !== undefined) {\n            body = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n          }\n\n          if (input.CORSConfiguration !== undefined) {\n            contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n\n          if (input.ServerSideEncryptionConfiguration !== undefined) {\n            body = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n          }\n\n          if (input.ServerSideEncryptionConfiguration !== undefined) {\n            contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/xml\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.IntelligentTieringConfiguration !== undefined) {\n            body = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n          }\n\n          if (input.IntelligentTieringConfiguration !== undefined) {\n            contents = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketInventoryConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.InventoryConfiguration !== undefined) {\n            body = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n          }\n\n          if (input.InventoryConfiguration !== undefined) {\n            contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n\n          if (input.LifecycleConfiguration !== undefined) {\n            body = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n          }\n\n          if (input.LifecycleConfiguration !== undefined) {\n            contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n            contents = contents.withName(\"LifecycleConfiguration\");\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketLoggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            logging: \"\"\n          };\n\n          if (input.BucketLoggingStatus !== undefined) {\n            body = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n          }\n\n          if (input.BucketLoggingStatus !== undefined) {\n            contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketMetricsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.MetricsConfiguration !== undefined) {\n            body = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n          }\n\n          if (input.MetricsConfiguration !== undefined) {\n            contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketNotificationConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.SkipDestinationValidation) && {\n            \"x-amz-skip-destination-validation\": input.SkipDestinationValidation.toString()\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            notification: \"\"\n          };\n\n          if (input.NotificationConfiguration !== undefined) {\n            body = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n          }\n\n          if (input.NotificationConfiguration !== undefined) {\n            contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketOwnershipControlsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            ownershipControls: \"\"\n          };\n\n          if (input.OwnershipControls !== undefined) {\n            body = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);\n          }\n\n          if (input.OwnershipControls !== undefined) {\n            contents = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"text/plain\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess) && {\n            \"x-amz-confirm-remove-self-bucket-access\": input.ConfirmRemoveSelfBucketAccess.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n\n          if (input.Policy !== undefined) {\n            body = input.Policy;\n          }\n\n          if (input.Policy !== undefined) {\n            contents = input.Policy;\n            body = contents;\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketReplicationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.Token) && {\n            \"x-amz-bucket-object-lock-token\": input.Token\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n\n          if (input.ReplicationConfiguration !== undefined) {\n            body = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n          }\n\n          if (input.ReplicationConfiguration !== undefined) {\n            contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketRequestPaymentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            requestPayment: \"\"\n          };\n\n          if (input.RequestPaymentConfiguration !== undefined) {\n            body = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n          }\n\n          if (input.RequestPaymentConfiguration !== undefined) {\n            contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n\n          if (input.Tagging !== undefined) {\n            body = serializeAws_restXmlTagging(input.Tagging, context);\n          }\n\n          if (input.Tagging !== undefined) {\n            contents = serializeAws_restXmlTagging(input.Tagging, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketVersioningCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            versioning: \"\"\n          };\n\n          if (input.VersioningConfiguration !== undefined) {\n            body = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n          }\n\n          if (input.VersioningConfiguration !== undefined) {\n            contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketWebsiteCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n\n          if (input.WebsiteConfiguration !== undefined) {\n            body = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n          }\n\n          if (input.WebsiteConfiguration !== undefined) {\n            contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentLength) && {\n            \"content-length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            \"x-id\": \"PutObject\"\n          };\n\n          if (input.Body !== undefined) {\n            body = input.Body;\n          }\n\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            acl: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.AccessControlPolicy !== undefined) {\n            body = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n          }\n\n          if (input.AccessControlPolicy !== undefined) {\n            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectLegalHoldCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"legal-hold\": \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.LegalHold !== undefined) {\n            body = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n          }\n\n          if (input.LegalHold !== undefined) {\n            contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n            contents = contents.withName(\"LegalHold\");\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectLockConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Token) && {\n            \"x-amz-bucket-object-lock-token\": input.Token\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            \"object-lock\": \"\"\n          };\n\n          if (input.ObjectLockConfiguration !== undefined) {\n            body = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n          }\n\n          if (input.ObjectLockConfiguration !== undefined) {\n            contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectRetentionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            retention: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.Retention !== undefined) {\n            body = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n          }\n\n          if (input.Retention !== undefined) {\n            contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n            contents = contents.withName(\"Retention\");\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.Tagging !== undefined) {\n            body = serializeAws_restXmlTagging(input.Tagging, context);\n          }\n\n          if (input.Tagging !== undefined) {\n            contents = serializeAws_restXmlTagging(input.Tagging, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutPublicAccessBlockCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n\n          if (input.PublicAccessBlockConfiguration !== undefined) {\n            body = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n          }\n\n          if (input.PublicAccessBlockConfiguration !== undefined) {\n            contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlRestoreObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            restore: \"\",\n            \"x-id\": \"RestoreObject\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.RestoreRequest !== undefined) {\n            body = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n          }\n\n          if (input.RestoreRequest !== undefined) {\n            contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlSelectObjectContentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, bodyNode, node, node, node, node, node, node;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            select: \"\",\n            \"select-type\": \"2\",\n            \"x-id\": \"SelectObjectContent\"\n          };\n          body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n          bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\n          bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n\n          if (input.Expression !== undefined) {\n            node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.ExpressionType !== undefined) {\n            node = new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.InputSerialization !== undefined) {\n            node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.OutputSerialization !== undefined) {\n            node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.RequestProgress !== undefined) {\n            node = serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName(\"RequestProgress\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.ScanRange !== undefined) {\n            node = serializeAws_restXmlScanRange(input.ScanRange, context).withName(\"ScanRange\");\n            bodyNode.addChildNode(node);\n          }\n\n          body += bodyNode.toString();\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlUploadPartCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\"\n          }, isSerializableHeaderValue(input.ContentLength) && {\n            \"content-length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({\n            \"x-id\": \"UploadPart\"\n          }, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n\n          if (input.Body !== undefined) {\n            body = input.Body;\n          }\n\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlUploadPartCopyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.CopySource) && {\n            \"x-amz-copy-source\": input.CopySource\n          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {\n            \"x-amz-copy-source-if-match\": input.CopySourceIfMatch\n          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n            \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n            \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch\n          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n            \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceRange) && {\n            \"x-amz-copy-source-range\": input.CopySourceRange\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n            \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n            \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({\n            \"x-id\": \"UploadPartCopy\"\n          }, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlWriteGetObjectResponseCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body, contents, resolvedHostname;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\",\n            \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\"\n          }, isSerializableHeaderValue(input.RequestRoute) && {\n            \"x-amz-request-route\": input.RequestRoute\n          }), isSerializableHeaderValue(input.RequestToken) && {\n            \"x-amz-request-token\": input.RequestToken\n          }), isSerializableHeaderValue(input.StatusCode) && {\n            \"x-amz-fwd-status\": input.StatusCode.toString()\n          }), isSerializableHeaderValue(input.ErrorCode) && {\n            \"x-amz-fwd-error-code\": input.ErrorCode\n          }), isSerializableHeaderValue(input.ErrorMessage) && {\n            \"x-amz-fwd-error-message\": input.ErrorMessage\n          }), isSerializableHeaderValue(input.AcceptRanges) && {\n            \"x-amz-fwd-header-accept-ranges\": input.AcceptRanges\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"x-amz-fwd-header-cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"x-amz-fwd-header-content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"x-amz-fwd-header-content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"x-amz-fwd-header-content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentLength) && {\n            \"content-length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentRange) && {\n            \"x-amz-fwd-header-content-range\": input.ContentRange\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"x-amz-fwd-header-content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.DeleteMarker) && {\n            \"x-amz-fwd-header-x-amz-delete-marker\": input.DeleteMarker.toString()\n          }), isSerializableHeaderValue(input.ETag) && {\n            \"x-amz-fwd-header-etag\": input.ETag\n          }), isSerializableHeaderValue(input.Expires) && {\n            \"x-amz-fwd-header-expires\": __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.Expiration) && {\n            \"x-amz-fwd-header-x-amz-expiration\": input.Expiration\n          }), isSerializableHeaderValue(input.LastModified) && {\n            \"x-amz-fwd-header-last-modified\": __dateToUtcString(input.LastModified).toString()\n          }), isSerializableHeaderValue(input.MissingMeta) && {\n            \"x-amz-fwd-header-x-amz-missing-meta\": input.MissingMeta.toString()\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-fwd-header-x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-fwd-header-x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-fwd-header-x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.PartsCount) && {\n            \"x-amz-fwd-header-x-amz-mp-parts-count\": input.PartsCount.toString()\n          }), isSerializableHeaderValue(input.ReplicationStatus) && {\n            \"x-amz-fwd-header-x-amz-replication-status\": input.ReplicationStatus\n          }), isSerializableHeaderValue(input.RequestCharged) && {\n            \"x-amz-fwd-header-x-amz-request-charged\": input.RequestCharged\n          }), isSerializableHeaderValue(input.Restore) && {\n            \"x-amz-fwd-header-x-amz-restore\": input.Restore\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-fwd-header-x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-fwd-header-x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-fwd-header-x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-fwd-header-x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-fwd-header-x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.TagCount) && {\n            \"x-amz-fwd-header-x-amz-tagging-count\": input.TagCount.toString()\n          }), isSerializableHeaderValue(input.VersionId) && {\n            \"x-amz-fwd-header-x-amz-version-id\": input.VersionId\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-fwd-header-x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/WriteGetObjectResponse\";\n          query = {\n            \"x-id\": \"WriteGetObjectResponse\"\n          };\n\n          if (input.Body !== undefined) {\n            body = input.Body;\n          }\n\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n\n          return [4, context.endpoint()];\n\n        case 2:\n          resolvedHostname = _c.sent().hostname;\n\n          if (context.disableHostPrefix !== true) {\n            resolvedHostname = \"{RequestRoute}.\" + resolvedHostname;\n\n            if (input.RequestRoute === undefined) {\n              throw new Error(\"Empty value provided for input host prefix: RequestRoute.\");\n            }\n\n            resolvedHostname = resolvedHostname.replace(\"{RequestRoute}\", input.RequestRoute);\n\n            if (!__isValidHostname(resolvedHostname)) {\n              throw new Error(\"ValidationError: prefixed hostname must be hostname compatible.\");\n            }\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: resolvedHostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlAbortMultipartUploadCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlAbortMultipartUploadCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchUpload\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NoSuchUpload\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCompleteMultipartUploadCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Bucket: undefined,\n            BucketKeyEnabled: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Key: undefined,\n            Location: undefined,\n            RequestCharged: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = __expectString(data[\"Bucket\"]);\n          }\n\n          if (data[\"ETag\"] !== undefined) {\n            contents.ETag = __expectString(data[\"ETag\"]);\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = __expectString(data[\"Key\"]);\n          }\n\n          if (data[\"Location\"] !== undefined) {\n            contents.Location = __expectString(data[\"Location\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCompleteMultipartUploadCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCopyObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlCopyObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            CopyObjectResult: undefined,\n            CopySourceVersionId: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCopyObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ObjectNotInActiveTierError\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#ObjectNotInActiveTierError\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCreateBucketCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlCreateBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Location: undefined\n          };\n\n          if (output.headers[\"location\"] !== undefined) {\n            contents.Location = output.headers[\"location\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCreateBucketCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BucketAlreadyExists\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#BucketAlreadyExists\":\n              return [3, 2];\n\n            case \"BucketAlreadyOwnedByYou\":\n              return [3, 4];\n\n            case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCreateMultipartUploadCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            BucketKeyEnabled: undefined,\n            Key: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            UploadId: undefined\n          };\n\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = __expectNonNull(__parseRfc7231DateTime(output.headers[\"x-amz-abort-date\"]));\n          }\n\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = __expectString(data[\"Bucket\"]);\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = __expectString(data[\"Key\"]);\n          }\n\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = __expectString(data[\"UploadId\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCreateMultipartUploadCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketCorsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketCorsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketLifecycleCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketLifecycleCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketReplicationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketReplicationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketWebsiteCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketWebsiteCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DeleteMarker: undefined,\n            RequestCharged: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteObjectsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Deleted: undefined,\n            Errors: undefined,\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.Deleted === \"\") {\n            contents.Deleted = [];\n          }\n\n          if (data[\"Deleted\"] !== undefined) {\n            contents.Deleted = deserializeAws_restXmlDeletedObjects(__getArrayIfSingleItem(data[\"Deleted\"]), context);\n          }\n\n          if (data.Error === \"\") {\n            contents.Errors = [];\n          }\n\n          if (data[\"Error\"] !== undefined) {\n            contents.Errors = deserializeAws_restXmlErrors(__getArrayIfSingleItem(data[\"Error\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeletePublicAccessBlockCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeletePublicAccessBlockCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Status: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = __expectString(data[\"Status\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Grants: undefined,\n            Owner: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          }\n\n          if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AnalyticsConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketCorsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CORSRules: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.CORSRule === \"\") {\n            contents.CORSRules = [];\n          }\n\n          if (data[\"CORSRule\"] !== undefined) {\n            contents.CORSRules = deserializeAws_restXmlCORSRules(__getArrayIfSingleItem(data[\"CORSRule\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketCorsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ServerSideEncryptionConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            IntelligentTieringConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.IntelligentTieringConfiguration = deserializeAws_restXmlIntelligentTieringConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketInventoryConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            InventoryConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketInventoryConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Rules: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.Rule === \"\") {\n            contents.Rules = [];\n          }\n\n          if (data[\"Rule\"] !== undefined) {\n            contents.Rules = deserializeAws_restXmlLifecycleRules(__getArrayIfSingleItem(data[\"Rule\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLocationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketLocationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LocationConstraint: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"LocationConstraint\"] !== undefined) {\n            contents.LocationConstraint = __expectString(data[\"LocationConstraint\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLocationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLoggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LoggingEnabled: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"LoggingEnabled\"] !== undefined) {\n            contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data[\"LoggingEnabled\"], context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLoggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketMetricsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MetricsConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketMetricsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketNotificationConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventBridgeConfiguration: undefined,\n            LambdaFunctionConfigurations: undefined,\n            QueueConfigurations: undefined,\n            TopicConfigurations: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"EventBridgeConfiguration\"] !== undefined) {\n            contents.EventBridgeConfiguration = deserializeAws_restXmlEventBridgeConfiguration(data[\"EventBridgeConfiguration\"], context);\n          }\n\n          if (data.CloudFunctionConfiguration === \"\") {\n            contents.LambdaFunctionConfigurations = [];\n          }\n\n          if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n            contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList(__getArrayIfSingleItem(data[\"CloudFunctionConfiguration\"]), context);\n          }\n\n          if (data.QueueConfiguration === \"\") {\n            contents.QueueConfigurations = [];\n          }\n\n          if (data[\"QueueConfiguration\"] !== undefined) {\n            contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList(__getArrayIfSingleItem(data[\"QueueConfiguration\"]), context);\n          }\n\n          if (data.TopicConfiguration === \"\") {\n            contents.TopicConfigurations = [];\n          }\n\n          if (data[\"TopicConfiguration\"] !== undefined) {\n            contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList(__getArrayIfSingleItem(data[\"TopicConfiguration\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketNotificationConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketOwnershipControlsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            OwnershipControls: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.OwnershipControls = deserializeAws_restXmlOwnershipControls(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketOwnershipControlsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Policy: undefined\n          };\n          return [4, collectBodyString(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.Policy = __expectString(data);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketPolicyStatusCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            PolicyStatus: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketPolicyStatusCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketReplicationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ReplicationConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketReplicationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketRequestPaymentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Payer: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"Payer\"] !== undefined) {\n            contents.Payer = __expectString(data[\"Payer\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketRequestPaymentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TagSet: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          }\n\n          if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketVersioningCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MFADelete: undefined,\n            Status: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"MfaDelete\"] !== undefined) {\n            contents.MFADelete = __expectString(data[\"MfaDelete\"]);\n          }\n\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = __expectString(data[\"Status\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketVersioningCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketWebsiteCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ErrorDocument: undefined,\n            IndexDocument: undefined,\n            RedirectAllRequestsTo: undefined,\n            RoutingRules: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"ErrorDocument\"] !== undefined) {\n            contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data[\"ErrorDocument\"], context);\n          }\n\n          if (data[\"IndexDocument\"] !== undefined) {\n            contents.IndexDocument = deserializeAws_restXmlIndexDocument(data[\"IndexDocument\"], context);\n          }\n\n          if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n            contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\n          }\n\n          if (data.RoutingRules === \"\") {\n            contents.RoutingRules = [];\n          }\n\n          if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n            contents.RoutingRules = deserializeAws_restXmlRoutingRules(__getArrayIfSingleItem(data[\"RoutingRules\"][\"RoutingRule\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketWebsiteCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restXmlGetObjectCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        AcceptRanges: undefined,\n        Body: undefined,\n        BucketKeyEnabled: undefined,\n        CacheControl: undefined,\n        ContentDisposition: undefined,\n        ContentEncoding: undefined,\n        ContentLanguage: undefined,\n        ContentLength: undefined,\n        ContentRange: undefined,\n        ContentType: undefined,\n        DeleteMarker: undefined,\n        ETag: undefined,\n        Expiration: undefined,\n        Expires: undefined,\n        LastModified: undefined,\n        Metadata: undefined,\n        MissingMeta: undefined,\n        ObjectLockLegalHoldStatus: undefined,\n        ObjectLockMode: undefined,\n        ObjectLockRetainUntilDate: undefined,\n        PartsCount: undefined,\n        ReplicationStatus: undefined,\n        RequestCharged: undefined,\n        Restore: undefined,\n        SSECustomerAlgorithm: undefined,\n        SSECustomerKeyMD5: undefined,\n        SSEKMSKeyId: undefined,\n        ServerSideEncryption: undefined,\n        StorageClass: undefined,\n        TagCount: undefined,\n        VersionId: undefined,\n        WebsiteRedirectLocation: undefined\n      };\n\n      if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n        contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n      }\n\n      if (output.headers[\"accept-ranges\"] !== undefined) {\n        contents.AcceptRanges = output.headers[\"accept-ranges\"];\n      }\n\n      if (output.headers[\"x-amz-expiration\"] !== undefined) {\n        contents.Expiration = output.headers[\"x-amz-expiration\"];\n      }\n\n      if (output.headers[\"x-amz-restore\"] !== undefined) {\n        contents.Restore = output.headers[\"x-amz-restore\"];\n      }\n\n      if (output.headers[\"last-modified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc7231DateTime(output.headers[\"last-modified\"]));\n      }\n\n      if (output.headers[\"content-length\"] !== undefined) {\n        contents.ContentLength = __strictParseLong(output.headers[\"content-length\"]);\n      }\n\n      if (output.headers[\"etag\"] !== undefined) {\n        contents.ETag = output.headers[\"etag\"];\n      }\n\n      if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n        contents.MissingMeta = __strictParseInt32(output.headers[\"x-amz-missing-meta\"]);\n      }\n\n      if (output.headers[\"x-amz-version-id\"] !== undefined) {\n        contents.VersionId = output.headers[\"x-amz-version-id\"];\n      }\n\n      if (output.headers[\"cache-control\"] !== undefined) {\n        contents.CacheControl = output.headers[\"cache-control\"];\n      }\n\n      if (output.headers[\"content-disposition\"] !== undefined) {\n        contents.ContentDisposition = output.headers[\"content-disposition\"];\n      }\n\n      if (output.headers[\"content-encoding\"] !== undefined) {\n        contents.ContentEncoding = output.headers[\"content-encoding\"];\n      }\n\n      if (output.headers[\"content-language\"] !== undefined) {\n        contents.ContentLanguage = output.headers[\"content-language\"];\n      }\n\n      if (output.headers[\"content-range\"] !== undefined) {\n        contents.ContentRange = output.headers[\"content-range\"];\n      }\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.ContentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"expires\"] !== undefined) {\n        contents.Expires = __expectNonNull(__parseRfc7231DateTime(output.headers[\"expires\"]));\n      }\n\n      if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n        contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n        contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n        contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n        contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n        contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n        contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n      }\n\n      if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n        contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n      }\n\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n\n      if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n        contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n      }\n\n      if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n        contents.PartsCount = __strictParseInt32(output.headers[\"x-amz-mp-parts-count\"]);\n      }\n\n      if (output.headers[\"x-amz-tagging-count\"] !== undefined) {\n        contents.TagCount = __strictParseInt32(output.headers[\"x-amz-tagging-count\"]);\n      }\n\n      if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n        contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n      }\n\n      if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n        contents.ObjectLockRetainUntilDate = __expectNonNull(__parseRfc3339DateTime(output.headers[\"x-amz-object-lock-retain-until-date\"]));\n      }\n\n      if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n        contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n      }\n\n      Object.keys(output.headers).forEach(function (header) {\n        if (contents.Metadata === undefined) {\n          contents.Metadata = {};\n        }\n\n        if (header.startsWith(\"x-amz-meta-\")) {\n          contents.Metadata[header.substring(11)] = output.headers[header];\n        }\n      });\n      data = output.body;\n      contents.Body = data;\n      return [2, Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidObjectState\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#InvalidObjectState\":\n              return [3, 2];\n\n            case \"NoSuchKey\":\n              return [3, 4];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restXmlInvalidObjectStateResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Grants: undefined,\n            Owner: undefined,\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          }\n\n          if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectLegalHoldCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LegalHold: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectLegalHoldCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectLockConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ObjectLockConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectLockConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectRetentionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Retention: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectRetentionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TagSet: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          }\n\n          if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectTorrentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        Body: undefined,\n        RequestCharged: undefined\n      };\n\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n\n      data = output.body;\n      contents.Body = data;\n      return [2, Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectTorrentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetPublicAccessBlockCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            PublicAccessBlockConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetPublicAccessBlockCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlHeadBucketCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlHeadBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlHeadBucketCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NotFound\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NotFound\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restXmlNotFoundResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlHeadObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlHeadObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AcceptRanges: undefined,\n            ArchiveStatus: undefined,\n            BucketKeyEnabled: undefined,\n            CacheControl: undefined,\n            ContentDisposition: undefined,\n            ContentEncoding: undefined,\n            ContentLanguage: undefined,\n            ContentLength: undefined,\n            ContentType: undefined,\n            DeleteMarker: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Expires: undefined,\n            LastModified: undefined,\n            Metadata: undefined,\n            MissingMeta: undefined,\n            ObjectLockLegalHoldStatus: undefined,\n            ObjectLockMode: undefined,\n            ObjectLockRetainUntilDate: undefined,\n            PartsCount: undefined,\n            ReplicationStatus: undefined,\n            RequestCharged: undefined,\n            Restore: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            StorageClass: undefined,\n            VersionId: undefined,\n            WebsiteRedirectLocation: undefined\n          };\n\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n          }\n\n          if (output.headers[\"accept-ranges\"] !== undefined) {\n            contents.AcceptRanges = output.headers[\"accept-ranges\"];\n          }\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-restore\"] !== undefined) {\n            contents.Restore = output.headers[\"x-amz-restore\"];\n          }\n\n          if (output.headers[\"x-amz-archive-status\"] !== undefined) {\n            contents.ArchiveStatus = output.headers[\"x-amz-archive-status\"];\n          }\n\n          if (output.headers[\"last-modified\"] !== undefined) {\n            contents.LastModified = __expectNonNull(__parseRfc7231DateTime(output.headers[\"last-modified\"]));\n          }\n\n          if (output.headers[\"content-length\"] !== undefined) {\n            contents.ContentLength = __strictParseLong(output.headers[\"content-length\"]);\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n            contents.MissingMeta = __strictParseInt32(output.headers[\"x-amz-missing-meta\"]);\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"cache-control\"] !== undefined) {\n            contents.CacheControl = output.headers[\"cache-control\"];\n          }\n\n          if (output.headers[\"content-disposition\"] !== undefined) {\n            contents.ContentDisposition = output.headers[\"content-disposition\"];\n          }\n\n          if (output.headers[\"content-encoding\"] !== undefined) {\n            contents.ContentEncoding = output.headers[\"content-encoding\"];\n          }\n\n          if (output.headers[\"content-language\"] !== undefined) {\n            contents.ContentLanguage = output.headers[\"content-language\"];\n          }\n\n          if (output.headers[\"content-type\"] !== undefined) {\n            contents.ContentType = output.headers[\"content-type\"];\n          }\n\n          if (output.headers[\"expires\"] !== undefined) {\n            contents.Expires = __expectNonNull(__parseRfc7231DateTime(output.headers[\"expires\"]));\n          }\n\n          if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n            contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n            contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n            contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n          }\n\n          if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n            contents.PartsCount = __strictParseInt32(output.headers[\"x-amz-mp-parts-count\"]);\n          }\n\n          if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n            contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n          }\n\n          if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n            contents.ObjectLockRetainUntilDate = __expectNonNull(__parseRfc3339DateTime(output.headers[\"x-amz-object-lock-retain-until-date\"]));\n          }\n\n          if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n            contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n          }\n\n          Object.keys(output.headers).forEach(function (header) {\n            if (contents.Metadata === undefined) {\n              contents.Metadata = {};\n            }\n\n            if (header.startsWith(\"x-amz-meta-\")) {\n              contents.Metadata[header.substring(11)] = output.headers[header];\n            }\n          });\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlHeadObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NotFound\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NotFound\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restXmlNotFoundResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AnalyticsConfigurationList: undefined,\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.AnalyticsConfiguration === \"\") {\n            contents.AnalyticsConfigurationList = [];\n          }\n\n          if (data[\"AnalyticsConfiguration\"] !== undefined) {\n            contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList(__getArrayIfSingleItem(data[\"AnalyticsConfiguration\"]), context);\n          }\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            IntelligentTieringConfigurationList: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n          }\n\n          if (data.IntelligentTieringConfiguration === \"\") {\n            contents.IntelligentTieringConfigurationList = [];\n          }\n\n          if (data[\"IntelligentTieringConfiguration\"] !== undefined) {\n            contents.IntelligentTieringConfigurationList = deserializeAws_restXmlIntelligentTieringConfigurationList(__getArrayIfSingleItem(data[\"IntelligentTieringConfiguration\"]), context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketInventoryConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            InventoryConfigurationList: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n          }\n\n          if (data.InventoryConfiguration === \"\") {\n            contents.InventoryConfigurationList = [];\n          }\n\n          if (data[\"InventoryConfiguration\"] !== undefined) {\n            contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList(__getArrayIfSingleItem(data[\"InventoryConfiguration\"]), context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketInventoryConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketMetricsConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            MetricsConfigurationList: undefined,\n            NextContinuationToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data.MetricsConfiguration === \"\") {\n            contents.MetricsConfigurationList = [];\n          }\n\n          if (data[\"MetricsConfiguration\"] !== undefined) {\n            contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList(__getArrayIfSingleItem(data[\"MetricsConfiguration\"]), context);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketMetricsConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListBucketsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Buckets: undefined,\n            Owner: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.Buckets === \"\") {\n            contents.Buckets = [];\n          }\n\n          if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\n            contents.Buckets = deserializeAws_restXmlBuckets(__getArrayIfSingleItem(data[\"Buckets\"][\"Bucket\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListMultipartUploadsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Bucket: undefined,\n            CommonPrefixes: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxUploads: undefined,\n            NextKeyMarker: undefined,\n            NextUploadIdMarker: undefined,\n            Prefix: undefined,\n            UploadIdMarker: undefined,\n            Uploads: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = __expectString(data[\"Bucket\"]);\n          }\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = __expectString(data[\"Delimiter\"]);\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = __expectString(data[\"EncodingType\"]);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = __expectString(data[\"KeyMarker\"]);\n          }\n\n          if (data[\"MaxUploads\"] !== undefined) {\n            contents.MaxUploads = __strictParseInt32(data[\"MaxUploads\"]);\n          }\n\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = __expectString(data[\"NextKeyMarker\"]);\n          }\n\n          if (data[\"NextUploadIdMarker\"] !== undefined) {\n            contents.NextUploadIdMarker = __expectString(data[\"NextUploadIdMarker\"]);\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = __expectString(data[\"Prefix\"]);\n          }\n\n          if (data[\"UploadIdMarker\"] !== undefined) {\n            contents.UploadIdMarker = __expectString(data[\"UploadIdMarker\"]);\n          }\n\n          if (data.Upload === \"\") {\n            contents.Uploads = [];\n          }\n\n          if (data[\"Upload\"] !== undefined) {\n            contents.Uploads = deserializeAws_restXmlMultipartUploadList(__getArrayIfSingleItem(data[\"Upload\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListMultipartUploadsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListObjectsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            Marker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextMarker: undefined,\n            Prefix: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          }\n\n          if (data[\"Contents\"] !== undefined) {\n            contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = __expectString(data[\"Delimiter\"]);\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = __expectString(data[\"EncodingType\"]);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"Marker\"] !== undefined) {\n            contents.Marker = __expectString(data[\"Marker\"]);\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = __expectString(data[\"Name\"]);\n          }\n\n          if (data[\"NextMarker\"] !== undefined) {\n            contents.NextMarker = __expectString(data[\"NextMarker\"]);\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = __expectString(data[\"Prefix\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchBucket\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectsV2Command = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListObjectsV2CommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            ContinuationToken: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyCount: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextContinuationToken: undefined,\n            Prefix: undefined,\n            StartAfter: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          }\n\n          if (data[\"Contents\"] !== undefined) {\n            contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n          }\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = __expectString(data[\"Delimiter\"]);\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = __expectString(data[\"EncodingType\"]);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"KeyCount\"] !== undefined) {\n            contents.KeyCount = __strictParseInt32(data[\"KeyCount\"]);\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = __expectString(data[\"Name\"]);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = __expectString(data[\"Prefix\"]);\n          }\n\n          if (data[\"StartAfter\"] !== undefined) {\n            contents.StartAfter = __expectString(data[\"StartAfter\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectsV2CommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchBucket\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectVersionsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListObjectVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            DeleteMarkers: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextKeyMarker: undefined,\n            NextVersionIdMarker: undefined,\n            Prefix: undefined,\n            VersionIdMarker: undefined,\n            Versions: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.DeleteMarker === \"\") {\n            contents.DeleteMarkers = [];\n          }\n\n          if (data[\"DeleteMarker\"] !== undefined) {\n            contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers(__getArrayIfSingleItem(data[\"DeleteMarker\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = __expectString(data[\"Delimiter\"]);\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = __expectString(data[\"EncodingType\"]);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = __expectString(data[\"KeyMarker\"]);\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = __expectString(data[\"Name\"]);\n          }\n\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = __expectString(data[\"NextKeyMarker\"]);\n          }\n\n          if (data[\"NextVersionIdMarker\"] !== undefined) {\n            contents.NextVersionIdMarker = __expectString(data[\"NextVersionIdMarker\"]);\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = __expectString(data[\"Prefix\"]);\n          }\n\n          if (data[\"VersionIdMarker\"] !== undefined) {\n            contents.VersionIdMarker = __expectString(data[\"VersionIdMarker\"]);\n          }\n\n          if (data.Version === \"\") {\n            contents.Versions = [];\n          }\n\n          if (data[\"Version\"] !== undefined) {\n            contents.Versions = deserializeAws_restXmlObjectVersionList(__getArrayIfSingleItem(data[\"Version\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectVersionsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListPartsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListPartsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            Initiator: undefined,\n            IsTruncated: undefined,\n            Key: undefined,\n            MaxParts: undefined,\n            NextPartNumberMarker: undefined,\n            Owner: undefined,\n            PartNumberMarker: undefined,\n            Parts: undefined,\n            RequestCharged: undefined,\n            StorageClass: undefined,\n            UploadId: undefined\n          };\n\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = __expectNonNull(__parseRfc7231DateTime(output.headers[\"x-amz-abort-date\"]));\n          }\n\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = __expectString(data[\"Bucket\"]);\n          }\n\n          if (data[\"Initiator\"] !== undefined) {\n            contents.Initiator = deserializeAws_restXmlInitiator(data[\"Initiator\"], context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = __expectString(data[\"Key\"]);\n          }\n\n          if (data[\"MaxParts\"] !== undefined) {\n            contents.MaxParts = __strictParseInt32(data[\"MaxParts\"]);\n          }\n\n          if (data[\"NextPartNumberMarker\"] !== undefined) {\n            contents.NextPartNumberMarker = __expectString(data[\"NextPartNumberMarker\"]);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          if (data[\"PartNumberMarker\"] !== undefined) {\n            contents.PartNumberMarker = __expectString(data[\"PartNumberMarker\"]);\n          }\n\n          if (data.Part === \"\") {\n            contents.Parts = [];\n          }\n\n          if (data[\"Part\"] !== undefined) {\n            contents.Parts = deserializeAws_restXmlParts(__getArrayIfSingleItem(data[\"Part\"]), context);\n          }\n\n          if (data[\"StorageClass\"] !== undefined) {\n            contents.StorageClass = __expectString(data[\"StorageClass\"]);\n          }\n\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = __expectString(data[\"UploadId\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListPartsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketCorsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketCorsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketInventoryConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketInventoryConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketLoggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketLoggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketMetricsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketMetricsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketNotificationConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketNotificationConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketOwnershipControlsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketOwnershipControlsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketReplicationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketReplicationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketRequestPaymentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketRequestPaymentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketVersioningCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketVersioningCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketWebsiteCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketWebsiteCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutObjectAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectLegalHoldCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectLegalHoldCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectLockConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectLockConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectRetentionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectRetentionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutPublicAccessBlockCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutPublicAccessBlockCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlRestoreObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlRestoreObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined,\n            RestoreOutputPath: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-restore-output-path\"] !== undefined) {\n            contents.RestoreOutputPath = output.headers[\"x-amz-restore-output-path\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlRestoreObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ObjectAlreadyInActiveTierError\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlSelectObjectContentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restXmlSelectObjectContentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        Payload: undefined\n      };\n      data = context.eventStreamMarshaller.deserialize(output.body, function (event) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var eventName, eventHeaders, eventMessage, parsedEvent;\n\n          var _a;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                eventName = Object.keys(event)[0];\n                eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\n                  accummulator[curr[0]] = curr[1].value;\n                  return accummulator;\n                }, {});\n                eventMessage = {\n                  headers: eventHeaders,\n                  body: event[eventName].body\n                };\n                parsedEvent = (_a = {}, _a[eventName] = eventMessage, _a);\n                return [4, deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];\n\n              case 1:\n                return [2, _b.sent()];\n            }\n          });\n        });\n      });\n      contents.Payload = data;\n      return [2, Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlSelectObjectContentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlUploadPartCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlUploadPartCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            ETag: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlUploadPartCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlUploadPartCopyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlUploadPartCopyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            CopyPartResult: undefined,\n            CopySourceVersionId: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlUploadPartCopyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlWriteGetObjectResponseCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlWriteGetObjectResponseCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlWriteGetObjectResponseCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlSelectObjectContentEventStream_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b, _c, _d, _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          if (!(output[\"Records\"] !== undefined)) return [3, 2];\n          _a = {};\n          return [4, deserializeAws_restXmlRecordsEvent_event(output[\"Records\"], context)];\n\n        case 1:\n          return [2, (_a.Records = _f.sent(), _a)];\n\n        case 2:\n          if (!(output[\"Stats\"] !== undefined)) return [3, 4];\n          _b = {};\n          return [4, deserializeAws_restXmlStatsEvent_event(output[\"Stats\"], context)];\n\n        case 3:\n          return [2, (_b.Stats = _f.sent(), _b)];\n\n        case 4:\n          if (!(output[\"Progress\"] !== undefined)) return [3, 6];\n          _c = {};\n          return [4, deserializeAws_restXmlProgressEvent_event(output[\"Progress\"], context)];\n\n        case 5:\n          return [2, (_c.Progress = _f.sent(), _c)];\n\n        case 6:\n          if (!(output[\"Cont\"] !== undefined)) return [3, 8];\n          _d = {};\n          return [4, deserializeAws_restXmlContinuationEvent_event(output[\"Cont\"], context)];\n\n        case 7:\n          return [2, (_d.Cont = _f.sent(), _d)];\n\n        case 8:\n          if (!(output[\"End\"] !== undefined)) return [3, 10];\n          _e = {};\n          return [4, deserializeAws_restXmlEndEvent_event(output[\"End\"], context)];\n\n        case 9:\n          return [2, (_e.End = _f.sent(), _e)];\n\n        case 10:\n          return [2, {\n            $unknown: output\n          }];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlContinuationEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlEndEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlProgressEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {};\n          _a = contents;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          _a.Details = _b.sent();\n          return [2, contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlRecordsEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      contents.Payload = output.body;\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlStatsEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {};\n          _a = contents;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          _a.Details = _b.sent();\n          return [2, contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlBucketAlreadyExistsResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BucketAlreadyExists\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BucketAlreadyOwnedByYou\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlInvalidObjectStateResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidObjectState\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        AccessTier: undefined,\n        StorageClass: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data[\"AccessTier\"] !== undefined) {\n        contents.AccessTier = __expectString(data[\"AccessTier\"]);\n      }\n\n      if (data[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(data[\"StorageClass\"]);\n      }\n\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchBucketResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchBucket\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchKeyResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchKey\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchUploadResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchUpload\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNotFoundResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NotFound\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ObjectAlreadyInActiveTierError\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ObjectNotInActiveTierError\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2, contents];\n    });\n  });\n};\n\nvar serializeAws_restXmlAbortIncompleteMultipartUpload = function (input, context) {\n  var bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\n\n  if (input.DaysAfterInitiation !== undefined && input.DaysAfterInitiation !== null) {\n    var node = new __XmlNode(\"DaysAfterInitiation\").addChildNode(new __XmlText(String(input.DaysAfterInitiation))).withName(\"DaysAfterInitiation\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccelerateConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccelerateConfiguration\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"BucketAccelerateStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccessControlPolicy = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlPolicy\");\n\n  if (input.Grants !== undefined && input.Grants !== null) {\n    var nodes = serializeAws_restXmlGrants(input.Grants, context);\n    var containerNode_1 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_1.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_1);\n  }\n\n  if (input.Owner !== undefined && input.Owner !== null) {\n    var node = serializeAws_restXmlOwner(input.Owner, context).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccessControlTranslation = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlTranslation\");\n\n  if (input.Owner !== undefined && input.Owner !== null) {\n    var node = new __XmlNode(\"OwnerOverride\").addChildNode(new __XmlText(input.Owner)).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAllowedHeaders = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"AllowedHeader\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAllowedMethods = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"AllowedMethod\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAllowedOrigins = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"AllowedOrigin\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAnalyticsAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"AnalyticsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClassAnalysis !== undefined && input.StorageClassAnalysis !== null) {\n    var node = serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsExportDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\n\n  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n    var node = serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsFilter\");\n  AnalyticsFilter.visit(input, {\n    Prefix: function (value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function (value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function (value) {\n      var node = serializeAws_restXmlAnalyticsAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function (name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsS3BucketDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\n\n  if (input.Format !== undefined && input.Format !== null) {\n    var node = new __XmlNode(\"AnalyticsS3ExportFileFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BucketAccountId !== undefined && input.BucketAccountId !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.BucketAccountId)).withName(\"BucketAccountId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlBucketLifecycleConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlBucketLoggingStatus = function (input, context) {\n  var bodyNode = new __XmlNode(\"BucketLoggingStatus\");\n\n  if (input.LoggingEnabled !== undefined && input.LoggingEnabled !== null) {\n    var node = serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedMultipartUpload = function (input, context) {\n  var bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\n\n  if (input.Parts !== undefined && input.Parts !== null) {\n    var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Part\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedPart = function (input, context) {\n  var bodyNode = new __XmlNode(\"CompletedPart\");\n\n  if (input.ETag !== undefined && input.ETag !== null) {\n    var node = new __XmlNode(\"ETag\").addChildNode(new __XmlText(input.ETag)).withName(\"ETag\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.PartNumber !== undefined && input.PartNumber !== null) {\n    var node = new __XmlNode(\"PartNumber\").addChildNode(new __XmlText(String(input.PartNumber))).withName(\"PartNumber\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedPartList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlCompletedPart(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlCondition = function (input, context) {\n  var bodyNode = new __XmlNode(\"Condition\");\n\n  if (input.HttpErrorCodeReturnedEquals !== undefined && input.HttpErrorCodeReturnedEquals !== null) {\n    var node = new __XmlNode(\"HttpErrorCodeReturnedEquals\").addChildNode(new __XmlText(input.HttpErrorCodeReturnedEquals)).withName(\"HttpErrorCodeReturnedEquals\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KeyPrefixEquals !== undefined && input.KeyPrefixEquals !== null) {\n    var node = new __XmlNode(\"KeyPrefixEquals\").addChildNode(new __XmlText(input.KeyPrefixEquals)).withName(\"KeyPrefixEquals\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"CORSConfiguration\");\n\n  if (input.CORSRules !== undefined && input.CORSRules !== null) {\n    var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CORSRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"CORSRule\");\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AllowedHeaders !== undefined && input.AllowedHeaders !== null) {\n    var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AllowedMethods !== undefined && input.AllowedMethods !== null) {\n    var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedMethod\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AllowedOrigins !== undefined && input.AllowedOrigins !== null) {\n    var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedOrigin\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.ExposeHeaders !== undefined && input.ExposeHeaders !== null) {\n    var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"ExposeHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.MaxAgeSeconds !== undefined && input.MaxAgeSeconds !== null) {\n    var node = new __XmlNode(\"MaxAgeSeconds\").addChildNode(new __XmlText(String(input.MaxAgeSeconds))).withName(\"MaxAgeSeconds\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlCORSRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlCreateBucketConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\n\n  if (input.LocationConstraint !== undefined && input.LocationConstraint !== null) {\n    var node = new __XmlNode(\"BucketLocationConstraint\").addChildNode(new __XmlText(input.LocationConstraint)).withName(\"LocationConstraint\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCSVInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"CSVInput\");\n\n  if (input.FileHeaderInfo !== undefined && input.FileHeaderInfo !== null) {\n    var node = new __XmlNode(\"FileHeaderInfo\").addChildNode(new __XmlText(input.FileHeaderInfo)).withName(\"FileHeaderInfo\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Comments !== undefined && input.Comments !== null) {\n    var node = new __XmlNode(\"Comments\").addChildNode(new __XmlText(input.Comments)).withName(\"Comments\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n    var node = new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n    var node = new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n    var node = new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AllowQuotedRecordDelimiter !== undefined && input.AllowQuotedRecordDelimiter !== null) {\n    var node = new __XmlNode(\"AllowQuotedRecordDelimiter\").addChildNode(new __XmlText(String(input.AllowQuotedRecordDelimiter))).withName(\"AllowQuotedRecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCSVOutput = function (input, context) {\n  var bodyNode = new __XmlNode(\"CSVOutput\");\n\n  if (input.QuoteFields !== undefined && input.QuoteFields !== null) {\n    var node = new __XmlNode(\"QuoteFields\").addChildNode(new __XmlText(input.QuoteFields)).withName(\"QuoteFields\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n    var node = new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n    var node = new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n    var node = new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDefaultRetention = function (input, context) {\n  var bodyNode = new __XmlNode(\"DefaultRetention\");\n\n  if (input.Mode !== undefined && input.Mode !== null) {\n    var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Years !== undefined && input.Years !== null) {\n    var node = new __XmlNode(\"Years\").addChildNode(new __XmlText(String(input.Years))).withName(\"Years\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDelete = function (input, context) {\n  var bodyNode = new __XmlNode(\"Delete\");\n\n  if (input.Objects !== undefined && input.Objects !== null) {\n    var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Object\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Quiet !== undefined && input.Quiet !== null) {\n    var node = new __XmlNode(\"Quiet\").addChildNode(new __XmlText(String(input.Quiet))).withName(\"Quiet\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDeleteMarkerReplication = function (input, context) {\n  var bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"DeleteMarkerReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"Destination\");\n\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Account !== undefined && input.Account !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.Account)).withName(\"Account\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AccessControlTranslation !== undefined && input.AccessControlTranslation !== null) {\n    var node = serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EncryptionConfiguration !== undefined && input.EncryptionConfiguration !== null) {\n    var node = serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplicationTime !== undefined && input.ReplicationTime !== null) {\n    var node = serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Metrics !== undefined && input.Metrics !== null) {\n    var node = serializeAws_restXmlMetrics(input.Metrics, context).withName(\"Metrics\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEncryption = function (input, context) {\n  var bodyNode = new __XmlNode(\"Encryption\");\n\n  if (input.EncryptionType !== undefined && input.EncryptionType !== null) {\n    var node = new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.EncryptionType)).withName(\"EncryptionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSKeyId !== undefined && input.KMSKeyId !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSKeyId)).withName(\"KMSKeyId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSContext !== undefined && input.KMSContext !== null) {\n    var node = new __XmlNode(\"KMSContext\").addChildNode(new __XmlText(input.KMSContext)).withName(\"KMSContext\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEncryptionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"EncryptionConfiguration\");\n\n  if (input.ReplicaKmsKeyID !== undefined && input.ReplicaKmsKeyID !== null) {\n    var node = new __XmlNode(\"ReplicaKmsKeyID\").addChildNode(new __XmlText(input.ReplicaKmsKeyID)).withName(\"ReplicaKmsKeyID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlErrorDocument = function (input, context) {\n  var bodyNode = new __XmlNode(\"ErrorDocument\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEventBridgeConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"EventBridgeConfiguration\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEventList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"Event\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlExistingObjectReplication = function (input, context) {\n  var bodyNode = new __XmlNode(\"ExistingObjectReplication\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ExistingObjectReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlExposeHeaders = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"ExposeHeader\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlFilterRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"FilterRule\");\n\n  if (input.Name !== undefined && input.Name !== null) {\n    var node = new __XmlNode(\"FilterRuleName\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"FilterRuleValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlFilterRuleList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlFilterRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlGlacierJobParameters = function (input, context) {\n  var bodyNode = new __XmlNode(\"GlacierJobParameters\");\n\n  if (input.Tier !== undefined && input.Tier !== null) {\n    var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrant = function (input, context) {\n  var bodyNode = new __XmlNode(\"Grant\");\n\n  if (input.Grantee !== undefined && input.Grantee !== null) {\n    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    node.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Permission !== undefined && input.Permission !== null) {\n    var node = new __XmlNode(\"Permission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrantee = function (input, context) {\n  var bodyNode = new __XmlNode(\"Grantee\");\n\n  if (input.DisplayName !== undefined && input.DisplayName !== null) {\n    var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EmailAddress !== undefined && input.EmailAddress !== null) {\n    var node = new __XmlNode(\"EmailAddress\").addChildNode(new __XmlText(input.EmailAddress)).withName(\"EmailAddress\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.URI !== undefined && input.URI !== null) {\n    var node = new __XmlNode(\"URI\").addChildNode(new __XmlText(input.URI)).withName(\"URI\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Type !== undefined && input.Type !== null) {\n    bodyNode.addAttribute(\"xsi:type\", input.Type);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrants = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlGrant(entry, context);\n    return node.withName(\"Grant\");\n  });\n};\n\nvar serializeAws_restXmlIndexDocument = function (input, context) {\n  var bodyNode = new __XmlNode(\"IndexDocument\");\n\n  if (input.Suffix !== undefined && input.Suffix !== null) {\n    var node = new __XmlNode(\"Suffix\").addChildNode(new __XmlText(input.Suffix)).withName(\"Suffix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInputSerialization = function (input, context) {\n  var bodyNode = new __XmlNode(\"InputSerialization\");\n\n  if (input.CSV !== undefined && input.CSV !== null) {\n    var node = serializeAws_restXmlCSVInput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.CompressionType !== undefined && input.CompressionType !== null) {\n    var node = new __XmlNode(\"CompressionType\").addChildNode(new __XmlText(input.CompressionType)).withName(\"CompressionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.JSON !== undefined && input.JSON !== null) {\n    var node = serializeAws_restXmlJSONInput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Parquet !== undefined && input.Parquet !== null) {\n    var node = serializeAws_restXmlParquetInput(input.Parquet, context).withName(\"Parquet\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlIntelligentTieringAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlIntelligentTieringConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"IntelligentTieringId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlIntelligentTieringFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"IntelligentTieringStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tierings !== undefined && input.Tierings !== null) {\n    var nodes = serializeAws_restXmlTieringList(input.Tierings, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tiering\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlIntelligentTieringFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringFilter\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tag !== undefined && input.Tag !== null) {\n    var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.And !== undefined && input.And !== null) {\n    var node = serializeAws_restXmlIntelligentTieringAndOperator(input.And, context).withName(\"And\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryConfiguration\");\n\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlInventoryDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IsEnabled !== undefined && input.IsEnabled !== null) {\n    var node = new __XmlNode(\"IsEnabled\").addChildNode(new __XmlText(String(input.IsEnabled))).withName(\"IsEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlInventoryFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"InventoryId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IncludedObjectVersions !== undefined && input.IncludedObjectVersions !== null) {\n    var node = new __XmlNode(\"InventoryIncludedObjectVersions\").addChildNode(new __XmlText(input.IncludedObjectVersions)).withName(\"IncludedObjectVersions\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OptionalFields !== undefined && input.OptionalFields !== null) {\n    var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);\n    var containerNode_2 = new __XmlNode(\"OptionalFields\");\n    nodes.map(function (node) {\n      containerNode_2.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_2);\n  }\n\n  if (input.Schedule !== undefined && input.Schedule !== null) {\n    var node = serializeAws_restXmlInventorySchedule(input.Schedule, context).withName(\"Schedule\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryDestination\");\n\n  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n    var node = serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryEncryption = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryEncryption\");\n\n  if (input.SSES3 !== undefined && input.SSES3 !== null) {\n    var node = serializeAws_restXmlSSES3(input.SSES3, context).withName(\"SSE-S3\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SSEKMS !== undefined && input.SSEKMS !== null) {\n    var node = serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryFilter\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryOptionalFields = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"InventoryOptionalField\").addChildNode(new __XmlText(entry));\n    return node.withName(\"Field\");\n  });\n};\n\nvar serializeAws_restXmlInventoryS3BucketDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\n\n  if (input.AccountId !== undefined && input.AccountId !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.AccountId)).withName(\"AccountId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Format !== undefined && input.Format !== null) {\n    var node = new __XmlNode(\"InventoryFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Encryption !== undefined && input.Encryption !== null) {\n    var node = serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventorySchedule = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventorySchedule\");\n\n  if (input.Frequency !== undefined && input.Frequency !== null) {\n    var node = new __XmlNode(\"InventoryFrequency\").addChildNode(new __XmlText(input.Frequency)).withName(\"Frequency\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlJSONInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"JSONInput\");\n\n  if (input.Type !== undefined && input.Type !== null) {\n    var node = new __XmlNode(\"JSONType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlJSONOutput = function (input, context) {\n  var bodyNode = new __XmlNode(\"JSONOutput\");\n\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLambdaFunctionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.LambdaFunctionArn !== undefined && input.LambdaFunctionArn !== null) {\n    var node = new __XmlNode(\"LambdaFunctionArn\").addChildNode(new __XmlText(input.LambdaFunctionArn)).withName(\"CloudFunction\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLambdaFunctionConfigurationList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlLifecycleExpiration = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleExpiration\");\n\n  if (input.Date !== undefined && input.Date !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExpiredObjectDeleteMarker !== undefined && input.ExpiredObjectDeleteMarker !== null) {\n    var node = new __XmlNode(\"ExpiredObjectDeleteMarker\").addChildNode(new __XmlText(String(input.ExpiredObjectDeleteMarker))).withName(\"ExpiredObjectDeleteMarker\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRule\");\n\n  if (input.Expiration !== undefined && input.Expiration !== null) {\n    var node = serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName(\"Expiration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ExpirationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Transitions !== undefined && input.Transitions !== null) {\n    var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Transition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.NoncurrentVersionTransitions !== undefined && input.NoncurrentVersionTransitions !== null) {\n    var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"NoncurrentVersionTransition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.NoncurrentVersionExpiration !== undefined && input.NoncurrentVersionExpiration !== null) {\n    var node = serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AbortIncompleteMultipartUpload !== undefined && input.AbortIncompleteMultipartUpload !== null) {\n    var node = serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRuleAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.ObjectSizeGreaterThan !== undefined && input.ObjectSizeGreaterThan !== null) {\n    var node = new __XmlNode(\"ObjectSizeGreaterThanBytes\").addChildNode(new __XmlText(String(input.ObjectSizeGreaterThan))).withName(\"ObjectSizeGreaterThan\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ObjectSizeLessThan !== undefined && input.ObjectSizeLessThan !== null) {\n    var node = new __XmlNode(\"ObjectSizeLessThanBytes\").addChildNode(new __XmlText(String(input.ObjectSizeLessThan))).withName(\"ObjectSizeLessThan\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRuleFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\n  LifecycleRuleFilter.visit(input, {\n    Prefix: function (value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function (value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    ObjectSizeGreaterThan: function (value) {\n      var node = new __XmlNode(\"ObjectSizeGreaterThanBytes\").addChildNode(new __XmlText(String(value))).withName(\"ObjectSizeGreaterThan\");\n      bodyNode.addChildNode(node);\n    },\n    ObjectSizeLessThan: function (value) {\n      var node = new __XmlNode(\"ObjectSizeLessThanBytes\").addChildNode(new __XmlText(String(value))).withName(\"ObjectSizeLessThan\");\n      bodyNode.addChildNode(node);\n    },\n    And: function (value) {\n      var node = serializeAws_restXmlLifecycleRuleAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function (name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlLifecycleRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlLoggingEnabled = function (input, context) {\n  var bodyNode = new __XmlNode(\"LoggingEnabled\");\n\n  if (input.TargetBucket !== undefined && input.TargetBucket !== null) {\n    var node = new __XmlNode(\"TargetBucket\").addChildNode(new __XmlText(input.TargetBucket)).withName(\"TargetBucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.TargetGrants !== undefined && input.TargetGrants !== null) {\n    var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);\n    var containerNode_3 = new __XmlNode(\"TargetGrants\");\n    nodes.map(function (node) {\n      containerNode_3.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_3);\n  }\n\n  if (input.TargetPrefix !== undefined && input.TargetPrefix !== null) {\n    var node = new __XmlNode(\"TargetPrefix\").addChildNode(new __XmlText(input.TargetPrefix)).withName(\"TargetPrefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetadataEntry = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetadataEntry\");\n\n  if (input.Name !== undefined && input.Name !== null) {\n    var node = new __XmlNode(\"MetadataKey\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"MetadataValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetrics = function (input, context) {\n  var bodyNode = new __XmlNode(\"Metrics\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"MetricsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EventThreshold !== undefined && input.EventThreshold !== null) {\n    var node = serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AccessPointArn !== undefined && input.AccessPointArn !== null) {\n    var node = new __XmlNode(\"AccessPointArn\").addChildNode(new __XmlText(input.AccessPointArn)).withName(\"AccessPointArn\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"MetricsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlMetricsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsFilter\");\n  MetricsFilter.visit(input, {\n    Prefix: function (value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function (value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    AccessPointArn: function (value) {\n      var node = new __XmlNode(\"AccessPointArn\").addChildNode(new __XmlText(value)).withName(\"AccessPointArn\");\n      bodyNode.addChildNode(node);\n    },\n    And: function (value) {\n      var node = serializeAws_restXmlMetricsAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function (name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionExpiration = function (input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\n\n  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.NewerNoncurrentVersions !== undefined && input.NewerNoncurrentVersions !== null) {\n    var node = new __XmlNode(\"VersionCount\").addChildNode(new __XmlText(String(input.NewerNoncurrentVersions))).withName(\"NewerNoncurrentVersions\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionTransition = function (input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\n\n  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.NewerNoncurrentVersions !== undefined && input.NewerNoncurrentVersions !== null) {\n    var node = new __XmlNode(\"VersionCount\").addChildNode(new __XmlText(String(input.NewerNoncurrentVersions))).withName(\"NewerNoncurrentVersions\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionTransitionList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlNotificationConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfiguration\");\n\n  if (input.TopicConfigurations !== undefined && input.TopicConfigurations !== null) {\n    var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"TopicConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.QueueConfigurations !== undefined && input.QueueConfigurations !== null) {\n    var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"QueueConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.LambdaFunctionConfigurations !== undefined && input.LambdaFunctionConfigurations !== null) {\n    var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CloudFunctionConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.EventBridgeConfiguration !== undefined && input.EventBridgeConfiguration !== null) {\n    var node = serializeAws_restXmlEventBridgeConfiguration(input.EventBridgeConfiguration, context).withName(\"EventBridgeConfiguration\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNotificationConfigurationFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = serializeAws_restXmlS3KeyFilter(input.Key, context).withName(\"S3Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectIdentifier = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectIdentifier\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.VersionId !== undefined && input.VersionId !== null) {\n    var node = new __XmlNode(\"ObjectVersionId\").addChildNode(new __XmlText(input.VersionId)).withName(\"VersionId\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectIdentifierList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlObjectIdentifier(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlObjectLockConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\n\n  if (input.ObjectLockEnabled !== undefined && input.ObjectLockEnabled !== null) {\n    var node = new __XmlNode(\"ObjectLockEnabled\").addChildNode(new __XmlText(input.ObjectLockEnabled)).withName(\"ObjectLockEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Rule !== undefined && input.Rule !== null) {\n    var node = serializeAws_restXmlObjectLockRule(input.Rule, context).withName(\"Rule\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockLegalHold = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ObjectLockLegalHoldStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockRetention = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRetention\");\n\n  if (input.Mode !== undefined && input.Mode !== null) {\n    var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RetainUntilDate !== undefined && input.RetainUntilDate !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\")).withName(\"RetainUntilDate\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRule\");\n\n  if (input.DefaultRetention !== undefined && input.DefaultRetention !== null) {\n    var node = serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOutputLocation = function (input, context) {\n  var bodyNode = new __XmlNode(\"OutputLocation\");\n\n  if (input.S3 !== undefined && input.S3 !== null) {\n    var node = serializeAws_restXmlS3Location(input.S3, context).withName(\"S3\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOutputSerialization = function (input, context) {\n  var bodyNode = new __XmlNode(\"OutputSerialization\");\n\n  if (input.CSV !== undefined && input.CSV !== null) {\n    var node = serializeAws_restXmlCSVOutput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.JSON !== undefined && input.JSON !== null) {\n    var node = serializeAws_restXmlJSONOutput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwner = function (input, context) {\n  var bodyNode = new __XmlNode(\"Owner\");\n\n  if (input.DisplayName !== undefined && input.DisplayName !== null) {\n    var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwnershipControls = function (input, context) {\n  var bodyNode = new __XmlNode(\"OwnershipControls\");\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlOwnershipControlsRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwnershipControlsRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"OwnershipControlsRule\");\n\n  if (input.ObjectOwnership !== undefined && input.ObjectOwnership !== null) {\n    var node = new __XmlNode(\"ObjectOwnership\").addChildNode(new __XmlText(input.ObjectOwnership)).withName(\"ObjectOwnership\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwnershipControlsRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlOwnershipControlsRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlParquetInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"ParquetInput\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlPublicAccessBlockConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\n\n  if (input.BlockPublicAcls !== undefined && input.BlockPublicAcls !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicAcls))).withName(\"BlockPublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IgnorePublicAcls !== undefined && input.IgnorePublicAcls !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.IgnorePublicAcls))).withName(\"IgnorePublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BlockPublicPolicy !== undefined && input.BlockPublicPolicy !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicPolicy))).withName(\"BlockPublicPolicy\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RestrictPublicBuckets !== undefined && input.RestrictPublicBuckets !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.RestrictPublicBuckets))).withName(\"RestrictPublicBuckets\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlQueueConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"QueueConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QueueArn !== undefined && input.QueueArn !== null) {\n    var node = new __XmlNode(\"QueueArn\").addChildNode(new __XmlText(input.QueueArn)).withName(\"Queue\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlQueueConfigurationList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlQueueConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlRedirect = function (input, context) {\n  var bodyNode = new __XmlNode(\"Redirect\");\n\n  if (input.HostName !== undefined && input.HostName !== null) {\n    var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.HttpRedirectCode !== undefined && input.HttpRedirectCode !== null) {\n    var node = new __XmlNode(\"HttpRedirectCode\").addChildNode(new __XmlText(input.HttpRedirectCode)).withName(\"HttpRedirectCode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Protocol !== undefined && input.Protocol !== null) {\n    var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplaceKeyPrefixWith !== undefined && input.ReplaceKeyPrefixWith !== null) {\n    var node = new __XmlNode(\"ReplaceKeyPrefixWith\").addChildNode(new __XmlText(input.ReplaceKeyPrefixWith)).withName(\"ReplaceKeyPrefixWith\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplaceKeyWith !== undefined && input.ReplaceKeyWith !== null) {\n    var node = new __XmlNode(\"ReplaceKeyWith\").addChildNode(new __XmlText(input.ReplaceKeyWith)).withName(\"ReplaceKeyWith\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRedirectAllRequestsTo = function (input, context) {\n  var bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\n\n  if (input.HostName !== undefined && input.HostName !== null) {\n    var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Protocol !== undefined && input.Protocol !== null) {\n    var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicaModifications = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicaModifications\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicaModificationsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationConfiguration\");\n\n  if (input.Role !== undefined && input.Role !== null) {\n    var node = new __XmlNode(\"Role\").addChildNode(new __XmlText(input.Role)).withName(\"Role\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRule\");\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Priority !== undefined && input.Priority !== null) {\n    var node = new __XmlNode(\"Priority\").addChildNode(new __XmlText(String(input.Priority))).withName(\"Priority\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicationRuleStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SourceSelectionCriteria !== undefined && input.SourceSelectionCriteria !== null) {\n    var node = serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExistingObjectReplication !== undefined && input.ExistingObjectReplication !== null) {\n    var node = serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.DeleteMarkerReplication !== undefined && input.DeleteMarkerReplication !== null) {\n    var node = serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRuleAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRuleFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\n  ReplicationRuleFilter.visit(input, {\n    Prefix: function (value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function (value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function (value) {\n      var node = serializeAws_restXmlReplicationRuleAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function (name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlReplicationRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlReplicationTime = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTime\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicationTimeStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Time !== undefined && input.Time !== null) {\n    var node = serializeAws_restXmlReplicationTimeValue(input.Time, context).withName(\"Time\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationTimeValue = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTimeValue\");\n\n  if (input.Minutes !== undefined && input.Minutes !== null) {\n    var node = new __XmlNode(\"Minutes\").addChildNode(new __XmlText(String(input.Minutes))).withName(\"Minutes\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRequestPaymentConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\n\n  if (input.Payer !== undefined && input.Payer !== null) {\n    var node = new __XmlNode(\"Payer\").addChildNode(new __XmlText(input.Payer)).withName(\"Payer\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRequestProgress = function (input, context) {\n  var bodyNode = new __XmlNode(\"RequestProgress\");\n\n  if (input.Enabled !== undefined && input.Enabled !== null) {\n    var node = new __XmlNode(\"EnableRequestProgress\").addChildNode(new __XmlText(String(input.Enabled))).withName(\"Enabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRestoreRequest = function (input, context) {\n  var bodyNode = new __XmlNode(\"RestoreRequest\");\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.GlacierJobParameters !== undefined && input.GlacierJobParameters !== null) {\n    var node = serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Type !== undefined && input.Type !== null) {\n    var node = new __XmlNode(\"RestoreRequestType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tier !== undefined && input.Tier !== null) {\n    var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Description !== undefined && input.Description !== null) {\n    var node = new __XmlNode(\"Description\").addChildNode(new __XmlText(input.Description)).withName(\"Description\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SelectParameters !== undefined && input.SelectParameters !== null) {\n    var node = serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName(\"SelectParameters\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OutputLocation !== undefined && input.OutputLocation !== null) {\n    var node = serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName(\"OutputLocation\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRoutingRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"RoutingRule\");\n\n  if (input.Condition !== undefined && input.Condition !== null) {\n    var node = serializeAws_restXmlCondition(input.Condition, context).withName(\"Condition\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Redirect !== undefined && input.Redirect !== null) {\n    var node = serializeAws_restXmlRedirect(input.Redirect, context).withName(\"Redirect\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRoutingRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlRoutingRule(entry, context);\n    return node.withName(\"RoutingRule\");\n  });\n};\n\nvar serializeAws_restXmlS3KeyFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"S3KeyFilter\");\n\n  if (input.FilterRules !== undefined && input.FilterRules !== null) {\n    var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"FilterRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlS3Location = function (input, context) {\n  var bodyNode = new __XmlNode(\"S3Location\");\n\n  if (input.BucketName !== undefined && input.BucketName !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.BucketName)).withName(\"BucketName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"LocationPrefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Encryption !== undefined && input.Encryption !== null) {\n    var node = serializeAws_restXmlEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.CannedACL !== undefined && input.CannedACL !== null) {\n    var node = new __XmlNode(\"ObjectCannedACL\").addChildNode(new __XmlText(input.CannedACL)).withName(\"CannedACL\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AccessControlList !== undefined && input.AccessControlList !== null) {\n    var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);\n    var containerNode_4 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_4.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_4);\n  }\n\n  if (input.Tagging !== undefined && input.Tagging !== null) {\n    var node = serializeAws_restXmlTagging(input.Tagging, context).withName(\"Tagging\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.UserMetadata !== undefined && input.UserMetadata !== null) {\n    var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);\n    var containerNode_5 = new __XmlNode(\"UserMetadata\");\n    nodes.map(function (node) {\n      containerNode_5.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_5);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlScanRange = function (input, context) {\n  var bodyNode = new __XmlNode(\"ScanRange\");\n\n  if (input.Start !== undefined && input.Start !== null) {\n    var node = new __XmlNode(\"Start\").addChildNode(new __XmlText(String(input.Start))).withName(\"Start\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.End !== undefined && input.End !== null) {\n    var node = new __XmlNode(\"End\").addChildNode(new __XmlText(String(input.End))).withName(\"End\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSelectParameters = function (input, context) {\n  var bodyNode = new __XmlNode(\"SelectParameters\");\n\n  if (input.InputSerialization !== undefined && input.InputSerialization !== null) {\n    var node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExpressionType !== undefined && input.ExpressionType !== null) {\n    var node = new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Expression !== undefined && input.Expression !== null) {\n    var node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OutputSerialization !== undefined && input.OutputSerialization !== null) {\n    var node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionByDefault = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\n\n  if (input.SSEAlgorithm !== undefined && input.SSEAlgorithm !== null) {\n    var node = new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.SSEAlgorithm)).withName(\"SSEAlgorithm\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSMasterKeyID !== undefined && input.KMSMasterKeyID !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSMasterKeyID)).withName(\"KMSMasterKeyID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\n\n  if (input.ApplyServerSideEncryptionByDefault !== undefined && input.ApplyServerSideEncryptionByDefault !== null) {\n    var node = serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BucketKeyEnabled !== undefined && input.BucketKeyEnabled !== null) {\n    var node = new __XmlNode(\"BucketKeyEnabled\").addChildNode(new __XmlText(String(input.BucketKeyEnabled))).withName(\"BucketKeyEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlSourceSelectionCriteria = function (input, context) {\n  var bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\n\n  if (input.SseKmsEncryptedObjects !== undefined && input.SseKmsEncryptedObjects !== null) {\n    var node = serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplicaModifications !== undefined && input.ReplicaModifications !== null) {\n    var node = serializeAws_restXmlReplicaModifications(input.ReplicaModifications, context).withName(\"ReplicaModifications\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSSEKMS = function (input, context) {\n  var bodyNode = new __XmlNode(\"SSE-KMS\");\n\n  if (input.KeyId !== undefined && input.KeyId !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KeyId)).withName(\"KeyId\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSseKmsEncryptedObjects = function (input, context) {\n  var bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"SseKmsEncryptedObjectsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSSES3 = function (input, context) {\n  var bodyNode = new __XmlNode(\"SSE-S3\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlStorageClassAnalysis = function (input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysis\");\n\n  if (input.DataExport !== undefined && input.DataExport !== null) {\n    var node = serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlStorageClassAnalysisDataExport = function (input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\n\n  if (input.OutputSchemaVersion !== undefined && input.OutputSchemaVersion !== null) {\n    var node = new __XmlNode(\"StorageClassAnalysisSchemaVersion\").addChildNode(new __XmlText(input.OutputSchemaVersion)).withName(\"OutputSchemaVersion\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTag = function (input, context) {\n  var bodyNode = new __XmlNode(\"Tag\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"Value\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTagging = function (input, context) {\n  var bodyNode = new __XmlNode(\"Tagging\");\n\n  if (input.TagSet !== undefined && input.TagSet !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.TagSet, context);\n    var containerNode_6 = new __XmlNode(\"TagSet\");\n    nodes.map(function (node) {\n      containerNode_6.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_6);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTagSet = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTag(entry, context);\n    return node.withName(\"Tag\");\n  });\n};\n\nvar serializeAws_restXmlTargetGrant = function (input, context) {\n  var bodyNode = new __XmlNode(\"TargetGrant\");\n\n  if (input.Grantee !== undefined && input.Grantee !== null) {\n    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    node.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Permission !== undefined && input.Permission !== null) {\n    var node = new __XmlNode(\"BucketLogsPermission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTargetGrants = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTargetGrant(entry, context);\n    return node.withName(\"Grant\");\n  });\n};\n\nvar serializeAws_restXmlTiering = function (input, context) {\n  var bodyNode = new __XmlNode(\"Tiering\");\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"IntelligentTieringDays\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AccessTier !== undefined && input.AccessTier !== null) {\n    var node = new __XmlNode(\"IntelligentTieringAccessTier\").addChildNode(new __XmlText(input.AccessTier)).withName(\"AccessTier\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTieringList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTiering(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlTopicConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"TopicConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.TopicArn !== undefined && input.TopicArn !== null) {\n    var node = new __XmlNode(\"TopicArn\").addChildNode(new __XmlText(input.TopicArn)).withName(\"Topic\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTopicConfigurationList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTopicConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlTransition = function (input, context) {\n  var bodyNode = new __XmlNode(\"Transition\");\n\n  if (input.Date !== undefined && input.Date !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTransitionList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTransition(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlUserMetadata = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlMetadataEntry(entry, context);\n    return node.withName(\"MetadataEntry\");\n  });\n};\n\nvar serializeAws_restXmlVersioningConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"VersioningConfiguration\");\n\n  if (input.MFADelete !== undefined && input.MFADelete !== null) {\n    var node = new __XmlNode(\"MFADelete\").addChildNode(new __XmlText(input.MFADelete)).withName(\"MfaDelete\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"BucketVersioningStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlWebsiteConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"WebsiteConfiguration\");\n\n  if (input.ErrorDocument !== undefined && input.ErrorDocument !== null) {\n    var node = serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IndexDocument !== undefined && input.IndexDocument !== null) {\n    var node = serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName(\"IndexDocument\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RedirectAllRequestsTo !== undefined && input.RedirectAllRequestsTo !== null) {\n    var node = serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RoutingRules !== undefined && input.RoutingRules !== null) {\n    var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);\n    var containerNode_7 = new __XmlNode(\"RoutingRules\");\n    nodes.map(function (node) {\n      containerNode_7.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_7);\n  }\n\n  return bodyNode;\n};\n\nvar deserializeAws_restXmlAbortIncompleteMultipartUpload = function (output, context) {\n  var contents = {\n    DaysAfterInitiation: undefined\n  };\n\n  if (output[\"DaysAfterInitiation\"] !== undefined) {\n    contents.DaysAfterInitiation = __strictParseInt32(output[\"DaysAfterInitiation\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAccessControlTranslation = function (output, context) {\n  var contents = {\n    Owner: undefined\n  };\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = __expectString(output[\"Owner\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAllowedHeaders = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restXmlAllowedMethods = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restXmlAllowedOrigins = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restXmlAnalyticsAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined,\n    StorageClassAnalysis: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlAnalyticsFilter(__expectUnion(output[\"Filter\"]), context);\n  }\n\n  if (output[\"StorageClassAnalysis\"] !== undefined) {\n    contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlAnalyticsConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlAnalyticsExportDestination = function (output, context) {\n  var contents = {\n    S3BucketDestination: undefined\n  };\n\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsFilter = function (output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: __expectString(output[\"Prefix\"])\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlAnalyticsAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlAnalyticsS3BucketDestination = function (output, context) {\n  var contents = {\n    Format: undefined,\n    BucketAccountId: undefined,\n    Bucket: undefined,\n    Prefix: undefined\n  };\n\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = __expectString(output[\"Format\"]);\n  }\n\n  if (output[\"BucketAccountId\"] !== undefined) {\n    contents.BucketAccountId = __expectString(output[\"BucketAccountId\"]);\n  }\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = __expectString(output[\"Bucket\"]);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlBucket = function (output, context) {\n  var contents = {\n    Name: undefined,\n    CreationDate: undefined\n  };\n\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = __expectString(output[\"Name\"]);\n  }\n\n  if (output[\"CreationDate\"] !== undefined) {\n    contents.CreationDate = __expectNonNull(__parseRfc3339DateTime(output[\"CreationDate\"]));\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlBuckets = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlBucket(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlCommonPrefix = function (output, context) {\n  var contents = {\n    Prefix: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCommonPrefixList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlCommonPrefix(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlCondition = function (output, context) {\n  var contents = {\n    HttpErrorCodeReturnedEquals: undefined,\n    KeyPrefixEquals: undefined\n  };\n\n  if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n    contents.HttpErrorCodeReturnedEquals = __expectString(output[\"HttpErrorCodeReturnedEquals\"]);\n  }\n\n  if (output[\"KeyPrefixEquals\"] !== undefined) {\n    contents.KeyPrefixEquals = __expectString(output[\"KeyPrefixEquals\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlContinuationEvent = function (output, context) {\n  var contents = {};\n  return contents;\n};\n\nvar deserializeAws_restXmlCopyObjectResult = function (output, context) {\n  var contents = {\n    ETag: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = __expectString(output[\"ETag\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCopyPartResult = function (output, context) {\n  var contents = {\n    ETag: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = __expectString(output[\"ETag\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCORSRule = function (output, context) {\n  var contents = {\n    ID: undefined,\n    AllowedHeaders: undefined,\n    AllowedMethods: undefined,\n    AllowedOrigins: undefined,\n    ExposeHeaders: undefined,\n    MaxAgeSeconds: undefined\n  };\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = __expectString(output[\"ID\"]);\n  }\n\n  if (output.AllowedHeader === \"\") {\n    contents.AllowedHeaders = [];\n  }\n\n  if (output[\"AllowedHeader\"] !== undefined) {\n    contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders(__getArrayIfSingleItem(output[\"AllowedHeader\"]), context);\n  }\n\n  if (output.AllowedMethod === \"\") {\n    contents.AllowedMethods = [];\n  }\n\n  if (output[\"AllowedMethod\"] !== undefined) {\n    contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(__getArrayIfSingleItem(output[\"AllowedMethod\"]), context);\n  }\n\n  if (output.AllowedOrigin === \"\") {\n    contents.AllowedOrigins = [];\n  }\n\n  if (output[\"AllowedOrigin\"] !== undefined) {\n    contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins(__getArrayIfSingleItem(output[\"AllowedOrigin\"]), context);\n  }\n\n  if (output.ExposeHeader === \"\") {\n    contents.ExposeHeaders = [];\n  }\n\n  if (output[\"ExposeHeader\"] !== undefined) {\n    contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders(__getArrayIfSingleItem(output[\"ExposeHeader\"]), context);\n  }\n\n  if (output[\"MaxAgeSeconds\"] !== undefined) {\n    contents.MaxAgeSeconds = __strictParseInt32(output[\"MaxAgeSeconds\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCORSRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlCORSRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDefaultRetention = function (output, context) {\n  var contents = {\n    Mode: undefined,\n    Days: undefined,\n    Years: undefined\n  };\n\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = __expectString(output[\"Mode\"]);\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = __strictParseInt32(output[\"Days\"]);\n  }\n\n  if (output[\"Years\"] !== undefined) {\n    contents.Years = __strictParseInt32(output[\"Years\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeletedObject = function (output, context) {\n  var contents = {\n    Key: undefined,\n    VersionId: undefined,\n    DeleteMarker: undefined,\n    DeleteMarkerVersionId: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = __expectString(output[\"VersionId\"]);\n  }\n\n  if (output[\"DeleteMarker\"] !== undefined) {\n    contents.DeleteMarker = __parseBoolean(output[\"DeleteMarker\"]);\n  }\n\n  if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n    contents.DeleteMarkerVersionId = __expectString(output[\"DeleteMarkerVersionId\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeletedObjects = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlDeletedObject(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDeleteMarkerEntry = function (output, context) {\n  var contents = {\n    Owner: undefined,\n    Key: undefined,\n    VersionId: undefined,\n    IsLatest: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = __expectString(output[\"VersionId\"]);\n  }\n\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = __parseBoolean(output[\"IsLatest\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeleteMarkerReplication = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeleteMarkers = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlDeleteMarkerEntry(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDestination = function (output, context) {\n  var contents = {\n    Bucket: undefined,\n    Account: undefined,\n    StorageClass: undefined,\n    AccessControlTranslation: undefined,\n    EncryptionConfiguration: undefined,\n    ReplicationTime: undefined,\n    Metrics: undefined\n  };\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = __expectString(output[\"Bucket\"]);\n  }\n\n  if (output[\"Account\"] !== undefined) {\n    contents.Account = __expectString(output[\"Account\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = __expectString(output[\"StorageClass\"]);\n  }\n\n  if (output[\"AccessControlTranslation\"] !== undefined) {\n    contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output[\"AccessControlTranslation\"], context);\n  }\n\n  if (output[\"EncryptionConfiguration\"] !== undefined) {\n    contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\n  }\n\n  if (output[\"ReplicationTime\"] !== undefined) {\n    contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output[\"ReplicationTime\"], context);\n  }\n\n  if (output[\"Metrics\"] !== undefined) {\n    contents.Metrics = deserializeAws_restXmlMetrics(output[\"Metrics\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlEncryptionConfiguration = function (output, context) {\n  var contents = {\n    ReplicaKmsKeyID: undefined\n  };\n\n  if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n    contents.ReplicaKmsKeyID = __expectString(output[\"ReplicaKmsKeyID\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlEndEvent = function (output, context) {\n  var contents = {};\n  return contents;\n};\n\nvar deserializeAws_restXml_Error = function (output, context) {\n  var contents = {\n    Key: undefined,\n    VersionId: undefined,\n    Code: undefined,\n    Message: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = __expectString(output[\"VersionId\"]);\n  }\n\n  if (output[\"Code\"] !== undefined) {\n    contents.Code = __expectString(output[\"Code\"]);\n  }\n\n  if (output[\"Message\"] !== undefined) {\n    contents.Message = __expectString(output[\"Message\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlErrorDocument = function (output, context) {\n  var contents = {\n    Key: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlErrors = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXml_Error(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlEventBridgeConfiguration = function (output, context) {\n  var contents = {};\n  return contents;\n};\n\nvar deserializeAws_restXmlEventList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restXmlExistingObjectReplication = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlExposeHeaders = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restXmlFilterRule = function (output, context) {\n  var contents = {\n    Name: undefined,\n    Value: undefined\n  };\n\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = __expectString(output[\"Name\"]);\n  }\n\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = __expectString(output[\"Value\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlFilterRuleList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlFilterRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlGrant = function (output, context) {\n  var contents = {\n    Grantee: undefined,\n    Permission: undefined\n  };\n\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = __expectString(output[\"Permission\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlGrantee = function (output, context) {\n  var contents = {\n    DisplayName: undefined,\n    EmailAddress: undefined,\n    ID: undefined,\n    URI: undefined,\n    Type: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = __expectString(output[\"DisplayName\"]);\n  }\n\n  if (output[\"EmailAddress\"] !== undefined) {\n    contents.EmailAddress = __expectString(output[\"EmailAddress\"]);\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = __expectString(output[\"ID\"]);\n  }\n\n  if (output[\"URI\"] !== undefined) {\n    contents.URI = __expectString(output[\"URI\"]);\n  }\n\n  if (output[\"xsi:type\"] !== undefined) {\n    contents.Type = __expectString(output[\"xsi:type\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlGrants = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlGrant(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlIndexDocument = function (output, context) {\n  var contents = {\n    Suffix: undefined\n  };\n\n  if (output[\"Suffix\"] !== undefined) {\n    contents.Suffix = __expectString(output[\"Suffix\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInitiator = function (output, context) {\n  var contents = {\n    ID: undefined,\n    DisplayName: undefined\n  };\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = __expectString(output[\"ID\"]);\n  }\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = __expectString(output[\"DisplayName\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlIntelligentTieringAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlIntelligentTieringConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined,\n    Status: undefined,\n    Tierings: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlIntelligentTieringFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  if (output.Tiering === \"\") {\n    contents.Tierings = [];\n  }\n\n  if (output[\"Tiering\"] !== undefined) {\n    contents.Tierings = deserializeAws_restXmlTieringList(__getArrayIfSingleItem(output[\"Tiering\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlIntelligentTieringConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlIntelligentTieringConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlIntelligentTieringFilter = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tag: undefined,\n    And: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlIntelligentTieringAndOperator(output[\"And\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryConfiguration = function (output, context) {\n  var contents = {\n    Destination: undefined,\n    IsEnabled: undefined,\n    Filter: undefined,\n    Id: undefined,\n    IncludedObjectVersions: undefined,\n    OptionalFields: undefined,\n    Schedule: undefined\n  };\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlInventoryDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"IsEnabled\"] !== undefined) {\n    contents.IsEnabled = __parseBoolean(output[\"IsEnabled\"]);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlInventoryFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output[\"IncludedObjectVersions\"] !== undefined) {\n    contents.IncludedObjectVersions = __expectString(output[\"IncludedObjectVersions\"]);\n  }\n\n  if (output.OptionalFields === \"\") {\n    contents.OptionalFields = [];\n  }\n\n  if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\n    contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields(__getArrayIfSingleItem(output[\"OptionalFields\"][\"Field\"]), context);\n  }\n\n  if (output[\"Schedule\"] !== undefined) {\n    contents.Schedule = deserializeAws_restXmlInventorySchedule(output[\"Schedule\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlInventoryConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlInventoryDestination = function (output, context) {\n  var contents = {\n    S3BucketDestination: undefined\n  };\n\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryEncryption = function (output, context) {\n  var contents = {\n    SSES3: undefined,\n    SSEKMS: undefined\n  };\n\n  if (output[\"SSE-S3\"] !== undefined) {\n    contents.SSES3 = deserializeAws_restXmlSSES3(output[\"SSE-S3\"], context);\n  }\n\n  if (output[\"SSE-KMS\"] !== undefined) {\n    contents.SSEKMS = deserializeAws_restXmlSSEKMS(output[\"SSE-KMS\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryFilter = function (output, context) {\n  var contents = {\n    Prefix: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryOptionalFields = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restXmlInventoryS3BucketDestination = function (output, context) {\n  var contents = {\n    AccountId: undefined,\n    Bucket: undefined,\n    Format: undefined,\n    Prefix: undefined,\n    Encryption: undefined\n  };\n\n  if (output[\"AccountId\"] !== undefined) {\n    contents.AccountId = __expectString(output[\"AccountId\"]);\n  }\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = __expectString(output[\"Bucket\"]);\n  }\n\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = __expectString(output[\"Format\"]);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output[\"Encryption\"] !== undefined) {\n    contents.Encryption = deserializeAws_restXmlInventoryEncryption(output[\"Encryption\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventorySchedule = function (output, context) {\n  var contents = {\n    Frequency: undefined\n  };\n\n  if (output[\"Frequency\"] !== undefined) {\n    contents.Frequency = __expectString(output[\"Frequency\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLambdaFunctionConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    LambdaFunctionArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output[\"CloudFunction\"] !== undefined) {\n    contents.LambdaFunctionArn = __expectString(output[\"CloudFunction\"]);\n  }\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLambdaFunctionConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlLifecycleExpiration = function (output, context) {\n  var contents = {\n    Date: undefined,\n    Days: undefined,\n    ExpiredObjectDeleteMarker: undefined\n  };\n\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = __expectNonNull(__parseRfc3339DateTime(output[\"Date\"]));\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = __strictParseInt32(output[\"Days\"]);\n  }\n\n  if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n    contents.ExpiredObjectDeleteMarker = __parseBoolean(output[\"ExpiredObjectDeleteMarker\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRule = function (output, context) {\n  var contents = {\n    Expiration: undefined,\n    ID: undefined,\n    Prefix: undefined,\n    Filter: undefined,\n    Status: undefined,\n    Transitions: undefined,\n    NoncurrentVersionTransitions: undefined,\n    NoncurrentVersionExpiration: undefined,\n    AbortIncompleteMultipartUpload: undefined\n  };\n\n  if (output[\"Expiration\"] !== undefined) {\n    contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output[\"Expiration\"], context);\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = __expectString(output[\"ID\"]);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(__expectUnion(output[\"Filter\"]), context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  if (output.Transition === \"\") {\n    contents.Transitions = [];\n  }\n\n  if (output[\"Transition\"] !== undefined) {\n    contents.Transitions = deserializeAws_restXmlTransitionList(__getArrayIfSingleItem(output[\"Transition\"]), context);\n  }\n\n  if (output.NoncurrentVersionTransition === \"\") {\n    contents.NoncurrentVersionTransitions = [];\n  }\n\n  if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n    contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList(__getArrayIfSingleItem(output[\"NoncurrentVersionTransition\"]), context);\n  }\n\n  if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n    contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\n  }\n\n  if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n    contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRuleAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined,\n    ObjectSizeGreaterThan: undefined,\n    ObjectSizeLessThan: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  if (output[\"ObjectSizeGreaterThan\"] !== undefined) {\n    contents.ObjectSizeGreaterThan = __strictParseLong(output[\"ObjectSizeGreaterThan\"]);\n  }\n\n  if (output[\"ObjectSizeLessThan\"] !== undefined) {\n    contents.ObjectSizeLessThan = __strictParseLong(output[\"ObjectSizeLessThan\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRuleFilter = function (output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: __expectString(output[\"Prefix\"])\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"ObjectSizeGreaterThan\"] !== undefined) {\n    return {\n      ObjectSizeGreaterThan: __strictParseLong(output[\"ObjectSizeGreaterThan\"])\n    };\n  }\n\n  if (output[\"ObjectSizeLessThan\"] !== undefined) {\n    return {\n      ObjectSizeLessThan: __strictParseLong(output[\"ObjectSizeLessThan\"])\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlLifecycleRuleAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlLifecycleRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlLifecycleRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlLoggingEnabled = function (output, context) {\n  var contents = {\n    TargetBucket: undefined,\n    TargetGrants: undefined,\n    TargetPrefix: undefined\n  };\n\n  if (output[\"TargetBucket\"] !== undefined) {\n    contents.TargetBucket = __expectString(output[\"TargetBucket\"]);\n  }\n\n  if (output.TargetGrants === \"\") {\n    contents.TargetGrants = [];\n  }\n\n  if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n    contents.TargetGrants = deserializeAws_restXmlTargetGrants(__getArrayIfSingleItem(output[\"TargetGrants\"][\"Grant\"]), context);\n  }\n\n  if (output[\"TargetPrefix\"] !== undefined) {\n    contents.TargetPrefix = __expectString(output[\"TargetPrefix\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetrics = function (output, context) {\n  var contents = {\n    Status: undefined,\n    EventThreshold: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  if (output[\"EventThreshold\"] !== undefined) {\n    contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output[\"EventThreshold\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined,\n    AccessPointArn: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  if (output[\"AccessPointArn\"] !== undefined) {\n    contents.AccessPointArn = __expectString(output[\"AccessPointArn\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlMetricsFilter(__expectUnion(output[\"Filter\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlMetricsConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlMetricsFilter = function (output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: __expectString(output[\"Prefix\"])\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"AccessPointArn\"] !== undefined) {\n    return {\n      AccessPointArn: __expectString(output[\"AccessPointArn\"])\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlMetricsAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlMultipartUpload = function (output, context) {\n  var contents = {\n    UploadId: undefined,\n    Key: undefined,\n    Initiated: undefined,\n    StorageClass: undefined,\n    Owner: undefined,\n    Initiator: undefined\n  };\n\n  if (output[\"UploadId\"] !== undefined) {\n    contents.UploadId = __expectString(output[\"UploadId\"]);\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"Initiated\"] !== undefined) {\n    contents.Initiated = __expectNonNull(__parseRfc3339DateTime(output[\"Initiated\"]));\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = __expectString(output[\"StorageClass\"]);\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"Initiator\"] !== undefined) {\n    contents.Initiator = deserializeAws_restXmlInitiator(output[\"Initiator\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMultipartUploadList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlMultipartUpload(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlNoncurrentVersionExpiration = function (output, context) {\n  var contents = {\n    NoncurrentDays: undefined,\n    NewerNoncurrentVersions: undefined\n  };\n\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = __strictParseInt32(output[\"NoncurrentDays\"]);\n  }\n\n  if (output[\"NewerNoncurrentVersions\"] !== undefined) {\n    contents.NewerNoncurrentVersions = __strictParseInt32(output[\"NewerNoncurrentVersions\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlNoncurrentVersionTransition = function (output, context) {\n  var contents = {\n    NoncurrentDays: undefined,\n    StorageClass: undefined,\n    NewerNoncurrentVersions: undefined\n  };\n\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = __strictParseInt32(output[\"NoncurrentDays\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = __expectString(output[\"StorageClass\"]);\n  }\n\n  if (output[\"NewerNoncurrentVersions\"] !== undefined) {\n    contents.NewerNoncurrentVersions = __strictParseInt32(output[\"NewerNoncurrentVersions\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlNoncurrentVersionTransitionList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlNoncurrentVersionTransition(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlNotificationConfigurationFilter = function (output, context) {\n  var contents = {\n    Key: undefined\n  };\n\n  if (output[\"S3Key\"] !== undefined) {\n    contents.Key = deserializeAws_restXmlS3KeyFilter(output[\"S3Key\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXml_Object = function (output, context) {\n  var contents = {\n    Key: undefined,\n    LastModified: undefined,\n    ETag: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    Owner: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n  }\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = __expectString(output[\"ETag\"]);\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = __strictParseLong(output[\"Size\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = __expectString(output[\"StorageClass\"]);\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXml_Object(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlObjectLockConfiguration = function (output, context) {\n  var contents = {\n    ObjectLockEnabled: undefined,\n    Rule: undefined\n  };\n\n  if (output[\"ObjectLockEnabled\"] !== undefined) {\n    contents.ObjectLockEnabled = __expectString(output[\"ObjectLockEnabled\"]);\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rule = deserializeAws_restXmlObjectLockRule(output[\"Rule\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockLegalHold = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockRetention = function (output, context) {\n  var contents = {\n    Mode: undefined,\n    RetainUntilDate: undefined\n  };\n\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = __expectString(output[\"Mode\"]);\n  }\n\n  if (output[\"RetainUntilDate\"] !== undefined) {\n    contents.RetainUntilDate = __expectNonNull(__parseRfc3339DateTime(output[\"RetainUntilDate\"]));\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockRule = function (output, context) {\n  var contents = {\n    DefaultRetention: undefined\n  };\n\n  if (output[\"DefaultRetention\"] !== undefined) {\n    contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output[\"DefaultRetention\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectVersion = function (output, context) {\n  var contents = {\n    ETag: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    Key: undefined,\n    VersionId: undefined,\n    IsLatest: undefined,\n    LastModified: undefined,\n    Owner: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = __expectString(output[\"ETag\"]);\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = __strictParseLong(output[\"Size\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = __expectString(output[\"StorageClass\"]);\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = __expectString(output[\"VersionId\"]);\n  }\n\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = __parseBoolean(output[\"IsLatest\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectVersionList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlObjectVersion(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlOwner = function (output, context) {\n  var contents = {\n    DisplayName: undefined,\n    ID: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = __expectString(output[\"DisplayName\"]);\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = __expectString(output[\"ID\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlOwnershipControls = function (output, context) {\n  var contents = {\n    Rules: undefined\n  };\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlOwnershipControlsRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlOwnershipControlsRule = function (output, context) {\n  var contents = {\n    ObjectOwnership: undefined\n  };\n\n  if (output[\"ObjectOwnership\"] !== undefined) {\n    contents.ObjectOwnership = __expectString(output[\"ObjectOwnership\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlOwnershipControlsRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlOwnershipControlsRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlPart = function (output, context) {\n  var contents = {\n    PartNumber: undefined,\n    LastModified: undefined,\n    ETag: undefined,\n    Size: undefined\n  };\n\n  if (output[\"PartNumber\"] !== undefined) {\n    contents.PartNumber = __strictParseInt32(output[\"PartNumber\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n  }\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = __expectString(output[\"ETag\"]);\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = __strictParseLong(output[\"Size\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlParts = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlPart(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlPolicyStatus = function (output, context) {\n  var contents = {\n    IsPublic: undefined\n  };\n\n  if (output[\"IsPublic\"] !== undefined) {\n    contents.IsPublic = __parseBoolean(output[\"IsPublic\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlProgress = function (output, context) {\n  var contents = {\n    BytesScanned: undefined,\n    BytesProcessed: undefined,\n    BytesReturned: undefined\n  };\n\n  if (output[\"BytesScanned\"] !== undefined) {\n    contents.BytesScanned = __strictParseLong(output[\"BytesScanned\"]);\n  }\n\n  if (output[\"BytesProcessed\"] !== undefined) {\n    contents.BytesProcessed = __strictParseLong(output[\"BytesProcessed\"]);\n  }\n\n  if (output[\"BytesReturned\"] !== undefined) {\n    contents.BytesReturned = __strictParseLong(output[\"BytesReturned\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlProgressEvent = function (output, context) {\n  var contents = {\n    Details: undefined\n  };\n\n  if (output[\"Details\"] !== undefined) {\n    contents.Details = deserializeAws_restXmlProgress(output[\"Details\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlPublicAccessBlockConfiguration = function (output, context) {\n  var contents = {\n    BlockPublicAcls: undefined,\n    IgnorePublicAcls: undefined,\n    BlockPublicPolicy: undefined,\n    RestrictPublicBuckets: undefined\n  };\n\n  if (output[\"BlockPublicAcls\"] !== undefined) {\n    contents.BlockPublicAcls = __parseBoolean(output[\"BlockPublicAcls\"]);\n  }\n\n  if (output[\"IgnorePublicAcls\"] !== undefined) {\n    contents.IgnorePublicAcls = __parseBoolean(output[\"IgnorePublicAcls\"]);\n  }\n\n  if (output[\"BlockPublicPolicy\"] !== undefined) {\n    contents.BlockPublicPolicy = __parseBoolean(output[\"BlockPublicPolicy\"]);\n  }\n\n  if (output[\"RestrictPublicBuckets\"] !== undefined) {\n    contents.RestrictPublicBuckets = __parseBoolean(output[\"RestrictPublicBuckets\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlQueueConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    QueueArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output[\"Queue\"] !== undefined) {\n    contents.QueueArn = __expectString(output[\"Queue\"]);\n  }\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlQueueConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlQueueConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlRecordsEvent = function (output, context) {\n  var contents = {\n    Payload: undefined\n  };\n\n  if (output[\"Payload\"] !== undefined) {\n    contents.Payload = context.base64Decoder(output[\"Payload\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRedirect = function (output, context) {\n  var contents = {\n    HostName: undefined,\n    HttpRedirectCode: undefined,\n    Protocol: undefined,\n    ReplaceKeyPrefixWith: undefined,\n    ReplaceKeyWith: undefined\n  };\n\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = __expectString(output[\"HostName\"]);\n  }\n\n  if (output[\"HttpRedirectCode\"] !== undefined) {\n    contents.HttpRedirectCode = __expectString(output[\"HttpRedirectCode\"]);\n  }\n\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = __expectString(output[\"Protocol\"]);\n  }\n\n  if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n    contents.ReplaceKeyPrefixWith = __expectString(output[\"ReplaceKeyPrefixWith\"]);\n  }\n\n  if (output[\"ReplaceKeyWith\"] !== undefined) {\n    contents.ReplaceKeyWith = __expectString(output[\"ReplaceKeyWith\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRedirectAllRequestsTo = function (output, context) {\n  var contents = {\n    HostName: undefined,\n    Protocol: undefined\n  };\n\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = __expectString(output[\"HostName\"]);\n  }\n\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = __expectString(output[\"Protocol\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicaModifications = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationConfiguration = function (output, context) {\n  var contents = {\n    Role: undefined,\n    Rules: undefined\n  };\n\n  if (output[\"Role\"] !== undefined) {\n    contents.Role = __expectString(output[\"Role\"]);\n  }\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlReplicationRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRule = function (output, context) {\n  var contents = {\n    ID: undefined,\n    Priority: undefined,\n    Prefix: undefined,\n    Filter: undefined,\n    Status: undefined,\n    SourceSelectionCriteria: undefined,\n    ExistingObjectReplication: undefined,\n    Destination: undefined,\n    DeleteMarkerReplication: undefined\n  };\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = __expectString(output[\"ID\"]);\n  }\n\n  if (output[\"Priority\"] !== undefined) {\n    contents.Priority = __strictParseInt32(output[\"Priority\"]);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlReplicationRuleFilter(__expectUnion(output[\"Filter\"]), context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  if (output[\"SourceSelectionCriteria\"] !== undefined) {\n    contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\n  }\n\n  if (output[\"ExistingObjectReplication\"] !== undefined) {\n    contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\n  }\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"DeleteMarkerReplication\"] !== undefined) {\n    contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRuleAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRuleFilter = function (output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: __expectString(output[\"Prefix\"])\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlReplicationRuleAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlReplicationRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlReplicationRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlReplicationTime = function (output, context) {\n  var contents = {\n    Status: undefined,\n    Time: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  if (output[\"Time\"] !== undefined) {\n    contents.Time = deserializeAws_restXmlReplicationTimeValue(output[\"Time\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationTimeValue = function (output, context) {\n  var contents = {\n    Minutes: undefined\n  };\n\n  if (output[\"Minutes\"] !== undefined) {\n    contents.Minutes = __strictParseInt32(output[\"Minutes\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRoutingRule = function (output, context) {\n  var contents = {\n    Condition: undefined,\n    Redirect: undefined\n  };\n\n  if (output[\"Condition\"] !== undefined) {\n    contents.Condition = deserializeAws_restXmlCondition(output[\"Condition\"], context);\n  }\n\n  if (output[\"Redirect\"] !== undefined) {\n    contents.Redirect = deserializeAws_restXmlRedirect(output[\"Redirect\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRoutingRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlRoutingRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlS3KeyFilter = function (output, context) {\n  var contents = {\n    FilterRules: undefined\n  };\n\n  if (output.FilterRule === \"\") {\n    contents.FilterRules = [];\n  }\n\n  if (output[\"FilterRule\"] !== undefined) {\n    contents.FilterRules = deserializeAws_restXmlFilterRuleList(__getArrayIfSingleItem(output[\"FilterRule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSelectObjectContentEventStream = function (output, context) {\n  if (output[\"Records\"] !== undefined) {\n    return {\n      Records: deserializeAws_restXmlRecordsEvent(output[\"Records\"], context)\n    };\n  }\n\n  if (output[\"Stats\"] !== undefined) {\n    return {\n      Stats: deserializeAws_restXmlStatsEvent(output[\"Stats\"], context)\n    };\n  }\n\n  if (output[\"Progress\"] !== undefined) {\n    return {\n      Progress: deserializeAws_restXmlProgressEvent(output[\"Progress\"], context)\n    };\n  }\n\n  if (output[\"Cont\"] !== undefined) {\n    return {\n      Cont: deserializeAws_restXmlContinuationEvent(output[\"Cont\"], context)\n    };\n  }\n\n  if (output[\"End\"] !== undefined) {\n    return {\n      End: deserializeAws_restXmlEndEvent(output[\"End\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlServerSideEncryptionByDefault = function (output, context) {\n  var contents = {\n    SSEAlgorithm: undefined,\n    KMSMasterKeyID: undefined\n  };\n\n  if (output[\"SSEAlgorithm\"] !== undefined) {\n    contents.SSEAlgorithm = __expectString(output[\"SSEAlgorithm\"]);\n  }\n\n  if (output[\"KMSMasterKeyID\"] !== undefined) {\n    contents.KMSMasterKeyID = __expectString(output[\"KMSMasterKeyID\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionConfiguration = function (output, context) {\n  var contents = {\n    Rules: undefined\n  };\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlServerSideEncryptionRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionRule = function (output, context) {\n  var contents = {\n    ApplyServerSideEncryptionByDefault: undefined,\n    BucketKeyEnabled: undefined\n  };\n\n  if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n    contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\n  }\n\n  if (output[\"BucketKeyEnabled\"] !== undefined) {\n    contents.BucketKeyEnabled = __parseBoolean(output[\"BucketKeyEnabled\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlServerSideEncryptionRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlSourceSelectionCriteria = function (output, context) {\n  var contents = {\n    SseKmsEncryptedObjects: undefined,\n    ReplicaModifications: undefined\n  };\n\n  if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n    contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\n  }\n\n  if (output[\"ReplicaModifications\"] !== undefined) {\n    contents.ReplicaModifications = deserializeAws_restXmlReplicaModifications(output[\"ReplicaModifications\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSSEKMS = function (output, context) {\n  var contents = {\n    KeyId: undefined\n  };\n\n  if (output[\"KeyId\"] !== undefined) {\n    contents.KeyId = __expectString(output[\"KeyId\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSseKmsEncryptedObjects = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSSES3 = function (output, context) {\n  var contents = {};\n  return contents;\n};\n\nvar deserializeAws_restXmlStats = function (output, context) {\n  var contents = {\n    BytesScanned: undefined,\n    BytesProcessed: undefined,\n    BytesReturned: undefined\n  };\n\n  if (output[\"BytesScanned\"] !== undefined) {\n    contents.BytesScanned = __strictParseLong(output[\"BytesScanned\"]);\n  }\n\n  if (output[\"BytesProcessed\"] !== undefined) {\n    contents.BytesProcessed = __strictParseLong(output[\"BytesProcessed\"]);\n  }\n\n  if (output[\"BytesReturned\"] !== undefined) {\n    contents.BytesReturned = __strictParseLong(output[\"BytesReturned\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlStatsEvent = function (output, context) {\n  var contents = {\n    Details: undefined\n  };\n\n  if (output[\"Details\"] !== undefined) {\n    contents.Details = deserializeAws_restXmlStats(output[\"Details\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlStorageClassAnalysis = function (output, context) {\n  var contents = {\n    DataExport: undefined\n  };\n\n  if (output[\"DataExport\"] !== undefined) {\n    contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output[\"DataExport\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlStorageClassAnalysisDataExport = function (output, context) {\n  var contents = {\n    OutputSchemaVersion: undefined,\n    Destination: undefined\n  };\n\n  if (output[\"OutputSchemaVersion\"] !== undefined) {\n    contents.OutputSchemaVersion = __expectString(output[\"OutputSchemaVersion\"]);\n  }\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output[\"Destination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTag = function (output, context) {\n  var contents = {\n    Key: undefined,\n    Value: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = __expectString(output[\"Value\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTagSet = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTag(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTargetGrant = function (output, context) {\n  var contents = {\n    Grantee: undefined,\n    Permission: undefined\n  };\n\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = __expectString(output[\"Permission\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTargetGrants = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTargetGrant(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTiering = function (output, context) {\n  var contents = {\n    Days: undefined,\n    AccessTier: undefined\n  };\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = __strictParseInt32(output[\"Days\"]);\n  }\n\n  if (output[\"AccessTier\"] !== undefined) {\n    contents.AccessTier = __expectString(output[\"AccessTier\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTieringList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTiering(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTopicConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    TopicArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output[\"Topic\"] !== undefined) {\n    contents.TopicArn = __expectString(output[\"Topic\"]);\n  }\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTopicConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTopicConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTransition = function (output, context) {\n  var contents = {\n    Date: undefined,\n    Days: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = __expectNonNull(__parseRfc3339DateTime(output[\"Date\"]));\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = __strictParseInt32(output[\"Days\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = __expectString(output[\"StorageClass\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTransitionList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTransition(entry, context);\n  });\n};\n\nvar deserializeMetadata = function (output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function (value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      var parsedObj = xmlParse(encoded, {\n        attributeNamePrefix: \"\",\n        ignoreAttributes: false,\n        parseNodeValue: false,\n        trimValues: false,\n        tagValueProcessor: function (val) {\n          return val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : decodeHTML(val);\n        }\n      });\n      var textNodeName = \"#text\";\n      var key = Object.keys(parsedObj)[0];\n      var parsedObjToReturn = parsedObj[key];\n\n      if (parsedObjToReturn[textNodeName]) {\n        parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n        delete parsedObjToReturn[textNodeName];\n      }\n\n      return __getValueFromTextNode(parsedObjToReturn);\n    }\n\n    return {};\n  });\n};\n\nvar loadRestXmlErrorCode = function (output, data) {\n  if (data.Code !== undefined) {\n    return data.Code;\n  }\n\n  if (output.statusCode == 404) {\n    return \"NotFound\";\n  }\n\n  return \"\";\n};","map":{"version":3,"names":["__assign","__awaiter","__generator","HttpRequest","__HttpRequest","isValidHostname","__isValidHostname","dateToUtcString","__dateToUtcString","expectNonNull","__expectNonNull","expectObject","__expectObject","expectString","__expectString","expectUnion","__expectUnion","extendedEncodeURIComponent","__extendedEncodeURIComponent","getArrayIfSingleItem","__getArrayIfSingleItem","getValueFromTextNode","__getValueFromTextNode","parseBoolean","__parseBoolean","parseRfc3339DateTime","__parseRfc3339DateTime","parseRfc7231DateTime","__parseRfc7231DateTime","strictParseInt32","__strictParseInt32","strictParseLong","__strictParseLong","XmlNode","__XmlNode","XmlText","__XmlText","decodeHTML","parse","xmlParse","AnalyticsFilter","LifecycleRuleFilter","MetricsFilter","ReplicationRuleFilter","serializeAws_restXmlAbortMultipartUploadCommand","input","context","_a","hostname","_b","protocol","port","basePath","headers","resolvedPath","labelValue","query","body","_c","label","endpoint","sent","path","isSerializableHeaderValue","RequestPayer","ExpectedBucketOwner","endsWith","slice","Bucket","undefined","length","Error","replace","Key","split","map","segment","join","UploadId","uploadId","method","serializeAws_restXmlCompleteMultipartUploadCommand","contents","MultipartUpload","serializeAws_restXmlCompletedMultipartUpload","withName","addAttribute","toString","serializeAws_restXmlCopyObjectCommand","ACL","CacheControl","ContentDisposition","ContentEncoding","ContentLanguage","ContentType","CopySource","CopySourceIfMatch","CopySourceIfModifiedSince","CopySourceIfNoneMatch","CopySourceIfUnmodifiedSince","Expires","expires","GrantFullControl","GrantRead","GrantReadACP","GrantWriteACP","MetadataDirective","TaggingDirective","ServerSideEncryption","StorageClass","WebsiteRedirectLocation","SSECustomerAlgorithm","SSECustomerKey","SSECustomerKeyMD5","SSEKMSKeyId","SSEKMSEncryptionContext","BucketKeyEnabled","CopySourceSSECustomerAlgorithm","CopySourceSSECustomerKey","CopySourceSSECustomerKeyMD5","Tagging","ObjectLockMode","ObjectLockRetainUntilDate","toISOString","ObjectLockLegalHoldStatus","ExpectedSourceBucketOwner","Metadata","Object","keys","reduce","acc","suffix","toLowerCase","serializeAws_restXmlCreateBucketCommand","GrantWrite","ObjectLockEnabledForBucket","ObjectOwnership","CreateBucketConfiguration","serializeAws_restXmlCreateBucketConfiguration","serializeAws_restXmlCreateMultipartUploadCommand","uploads","serializeAws_restXmlDeleteBucketCommand","serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand","analytics","Id","id","serializeAws_restXmlDeleteBucketCorsCommand","cors","serializeAws_restXmlDeleteBucketEncryptionCommand","encryption","serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand","serializeAws_restXmlDeleteBucketInventoryConfigurationCommand","inventory","serializeAws_restXmlDeleteBucketLifecycleCommand","lifecycle","serializeAws_restXmlDeleteBucketMetricsConfigurationCommand","metrics","serializeAws_restXmlDeleteBucketOwnershipControlsCommand","ownershipControls","serializeAws_restXmlDeleteBucketPolicyCommand","policy","serializeAws_restXmlDeleteBucketReplicationCommand","replication","serializeAws_restXmlDeleteBucketTaggingCommand","tagging","serializeAws_restXmlDeleteBucketWebsiteCommand","website","serializeAws_restXmlDeleteObjectCommand","MFA","BypassGovernanceRetention","VersionId","versionId","serializeAws_restXmlDeleteObjectsCommand","delete","Delete","serializeAws_restXmlDelete","serializeAws_restXmlDeleteObjectTaggingCommand","serializeAws_restXmlDeletePublicAccessBlockCommand","publicAccessBlock","serializeAws_restXmlGetBucketAccelerateConfigurationCommand","accelerate","serializeAws_restXmlGetBucketAclCommand","acl","serializeAws_restXmlGetBucketAnalyticsConfigurationCommand","serializeAws_restXmlGetBucketCorsCommand","serializeAws_restXmlGetBucketEncryptionCommand","serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand","serializeAws_restXmlGetBucketInventoryConfigurationCommand","serializeAws_restXmlGetBucketLifecycleConfigurationCommand","serializeAws_restXmlGetBucketLocationCommand","location","serializeAws_restXmlGetBucketLoggingCommand","logging","serializeAws_restXmlGetBucketMetricsConfigurationCommand","serializeAws_restXmlGetBucketNotificationConfigurationCommand","notification","serializeAws_restXmlGetBucketOwnershipControlsCommand","serializeAws_restXmlGetBucketPolicyCommand","serializeAws_restXmlGetBucketPolicyStatusCommand","policyStatus","serializeAws_restXmlGetBucketReplicationCommand","serializeAws_restXmlGetBucketRequestPaymentCommand","requestPayment","serializeAws_restXmlGetBucketTaggingCommand","serializeAws_restXmlGetBucketVersioningCommand","versioning","serializeAws_restXmlGetBucketWebsiteCommand","serializeAws_restXmlGetObjectCommand","IfMatch","IfModifiedSince","IfNoneMatch","IfUnmodifiedSince","Range","range","ResponseCacheControl","ResponseContentDisposition","ResponseContentEncoding","ResponseContentLanguage","ResponseContentType","ResponseExpires","PartNumber","partNumber","serializeAws_restXmlGetObjectAclCommand","serializeAws_restXmlGetObjectLegalHoldCommand","serializeAws_restXmlGetObjectLockConfigurationCommand","serializeAws_restXmlGetObjectRetentionCommand","retention","serializeAws_restXmlGetObjectTaggingCommand","serializeAws_restXmlGetObjectTorrentCommand","torrent","serializeAws_restXmlGetPublicAccessBlockCommand","serializeAws_restXmlHeadBucketCommand","serializeAws_restXmlHeadObjectCommand","serializeAws_restXmlListBucketAnalyticsConfigurationsCommand","ContinuationToken","serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand","serializeAws_restXmlListBucketInventoryConfigurationsCommand","serializeAws_restXmlListBucketMetricsConfigurationsCommand","serializeAws_restXmlListBucketsCommand","serializeAws_restXmlListMultipartUploadsCommand","Delimiter","delimiter","EncodingType","KeyMarker","MaxUploads","Prefix","prefix","UploadIdMarker","serializeAws_restXmlListObjectsCommand","Marker","marker","MaxKeys","serializeAws_restXmlListObjectsV2Command","FetchOwner","StartAfter","serializeAws_restXmlListObjectVersionsCommand","versions","VersionIdMarker","serializeAws_restXmlListPartsCommand","MaxParts","PartNumberMarker","serializeAws_restXmlPutBucketAccelerateConfigurationCommand","AccelerateConfiguration","serializeAws_restXmlAccelerateConfiguration","serializeAws_restXmlPutBucketAclCommand","ContentMD5","AccessControlPolicy","serializeAws_restXmlAccessControlPolicy","serializeAws_restXmlPutBucketAnalyticsConfigurationCommand","AnalyticsConfiguration","serializeAws_restXmlAnalyticsConfiguration","serializeAws_restXmlPutBucketCorsCommand","CORSConfiguration","serializeAws_restXmlCORSConfiguration","serializeAws_restXmlPutBucketEncryptionCommand","ServerSideEncryptionConfiguration","serializeAws_restXmlServerSideEncryptionConfiguration","serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand","IntelligentTieringConfiguration","serializeAws_restXmlIntelligentTieringConfiguration","serializeAws_restXmlPutBucketInventoryConfigurationCommand","InventoryConfiguration","serializeAws_restXmlInventoryConfiguration","serializeAws_restXmlPutBucketLifecycleConfigurationCommand","LifecycleConfiguration","serializeAws_restXmlBucketLifecycleConfiguration","serializeAws_restXmlPutBucketLoggingCommand","BucketLoggingStatus","serializeAws_restXmlBucketLoggingStatus","serializeAws_restXmlPutBucketMetricsConfigurationCommand","MetricsConfiguration","serializeAws_restXmlMetricsConfiguration","serializeAws_restXmlPutBucketNotificationConfigurationCommand","SkipDestinationValidation","NotificationConfiguration","serializeAws_restXmlNotificationConfiguration","serializeAws_restXmlPutBucketOwnershipControlsCommand","OwnershipControls","serializeAws_restXmlOwnershipControls","serializeAws_restXmlPutBucketPolicyCommand","ConfirmRemoveSelfBucketAccess","Policy","serializeAws_restXmlPutBucketReplicationCommand","Token","ReplicationConfiguration","serializeAws_restXmlReplicationConfiguration","serializeAws_restXmlPutBucketRequestPaymentCommand","RequestPaymentConfiguration","serializeAws_restXmlRequestPaymentConfiguration","serializeAws_restXmlPutBucketTaggingCommand","serializeAws_restXmlTagging","serializeAws_restXmlPutBucketVersioningCommand","VersioningConfiguration","serializeAws_restXmlVersioningConfiguration","serializeAws_restXmlPutBucketWebsiteCommand","WebsiteConfiguration","serializeAws_restXmlWebsiteConfiguration","serializeAws_restXmlPutObjectCommand","ContentLength","Body","serializeAws_restXmlPutObjectAclCommand","serializeAws_restXmlPutObjectLegalHoldCommand","LegalHold","serializeAws_restXmlObjectLockLegalHold","serializeAws_restXmlPutObjectLockConfigurationCommand","ObjectLockConfiguration","serializeAws_restXmlObjectLockConfiguration","serializeAws_restXmlPutObjectRetentionCommand","Retention","serializeAws_restXmlObjectLockRetention","serializeAws_restXmlPutObjectTaggingCommand","serializeAws_restXmlPutPublicAccessBlockCommand","PublicAccessBlockConfiguration","serializeAws_restXmlPublicAccessBlockConfiguration","serializeAws_restXmlRestoreObjectCommand","restore","RestoreRequest","serializeAws_restXmlRestoreRequest","serializeAws_restXmlSelectObjectContentCommand","bodyNode","node","select","Expression","addChildNode","ExpressionType","InputSerialization","serializeAws_restXmlInputSerialization","OutputSerialization","serializeAws_restXmlOutputSerialization","RequestProgress","serializeAws_restXmlRequestProgress","ScanRange","serializeAws_restXmlScanRange","serializeAws_restXmlUploadPartCommand","serializeAws_restXmlUploadPartCopyCommand","CopySourceRange","serializeAws_restXmlWriteGetObjectResponseCommand","resolvedHostname","RequestRoute","RequestToken","StatusCode","ErrorCode","ErrorMessage","AcceptRanges","ContentRange","DeleteMarker","ETag","Expiration","LastModified","MissingMeta","PartsCount","ReplicationStatus","RequestCharged","Restore","TagCount","disableHostPrefix","deserializeAws_restXmlAbortMultipartUploadCommand","output","statusCode","deserializeAws_restXmlAbortMultipartUploadCommandError","$metadata","deserializeMetadata","collectBody","Promise","resolve","parsedOutput","response","errorCode","parsedBody","message","_d","_e","parseBody","apply","concat","loadRestXmlErrorCode","deserializeAws_restXmlNoSuchUploadResponse","name","code","Code","Message","$fault","reject","assign","deserializeAws_restXmlCompleteMultipartUploadCommand","data","deserializeAws_restXmlCompleteMultipartUploadCommandError","Location","deserializeAws_restXmlCopyObjectCommand","deserializeAws_restXmlCopyObjectCommandError","CopyObjectResult","CopySourceVersionId","deserializeAws_restXmlCopyObjectResult","deserializeAws_restXmlObjectNotInActiveTierErrorResponse","deserializeAws_restXmlCreateBucketCommand","deserializeAws_restXmlCreateBucketCommandError","_f","deserializeAws_restXmlBucketAlreadyExistsResponse","deserializeAws_restXmlBucketAlreadyOwnedByYouResponse","deserializeAws_restXmlCreateMultipartUploadCommand","deserializeAws_restXmlCreateMultipartUploadCommandError","AbortDate","AbortRuleId","deserializeAws_restXmlDeleteBucketCommand","deserializeAws_restXmlDeleteBucketCommandError","deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand","deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError","deserializeAws_restXmlDeleteBucketCorsCommand","deserializeAws_restXmlDeleteBucketCorsCommandError","deserializeAws_restXmlDeleteBucketEncryptionCommand","deserializeAws_restXmlDeleteBucketEncryptionCommandError","deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand","deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError","deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand","deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError","deserializeAws_restXmlDeleteBucketLifecycleCommand","deserializeAws_restXmlDeleteBucketLifecycleCommandError","deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand","deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError","deserializeAws_restXmlDeleteBucketOwnershipControlsCommand","deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError","deserializeAws_restXmlDeleteBucketPolicyCommand","deserializeAws_restXmlDeleteBucketPolicyCommandError","deserializeAws_restXmlDeleteBucketReplicationCommand","deserializeAws_restXmlDeleteBucketReplicationCommandError","deserializeAws_restXmlDeleteBucketTaggingCommand","deserializeAws_restXmlDeleteBucketTaggingCommandError","deserializeAws_restXmlDeleteBucketWebsiteCommand","deserializeAws_restXmlDeleteBucketWebsiteCommandError","deserializeAws_restXmlDeleteObjectCommand","deserializeAws_restXmlDeleteObjectCommandError","deserializeAws_restXmlDeleteObjectsCommand","deserializeAws_restXmlDeleteObjectsCommandError","Deleted","Errors","deserializeAws_restXmlDeletedObjects","deserializeAws_restXmlErrors","deserializeAws_restXmlDeleteObjectTaggingCommand","deserializeAws_restXmlDeleteObjectTaggingCommandError","deserializeAws_restXmlDeletePublicAccessBlockCommand","deserializeAws_restXmlDeletePublicAccessBlockCommandError","deserializeAws_restXmlGetBucketAccelerateConfigurationCommand","deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError","Status","deserializeAws_restXmlGetBucketAclCommand","deserializeAws_restXmlGetBucketAclCommandError","Grants","Owner","AccessControlList","deserializeAws_restXmlGrants","deserializeAws_restXmlOwner","deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand","deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError","deserializeAws_restXmlAnalyticsConfiguration","deserializeAws_restXmlGetBucketCorsCommand","deserializeAws_restXmlGetBucketCorsCommandError","CORSRules","CORSRule","deserializeAws_restXmlCORSRules","deserializeAws_restXmlGetBucketEncryptionCommand","deserializeAws_restXmlGetBucketEncryptionCommandError","deserializeAws_restXmlServerSideEncryptionConfiguration","deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand","deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError","deserializeAws_restXmlIntelligentTieringConfiguration","deserializeAws_restXmlGetBucketInventoryConfigurationCommand","deserializeAws_restXmlGetBucketInventoryConfigurationCommandError","deserializeAws_restXmlInventoryConfiguration","deserializeAws_restXmlGetBucketLifecycleConfigurationCommand","deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError","Rules","Rule","deserializeAws_restXmlLifecycleRules","deserializeAws_restXmlGetBucketLocationCommand","deserializeAws_restXmlGetBucketLocationCommandError","LocationConstraint","deserializeAws_restXmlGetBucketLoggingCommand","deserializeAws_restXmlGetBucketLoggingCommandError","LoggingEnabled","deserializeAws_restXmlLoggingEnabled","deserializeAws_restXmlGetBucketMetricsConfigurationCommand","deserializeAws_restXmlGetBucketMetricsConfigurationCommandError","deserializeAws_restXmlMetricsConfiguration","deserializeAws_restXmlGetBucketNotificationConfigurationCommand","deserializeAws_restXmlGetBucketNotificationConfigurationCommandError","EventBridgeConfiguration","LambdaFunctionConfigurations","QueueConfigurations","TopicConfigurations","deserializeAws_restXmlEventBridgeConfiguration","CloudFunctionConfiguration","deserializeAws_restXmlLambdaFunctionConfigurationList","QueueConfiguration","deserializeAws_restXmlQueueConfigurationList","TopicConfiguration","deserializeAws_restXmlTopicConfigurationList","deserializeAws_restXmlGetBucketOwnershipControlsCommand","deserializeAws_restXmlGetBucketOwnershipControlsCommandError","deserializeAws_restXmlOwnershipControls","deserializeAws_restXmlGetBucketPolicyCommand","deserializeAws_restXmlGetBucketPolicyCommandError","collectBodyString","deserializeAws_restXmlGetBucketPolicyStatusCommand","deserializeAws_restXmlGetBucketPolicyStatusCommandError","PolicyStatus","deserializeAws_restXmlPolicyStatus","deserializeAws_restXmlGetBucketReplicationCommand","deserializeAws_restXmlGetBucketReplicationCommandError","deserializeAws_restXmlReplicationConfiguration","deserializeAws_restXmlGetBucketRequestPaymentCommand","deserializeAws_restXmlGetBucketRequestPaymentCommandError","Payer","deserializeAws_restXmlGetBucketTaggingCommand","deserializeAws_restXmlGetBucketTaggingCommandError","TagSet","deserializeAws_restXmlTagSet","deserializeAws_restXmlGetBucketVersioningCommand","deserializeAws_restXmlGetBucketVersioningCommandError","MFADelete","deserializeAws_restXmlGetBucketWebsiteCommand","deserializeAws_restXmlGetBucketWebsiteCommandError","ErrorDocument","IndexDocument","RedirectAllRequestsTo","RoutingRules","deserializeAws_restXmlErrorDocument","deserializeAws_restXmlIndexDocument","deserializeAws_restXmlRedirectAllRequestsTo","deserializeAws_restXmlRoutingRules","deserializeAws_restXmlGetObjectCommand","deserializeAws_restXmlGetObjectCommandError","forEach","header","startsWith","substring","deserializeAws_restXmlInvalidObjectStateResponse","deserializeAws_restXmlNoSuchKeyResponse","deserializeAws_restXmlGetObjectAclCommand","deserializeAws_restXmlGetObjectAclCommandError","deserializeAws_restXmlGetObjectLegalHoldCommand","deserializeAws_restXmlGetObjectLegalHoldCommandError","deserializeAws_restXmlObjectLockLegalHold","deserializeAws_restXmlGetObjectLockConfigurationCommand","deserializeAws_restXmlGetObjectLockConfigurationCommandError","deserializeAws_restXmlObjectLockConfiguration","deserializeAws_restXmlGetObjectRetentionCommand","deserializeAws_restXmlGetObjectRetentionCommandError","deserializeAws_restXmlObjectLockRetention","deserializeAws_restXmlGetObjectTaggingCommand","deserializeAws_restXmlGetObjectTaggingCommandError","deserializeAws_restXmlGetObjectTorrentCommand","deserializeAws_restXmlGetObjectTorrentCommandError","deserializeAws_restXmlGetPublicAccessBlockCommand","deserializeAws_restXmlGetPublicAccessBlockCommandError","deserializeAws_restXmlPublicAccessBlockConfiguration","deserializeAws_restXmlHeadBucketCommand","deserializeAws_restXmlHeadBucketCommandError","deserializeAws_restXmlNotFoundResponse","deserializeAws_restXmlHeadObjectCommand","deserializeAws_restXmlHeadObjectCommandError","ArchiveStatus","deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand","deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError","AnalyticsConfigurationList","IsTruncated","NextContinuationToken","deserializeAws_restXmlAnalyticsConfigurationList","deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand","deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError","IntelligentTieringConfigurationList","deserializeAws_restXmlIntelligentTieringConfigurationList","deserializeAws_restXmlListBucketInventoryConfigurationsCommand","deserializeAws_restXmlListBucketInventoryConfigurationsCommandError","InventoryConfigurationList","deserializeAws_restXmlInventoryConfigurationList","deserializeAws_restXmlListBucketMetricsConfigurationsCommand","deserializeAws_restXmlListBucketMetricsConfigurationsCommandError","MetricsConfigurationList","deserializeAws_restXmlMetricsConfigurationList","deserializeAws_restXmlListBucketsCommand","deserializeAws_restXmlListBucketsCommandError","Buckets","deserializeAws_restXmlBuckets","deserializeAws_restXmlListMultipartUploadsCommand","deserializeAws_restXmlListMultipartUploadsCommandError","CommonPrefixes","NextKeyMarker","NextUploadIdMarker","Uploads","deserializeAws_restXmlCommonPrefixList","Upload","deserializeAws_restXmlMultipartUploadList","deserializeAws_restXmlListObjectsCommand","deserializeAws_restXmlListObjectsCommandError","Contents","Name","NextMarker","deserializeAws_restXmlObjectList","deserializeAws_restXmlNoSuchBucketResponse","deserializeAws_restXmlListObjectsV2Command","deserializeAws_restXmlListObjectsV2CommandError","KeyCount","deserializeAws_restXmlListObjectVersionsCommand","deserializeAws_restXmlListObjectVersionsCommandError","DeleteMarkers","NextVersionIdMarker","Versions","deserializeAws_restXmlDeleteMarkers","Version","deserializeAws_restXmlObjectVersionList","deserializeAws_restXmlListPartsCommand","deserializeAws_restXmlListPartsCommandError","Initiator","NextPartNumberMarker","Parts","deserializeAws_restXmlInitiator","Part","deserializeAws_restXmlParts","deserializeAws_restXmlPutBucketAccelerateConfigurationCommand","deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError","deserializeAws_restXmlPutBucketAclCommand","deserializeAws_restXmlPutBucketAclCommandError","deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand","deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError","deserializeAws_restXmlPutBucketCorsCommand","deserializeAws_restXmlPutBucketCorsCommandError","deserializeAws_restXmlPutBucketEncryptionCommand","deserializeAws_restXmlPutBucketEncryptionCommandError","deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand","deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError","deserializeAws_restXmlPutBucketInventoryConfigurationCommand","deserializeAws_restXmlPutBucketInventoryConfigurationCommandError","deserializeAws_restXmlPutBucketLifecycleConfigurationCommand","deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError","deserializeAws_restXmlPutBucketLoggingCommand","deserializeAws_restXmlPutBucketLoggingCommandError","deserializeAws_restXmlPutBucketMetricsConfigurationCommand","deserializeAws_restXmlPutBucketMetricsConfigurationCommandError","deserializeAws_restXmlPutBucketNotificationConfigurationCommand","deserializeAws_restXmlPutBucketNotificationConfigurationCommandError","deserializeAws_restXmlPutBucketOwnershipControlsCommand","deserializeAws_restXmlPutBucketOwnershipControlsCommandError","deserializeAws_restXmlPutBucketPolicyCommand","deserializeAws_restXmlPutBucketPolicyCommandError","deserializeAws_restXmlPutBucketReplicationCommand","deserializeAws_restXmlPutBucketReplicationCommandError","deserializeAws_restXmlPutBucketRequestPaymentCommand","deserializeAws_restXmlPutBucketRequestPaymentCommandError","deserializeAws_restXmlPutBucketTaggingCommand","deserializeAws_restXmlPutBucketTaggingCommandError","deserializeAws_restXmlPutBucketVersioningCommand","deserializeAws_restXmlPutBucketVersioningCommandError","deserializeAws_restXmlPutBucketWebsiteCommand","deserializeAws_restXmlPutBucketWebsiteCommandError","deserializeAws_restXmlPutObjectCommand","deserializeAws_restXmlPutObjectCommandError","deserializeAws_restXmlPutObjectAclCommand","deserializeAws_restXmlPutObjectAclCommandError","deserializeAws_restXmlPutObjectLegalHoldCommand","deserializeAws_restXmlPutObjectLegalHoldCommandError","deserializeAws_restXmlPutObjectLockConfigurationCommand","deserializeAws_restXmlPutObjectLockConfigurationCommandError","deserializeAws_restXmlPutObjectRetentionCommand","deserializeAws_restXmlPutObjectRetentionCommandError","deserializeAws_restXmlPutObjectTaggingCommand","deserializeAws_restXmlPutObjectTaggingCommandError","deserializeAws_restXmlPutPublicAccessBlockCommand","deserializeAws_restXmlPutPublicAccessBlockCommandError","deserializeAws_restXmlRestoreObjectCommand","deserializeAws_restXmlRestoreObjectCommandError","RestoreOutputPath","deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse","deserializeAws_restXmlSelectObjectContentCommand","deserializeAws_restXmlSelectObjectContentCommandError","Payload","eventStreamMarshaller","deserialize","event","eventName","eventHeaders","eventMessage","parsedEvent","entries","accummulator","curr","value","deserializeAws_restXmlSelectObjectContentEventStream_event","deserializeAws_restXmlUploadPartCommand","deserializeAws_restXmlUploadPartCommandError","deserializeAws_restXmlUploadPartCopyCommand","deserializeAws_restXmlUploadPartCopyCommandError","CopyPartResult","deserializeAws_restXmlCopyPartResult","deserializeAws_restXmlWriteGetObjectResponseCommand","deserializeAws_restXmlWriteGetObjectResponseCommandError","deserializeAws_restXmlRecordsEvent_event","Records","deserializeAws_restXmlStatsEvent_event","Stats","deserializeAws_restXmlProgressEvent_event","Progress","deserializeAws_restXmlContinuationEvent_event","Cont","deserializeAws_restXmlEndEvent_event","End","$unknown","Details","AccessTier","serializeAws_restXmlAbortIncompleteMultipartUpload","DaysAfterInitiation","String","nodes","serializeAws_restXmlGrants","containerNode_1","serializeAws_restXmlOwner","serializeAws_restXmlAccessControlTranslation","serializeAws_restXmlAllowedHeaders","filter","e","entry","serializeAws_restXmlAllowedMethods","serializeAws_restXmlAllowedOrigins","serializeAws_restXmlAnalyticsAndOperator","Tags","serializeAws_restXmlTagSet","Filter","serializeAws_restXmlAnalyticsFilter","StorageClassAnalysis","serializeAws_restXmlStorageClassAnalysis","serializeAws_restXmlAnalyticsExportDestination","S3BucketDestination","serializeAws_restXmlAnalyticsS3BucketDestination","visit","Tag","serializeAws_restXmlTag","And","_","Format","BucketAccountId","serializeAws_restXmlLifecycleRules","serializeAws_restXmlLoggingEnabled","serializeAws_restXmlCompletedPartList","serializeAws_restXmlCompletedPart","serializeAws_restXmlCondition","HttpErrorCodeReturnedEquals","KeyPrefixEquals","serializeAws_restXmlCORSRules","serializeAws_restXmlCORSRule","ID","AllowedHeaders","AllowedMethods","AllowedOrigins","ExposeHeaders","serializeAws_restXmlExposeHeaders","MaxAgeSeconds","serializeAws_restXmlCSVInput","FileHeaderInfo","Comments","QuoteEscapeCharacter","RecordDelimiter","FieldDelimiter","QuoteCharacter","AllowQuotedRecordDelimiter","serializeAws_restXmlCSVOutput","QuoteFields","serializeAws_restXmlDefaultRetention","Mode","Days","Years","Objects","serializeAws_restXmlObjectIdentifierList","Quiet","serializeAws_restXmlDeleteMarkerReplication","serializeAws_restXmlDestination","Account","AccessControlTranslation","EncryptionConfiguration","serializeAws_restXmlEncryptionConfiguration","ReplicationTime","serializeAws_restXmlReplicationTime","Metrics","serializeAws_restXmlMetrics","serializeAws_restXmlEncryption","EncryptionType","KMSKeyId","KMSContext","ReplicaKmsKeyID","serializeAws_restXmlErrorDocument","serializeAws_restXmlEventBridgeConfiguration","serializeAws_restXmlEventList","serializeAws_restXmlExistingObjectReplication","serializeAws_restXmlFilterRule","Value","serializeAws_restXmlFilterRuleList","serializeAws_restXmlGlacierJobParameters","Tier","serializeAws_restXmlGrant","Grantee","serializeAws_restXmlGrantee","Permission","DisplayName","EmailAddress","URI","Type","serializeAws_restXmlIndexDocument","Suffix","CSV","CompressionType","JSON","serializeAws_restXmlJSONInput","Parquet","serializeAws_restXmlParquetInput","serializeAws_restXmlIntelligentTieringAndOperator","serializeAws_restXmlIntelligentTieringFilter","Tierings","serializeAws_restXmlTieringList","Destination","serializeAws_restXmlInventoryDestination","IsEnabled","serializeAws_restXmlInventoryFilter","IncludedObjectVersions","OptionalFields","serializeAws_restXmlInventoryOptionalFields","containerNode_2","Schedule","serializeAws_restXmlInventorySchedule","serializeAws_restXmlInventoryS3BucketDestination","serializeAws_restXmlInventoryEncryption","SSES3","serializeAws_restXmlSSES3","SSEKMS","serializeAws_restXmlSSEKMS","AccountId","Encryption","Frequency","serializeAws_restXmlJSONOutput","serializeAws_restXmlLambdaFunctionConfiguration","LambdaFunctionArn","Events","serializeAws_restXmlNotificationConfigurationFilter","serializeAws_restXmlLambdaFunctionConfigurationList","serializeAws_restXmlLifecycleExpiration","Date","ExpiredObjectDeleteMarker","serializeAws_restXmlLifecycleRule","serializeAws_restXmlLifecycleRuleFilter","Transitions","serializeAws_restXmlTransitionList","NoncurrentVersionTransitions","serializeAws_restXmlNoncurrentVersionTransitionList","NoncurrentVersionExpiration","serializeAws_restXmlNoncurrentVersionExpiration","AbortIncompleteMultipartUpload","serializeAws_restXmlLifecycleRuleAndOperator","ObjectSizeGreaterThan","ObjectSizeLessThan","TargetBucket","TargetGrants","serializeAws_restXmlTargetGrants","containerNode_3","TargetPrefix","serializeAws_restXmlMetadataEntry","EventThreshold","serializeAws_restXmlReplicationTimeValue","serializeAws_restXmlMetricsAndOperator","AccessPointArn","serializeAws_restXmlMetricsFilter","NoncurrentDays","NewerNoncurrentVersions","serializeAws_restXmlNoncurrentVersionTransition","serializeAws_restXmlTopicConfigurationList","serializeAws_restXmlQueueConfigurationList","serializeAws_restXmlS3KeyFilter","serializeAws_restXmlObjectIdentifier","ObjectLockEnabled","serializeAws_restXmlObjectLockRule","RetainUntilDate","DefaultRetention","serializeAws_restXmlOutputLocation","S3","serializeAws_restXmlS3Location","serializeAws_restXmlOwnershipControlsRules","serializeAws_restXmlOwnershipControlsRule","BlockPublicAcls","IgnorePublicAcls","BlockPublicPolicy","RestrictPublicBuckets","serializeAws_restXmlQueueConfiguration","QueueArn","serializeAws_restXmlRedirect","HostName","HttpRedirectCode","Protocol","ReplaceKeyPrefixWith","ReplaceKeyWith","serializeAws_restXmlRedirectAllRequestsTo","serializeAws_restXmlReplicaModifications","Role","serializeAws_restXmlReplicationRules","serializeAws_restXmlReplicationRule","Priority","serializeAws_restXmlReplicationRuleFilter","SourceSelectionCriteria","serializeAws_restXmlSourceSelectionCriteria","ExistingObjectReplication","DeleteMarkerReplication","serializeAws_restXmlReplicationRuleAndOperator","Time","Minutes","Enabled","GlacierJobParameters","Description","SelectParameters","serializeAws_restXmlSelectParameters","OutputLocation","serializeAws_restXmlRoutingRule","Condition","Redirect","serializeAws_restXmlRoutingRules","FilterRules","BucketName","CannedACL","containerNode_4","UserMetadata","serializeAws_restXmlUserMetadata","containerNode_5","Start","serializeAws_restXmlServerSideEncryptionByDefault","SSEAlgorithm","KMSMasterKeyID","serializeAws_restXmlServerSideEncryptionRules","serializeAws_restXmlServerSideEncryptionRule","ApplyServerSideEncryptionByDefault","SseKmsEncryptedObjects","serializeAws_restXmlSseKmsEncryptedObjects","ReplicaModifications","KeyId","DataExport","serializeAws_restXmlStorageClassAnalysisDataExport","OutputSchemaVersion","containerNode_6","serializeAws_restXmlTargetGrant","serializeAws_restXmlTiering","serializeAws_restXmlTopicConfiguration","TopicArn","serializeAws_restXmlTransition","containerNode_7","deserializeAws_restXmlAbortIncompleteMultipartUpload","deserializeAws_restXmlAccessControlTranslation","deserializeAws_restXmlAllowedHeaders","deserializeAws_restXmlAllowedMethods","deserializeAws_restXmlAllowedOrigins","deserializeAws_restXmlAnalyticsAndOperator","deserializeAws_restXmlAnalyticsFilter","deserializeAws_restXmlStorageClassAnalysis","deserializeAws_restXmlAnalyticsExportDestination","deserializeAws_restXmlAnalyticsS3BucketDestination","deserializeAws_restXmlTag","deserializeAws_restXmlBucket","CreationDate","deserializeAws_restXmlCommonPrefix","deserializeAws_restXmlCondition","deserializeAws_restXmlContinuationEvent","deserializeAws_restXmlCORSRule","AllowedHeader","AllowedMethod","AllowedOrigin","ExposeHeader","deserializeAws_restXmlExposeHeaders","deserializeAws_restXmlDefaultRetention","deserializeAws_restXmlDeletedObject","DeleteMarkerVersionId","deserializeAws_restXmlDeleteMarkerEntry","IsLatest","deserializeAws_restXmlDeleteMarkerReplication","deserializeAws_restXmlDestination","deserializeAws_restXmlEncryptionConfiguration","deserializeAws_restXmlReplicationTime","deserializeAws_restXmlMetrics","deserializeAws_restXmlEndEvent","deserializeAws_restXml_Error","deserializeAws_restXmlEventList","deserializeAws_restXmlExistingObjectReplication","deserializeAws_restXmlFilterRule","deserializeAws_restXmlFilterRuleList","deserializeAws_restXmlGrant","deserializeAws_restXmlGrantee","deserializeAws_restXmlIntelligentTieringAndOperator","deserializeAws_restXmlIntelligentTieringFilter","Tiering","deserializeAws_restXmlTieringList","deserializeAws_restXmlInventoryDestination","deserializeAws_restXmlInventoryFilter","deserializeAws_restXmlInventoryOptionalFields","deserializeAws_restXmlInventorySchedule","deserializeAws_restXmlInventoryS3BucketDestination","deserializeAws_restXmlInventoryEncryption","deserializeAws_restXmlSSES3","deserializeAws_restXmlSSEKMS","deserializeAws_restXmlLambdaFunctionConfiguration","Event","deserializeAws_restXmlNotificationConfigurationFilter","deserializeAws_restXmlLifecycleExpiration","deserializeAws_restXmlLifecycleRule","deserializeAws_restXmlLifecycleRuleFilter","Transition","deserializeAws_restXmlTransitionList","NoncurrentVersionTransition","deserializeAws_restXmlNoncurrentVersionTransitionList","deserializeAws_restXmlNoncurrentVersionExpiration","deserializeAws_restXmlLifecycleRuleAndOperator","deserializeAws_restXmlTargetGrants","deserializeAws_restXmlReplicationTimeValue","deserializeAws_restXmlMetricsAndOperator","deserializeAws_restXmlMetricsFilter","deserializeAws_restXmlMultipartUpload","Initiated","deserializeAws_restXmlNoncurrentVersionTransition","deserializeAws_restXmlS3KeyFilter","deserializeAws_restXml_Object","Size","deserializeAws_restXmlObjectLockRule","deserializeAws_restXmlObjectVersion","deserializeAws_restXmlOwnershipControlsRules","deserializeAws_restXmlOwnershipControlsRule","deserializeAws_restXmlPart","IsPublic","deserializeAws_restXmlProgress","BytesScanned","BytesProcessed","BytesReturned","deserializeAws_restXmlProgressEvent","deserializeAws_restXmlQueueConfiguration","deserializeAws_restXmlRecordsEvent","base64Decoder","deserializeAws_restXmlRedirect","deserializeAws_restXmlReplicaModifications","deserializeAws_restXmlReplicationRules","deserializeAws_restXmlReplicationRule","deserializeAws_restXmlReplicationRuleFilter","deserializeAws_restXmlSourceSelectionCriteria","deserializeAws_restXmlReplicationRuleAndOperator","deserializeAws_restXmlRoutingRule","FilterRule","deserializeAws_restXmlSelectObjectContentEventStream","deserializeAws_restXmlStatsEvent","deserializeAws_restXmlServerSideEncryptionByDefault","deserializeAws_restXmlServerSideEncryptionRules","deserializeAws_restXmlServerSideEncryptionRule","deserializeAws_restXmlSseKmsEncryptedObjects","deserializeAws_restXmlStats","deserializeAws_restXmlStorageClassAnalysisDataExport","deserializeAws_restXmlTargetGrant","deserializeAws_restXmlTiering","deserializeAws_restXmlTopicConfiguration","deserializeAws_restXmlTransition","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","then","utf8Encoder","getOwnPropertyNames","includes","size","encoded","parsedObj","attributeNamePrefix","ignoreAttributes","parseNodeValue","trimValues","tagValueProcessor","val","trim","textNodeName","key","parsedObjToReturn"],"sources":["/Users/yzbaoo/Desktop/huohua/ilc-web-packages/node_modules/@aws-sdk/client-s3/dist-es/protocols/Aws_restXml.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest as __HttpRequest, isValidHostname as __isValidHostname, } from \"@aws-sdk/protocol-http\";\nimport { dateToUtcString as __dateToUtcString, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, expectUnion as __expectUnion, extendedEncodeURIComponent as __extendedEncodeURIComponent, getArrayIfSingleItem as __getArrayIfSingleItem, getValueFromTextNode as __getValueFromTextNode, parseBoolean as __parseBoolean, parseRfc3339DateTime as __parseRfc3339DateTime, parseRfc7231DateTime as __parseRfc7231DateTime, strictParseInt32 as __strictParseInt32, strictParseLong as __strictParseLong, } from \"@aws-sdk/smithy-client\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { decodeHTML } from \"entities\";\nimport { parse as xmlParse } from \"fast-xml-parser\";\nimport { AnalyticsFilter, LifecycleRuleFilter, MetricsFilter, ReplicationRuleFilter, } from \"../models/models_0\";\nexport var serializeAws_restXmlAbortMultipartUploadCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"x-id\": \"AbortMultipartUpload\" }, (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlCompleteMultipartUploadCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"x-id\": \"CompleteMultipartUpload\" }, (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                if (input.MultipartUpload !== undefined) {\n                    body = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n                }\n                if (input.MultipartUpload !== undefined) {\n                    contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n                    contents = contents.withName(\"CompleteMultipartUpload\");\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlCopyObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.CacheControl) && { \"cache-control\": input.CacheControl })), (isSerializableHeaderValue(input.ContentDisposition) && { \"content-disposition\": input.ContentDisposition })), (isSerializableHeaderValue(input.ContentEncoding) && { \"content-encoding\": input.ContentEncoding })), (isSerializableHeaderValue(input.ContentLanguage) && { \"content-language\": input.ContentLanguage })), (isSerializableHeaderValue(input.ContentType) && { \"content-type\": input.ContentType })), (isSerializableHeaderValue(input.CopySource) && { \"x-amz-copy-source\": input.CopySource })), (isSerializableHeaderValue(input.CopySourceIfMatch) && {\n                    \"x-amz-copy-source-if-match\": input.CopySourceIfMatch,\n                })), (isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n                    \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n                    \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch,\n                })), (isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n                    \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.Expires) && { expires: __dateToUtcString(input.Expires).toString() })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.MetadataDirective) && { \"x-amz-metadata-directive\": input.MetadataDirective })), (isSerializableHeaderValue(input.TaggingDirective) && { \"x-amz-tagging-directive\": input.TaggingDirective })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\n                    \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n                })), (isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n                    \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\n                    \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n                })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n                    \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n                })), (isSerializableHeaderValue(input.BucketKeyEnabled) && {\n                    \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString(),\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging })), (isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n                    \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n                })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n                    \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n                    \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner,\n                })), (input.Metadata !== undefined &&\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\n                        var _a;\n                        return (__assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a)));\n                    }, {})));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    \"x-id\": \"CopyObject\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlCreateBucketCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ObjectLockEnabledForBucket) && {\n                    \"x-amz-bucket-object-lock-enabled\": input.ObjectLockEnabledForBucket.toString(),\n                })), (isSerializableHeaderValue(input.ObjectOwnership) && { \"x-amz-object-ownership\": input.ObjectOwnership }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.CreateBucketConfiguration !== undefined) {\n                    body = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n                }\n                if (input.CreateBucketConfiguration !== undefined) {\n                    contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlCreateMultipartUploadCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.CacheControl) && { \"cache-control\": input.CacheControl })), (isSerializableHeaderValue(input.ContentDisposition) && { \"content-disposition\": input.ContentDisposition })), (isSerializableHeaderValue(input.ContentEncoding) && { \"content-encoding\": input.ContentEncoding })), (isSerializableHeaderValue(input.ContentLanguage) && { \"content-language\": input.ContentLanguage })), (isSerializableHeaderValue(input.ContentType) && { \"content-type\": input.ContentType })), (isSerializableHeaderValue(input.Expires) && { expires: __dateToUtcString(input.Expires).toString() })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\n                    \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n                })), (isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n                    \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\n                    \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n                })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n                    \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n                })), (isSerializableHeaderValue(input.BucketKeyEnabled) && {\n                    \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString(),\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging })), (isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n                    \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n                })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n                    \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (input.Metadata !== undefined &&\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\n                        var _a;\n                        return (__assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a)));\n                    }, {})));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    uploads: \"\",\n                    \"x-id\": \"CreateMultipartUpload\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ analytics: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketCorsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    cors: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    encryption: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ \"intelligent-tiering\": \"\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ inventory: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketLifecycleCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    lifecycle: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ metrics: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    ownershipControls: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    policy: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketReplicationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    replication: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    tagging: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketWebsiteCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    website: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n                    \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString(),\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"x-id\": \"DeleteObject\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteObjectsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n                    \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString(),\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    delete: \"\",\n                    \"x-id\": \"DeleteObjects\",\n                };\n                if (input.Delete !== undefined) {\n                    body = serializeAws_restXmlDelete(input.Delete, context);\n                }\n                if (input.Delete !== undefined) {\n                    contents = serializeAws_restXmlDelete(input.Delete, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteObjectTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ tagging: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeletePublicAccessBlockCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    publicAccessBlock: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    accelerate: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    acl: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ analytics: \"\", \"x-id\": \"GetBucketAnalyticsConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketCorsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    cors: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    encryption: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ \"intelligent-tiering\": \"\", \"x-id\": \"GetBucketIntelligentTieringConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketInventoryConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ inventory: \"\", \"x-id\": \"GetBucketInventoryConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    lifecycle: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketLocationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    location: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketLoggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    logging: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketMetricsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ metrics: \"\", \"x-id\": \"GetBucketMetricsConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketNotificationConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    notification: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketOwnershipControlsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    ownershipControls: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    policy: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketPolicyStatusCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    policyStatus: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketReplicationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    replication: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketRequestPaymentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    requestPayment: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    tagging: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketVersioningCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    versioning: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketWebsiteCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    website: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.IfMatch) && { \"if-match\": input.IfMatch })), (isSerializableHeaderValue(input.IfModifiedSince) && {\n                    \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.IfNoneMatch) && { \"if-none-match\": input.IfNoneMatch })), (isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n                    \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.Range) && { range: input.Range })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"x-id\": \"GetObject\" }, (input.ResponseCacheControl !== undefined && { \"response-cache-control\": input.ResponseCacheControl })), (input.ResponseContentDisposition !== undefined && {\n                    \"response-content-disposition\": input.ResponseContentDisposition,\n                })), (input.ResponseContentEncoding !== undefined && { \"response-content-encoding\": input.ResponseContentEncoding })), (input.ResponseContentLanguage !== undefined && { \"response-content-language\": input.ResponseContentLanguage })), (input.ResponseContentType !== undefined && { \"response-content-type\": input.ResponseContentType })), (input.ResponseExpires !== undefined && {\n                    \"response-expires\": __dateToUtcString(input.ResponseExpires).toString(),\n                })), (input.VersionId !== undefined && { versionId: input.VersionId })), (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ acl: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectLegalHoldCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"legal-hold\": \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectLockConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    \"object-lock\": \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectRetentionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ retention: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ tagging: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectTorrentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    torrent: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetPublicAccessBlockCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    publicAccessBlock: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlHeadBucketCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"HEAD\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlHeadObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.IfMatch) && { \"if-match\": input.IfMatch })), (isSerializableHeaderValue(input.IfModifiedSince) && {\n                    \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.IfNoneMatch) && { \"if-none-match\": input.IfNoneMatch })), (isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n                    \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.Range) && { range: input.Range })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign({}, (input.VersionId !== undefined && { versionId: input.VersionId })), (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"HEAD\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ analytics: \"\", \"x-id\": \"ListBucketAnalyticsConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ \"intelligent-tiering\": \"\", \"x-id\": \"ListBucketIntelligentTieringConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketInventoryConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ inventory: \"\", \"x-id\": \"ListBucketInventoryConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketMetricsConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ metrics: \"\", \"x-id\": \"ListBucketMetricsConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/xml\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/\";\n                body = \"\";\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListMultipartUploadsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign(__assign({ uploads: \"\" }, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.KeyMarker !== undefined && { \"key-marker\": input.KeyMarker })), (input.MaxUploads !== undefined && { \"max-uploads\": input.MaxUploads.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.UploadIdMarker !== undefined && { \"upload-id-marker\": input.UploadIdMarker }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListObjectsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign({}, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.Marker !== undefined && { marker: input.Marker })), (input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListObjectsV2Command = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"list-type\": \"2\" }, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken })), (input.FetchOwner !== undefined && { \"fetch-owner\": input.FetchOwner.toString() })), (input.StartAfter !== undefined && { \"start-after\": input.StartAfter }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListObjectVersionsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign(__assign({ versions: \"\" }, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.KeyMarker !== undefined && { \"key-marker\": input.KeyMarker })), (input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.VersionIdMarker !== undefined && { \"version-id-marker\": input.VersionIdMarker }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListPartsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign(__assign({ \"x-id\": \"ListParts\" }, (input.MaxParts !== undefined && { \"max-parts\": input.MaxParts.toString() })), (input.PartNumberMarker !== undefined && { \"part-number-marker\": input.PartNumberMarker })), (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    accelerate: \"\",\n                };\n                if (input.AccelerateConfiguration !== undefined) {\n                    body = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n                }\n                if (input.AccelerateConfiguration !== undefined) {\n                    contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    acl: \"\",\n                };\n                if (input.AccessControlPolicy !== undefined) {\n                    body = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n                }\n                if (input.AccessControlPolicy !== undefined) {\n                    contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ analytics: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                if (input.AnalyticsConfiguration !== undefined) {\n                    body = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n                }\n                if (input.AnalyticsConfiguration !== undefined) {\n                    contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketCorsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    cors: \"\",\n                };\n                if (input.CORSConfiguration !== undefined) {\n                    body = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n                }\n                if (input.CORSConfiguration !== undefined) {\n                    contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    encryption: \"\",\n                };\n                if (input.ServerSideEncryptionConfiguration !== undefined) {\n                    body = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n                }\n                if (input.ServerSideEncryptionConfiguration !== undefined) {\n                    contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/xml\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ \"intelligent-tiering\": \"\" }, (input.Id !== undefined && { id: input.Id }));\n                if (input.IntelligentTieringConfiguration !== undefined) {\n                    body = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n                }\n                if (input.IntelligentTieringConfiguration !== undefined) {\n                    contents = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketInventoryConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ inventory: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                if (input.InventoryConfiguration !== undefined) {\n                    body = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n                }\n                if (input.InventoryConfiguration !== undefined) {\n                    contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    lifecycle: \"\",\n                };\n                if (input.LifecycleConfiguration !== undefined) {\n                    body = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n                }\n                if (input.LifecycleConfiguration !== undefined) {\n                    contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n                    contents = contents.withName(\"LifecycleConfiguration\");\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketLoggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    logging: \"\",\n                };\n                if (input.BucketLoggingStatus !== undefined) {\n                    body = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n                }\n                if (input.BucketLoggingStatus !== undefined) {\n                    contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketMetricsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ metrics: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                if (input.MetricsConfiguration !== undefined) {\n                    body = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n                }\n                if (input.MetricsConfiguration !== undefined) {\n                    contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketNotificationConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.SkipDestinationValidation) && {\n                    \"x-amz-skip-destination-validation\": input.SkipDestinationValidation.toString(),\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    notification: \"\",\n                };\n                if (input.NotificationConfiguration !== undefined) {\n                    body = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n                }\n                if (input.NotificationConfiguration !== undefined) {\n                    contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketOwnershipControlsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    ownershipControls: \"\",\n                };\n                if (input.OwnershipControls !== undefined) {\n                    body = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);\n                }\n                if (input.OwnershipControls !== undefined) {\n                    contents = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign({ \"content-type\": \"text/plain\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess) && {\n                    \"x-amz-confirm-remove-self-bucket-access\": input.ConfirmRemoveSelfBucketAccess.toString(),\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    policy: \"\",\n                };\n                if (input.Policy !== undefined) {\n                    body = input.Policy;\n                }\n                if (input.Policy !== undefined) {\n                    contents = input.Policy;\n                    body = contents;\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketReplicationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.Token) && { \"x-amz-bucket-object-lock-token\": input.Token })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    replication: \"\",\n                };\n                if (input.ReplicationConfiguration !== undefined) {\n                    body = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n                }\n                if (input.ReplicationConfiguration !== undefined) {\n                    contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketRequestPaymentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    requestPayment: \"\",\n                };\n                if (input.RequestPaymentConfiguration !== undefined) {\n                    body = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n                }\n                if (input.RequestPaymentConfiguration !== undefined) {\n                    contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    tagging: \"\",\n                };\n                if (input.Tagging !== undefined) {\n                    body = serializeAws_restXmlTagging(input.Tagging, context);\n                }\n                if (input.Tagging !== undefined) {\n                    contents = serializeAws_restXmlTagging(input.Tagging, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketVersioningCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    versioning: \"\",\n                };\n                if (input.VersioningConfiguration !== undefined) {\n                    body = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n                }\n                if (input.VersioningConfiguration !== undefined) {\n                    contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketWebsiteCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    website: \"\",\n                };\n                if (input.WebsiteConfiguration !== undefined) {\n                    body = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n                }\n                if (input.WebsiteConfiguration !== undefined) {\n                    contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/octet-stream\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.CacheControl) && { \"cache-control\": input.CacheControl })), (isSerializableHeaderValue(input.ContentDisposition) && { \"content-disposition\": input.ContentDisposition })), (isSerializableHeaderValue(input.ContentEncoding) && { \"content-encoding\": input.ContentEncoding })), (isSerializableHeaderValue(input.ContentLanguage) && { \"content-language\": input.ContentLanguage })), (isSerializableHeaderValue(input.ContentLength) && { \"content-length\": input.ContentLength.toString() })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ContentType) && { \"content-type\": input.ContentType })), (isSerializableHeaderValue(input.Expires) && { expires: __dateToUtcString(input.Expires).toString() })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\n                    \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n                })), (isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n                    \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\n                    \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n                })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n                    \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n                })), (isSerializableHeaderValue(input.BucketKeyEnabled) && {\n                    \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString(),\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging })), (isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n                    \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n                })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n                    \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (input.Metadata !== undefined &&\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\n                        var _a;\n                        return (__assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a)));\n                    }, {})));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    \"x-id\": \"PutObject\",\n                };\n                if (input.Body !== undefined) {\n                    body = input.Body;\n                }\n                if (input.Body !== undefined) {\n                    contents = input.Body;\n                    body = contents;\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ acl: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.AccessControlPolicy !== undefined) {\n                    body = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n                }\n                if (input.AccessControlPolicy !== undefined) {\n                    contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectLegalHoldCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"legal-hold\": \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.LegalHold !== undefined) {\n                    body = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n                }\n                if (input.LegalHold !== undefined) {\n                    contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n                    contents = contents.withName(\"LegalHold\");\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectLockConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.Token) && { \"x-amz-bucket-object-lock-token\": input.Token })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    \"object-lock\": \"\",\n                };\n                if (input.ObjectLockConfiguration !== undefined) {\n                    body = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n                }\n                if (input.ObjectLockConfiguration !== undefined) {\n                    contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectRetentionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n                    \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString(),\n                })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ retention: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.Retention !== undefined) {\n                    body = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n                }\n                if (input.Retention !== undefined) {\n                    contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n                    contents = contents.withName(\"Retention\");\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ tagging: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.Tagging !== undefined) {\n                    body = serializeAws_restXmlTagging(input.Tagging, context);\n                }\n                if (input.Tagging !== undefined) {\n                    contents = serializeAws_restXmlTagging(input.Tagging, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutPublicAccessBlockCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    publicAccessBlock: \"\",\n                };\n                if (input.PublicAccessBlockConfiguration !== undefined) {\n                    body = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n                }\n                if (input.PublicAccessBlockConfiguration !== undefined) {\n                    contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlRestoreObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ restore: \"\", \"x-id\": \"RestoreObject\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.RestoreRequest !== undefined) {\n                    body = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n                }\n                if (input.RestoreRequest !== undefined) {\n                    contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlSelectObjectContentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, bodyNode, node, node, node, node, node, node;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    select: \"\",\n                    \"select-type\": \"2\",\n                    \"x-id\": \"SelectObjectContent\",\n                };\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\n                bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                if (input.Expression !== undefined) {\n                    node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.ExpressionType !== undefined) {\n                    node = new __XmlNode(\"ExpressionType\")\n                        .addChildNode(new __XmlText(input.ExpressionType))\n                        .withName(\"ExpressionType\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.InputSerialization !== undefined) {\n                    node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.OutputSerialization !== undefined) {\n                    node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.RequestProgress !== undefined) {\n                    node = serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName(\"RequestProgress\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.ScanRange !== undefined) {\n                    node = serializeAws_restXmlScanRange(input.ScanRange, context).withName(\"ScanRange\");\n                    bodyNode.addChildNode(node);\n                }\n                body += bodyNode.toString();\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlUploadPartCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/octet-stream\" }, (isSerializableHeaderValue(input.ContentLength) && { \"content-length\": input.ContentLength.toString() })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign({ \"x-id\": \"UploadPart\" }, (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() })), (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                if (input.Body !== undefined) {\n                    body = input.Body;\n                }\n                if (input.Body !== undefined) {\n                    contents = input.Body;\n                    body = contents;\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlUploadPartCopyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.CopySource) && { \"x-amz-copy-source\": input.CopySource })), (isSerializableHeaderValue(input.CopySourceIfMatch) && {\n                    \"x-amz-copy-source-if-match\": input.CopySourceIfMatch,\n                })), (isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n                    \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n                    \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch,\n                })), (isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n                    \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.CopySourceRange) && { \"x-amz-copy-source-range\": input.CopySourceRange })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n                    \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner,\n                }));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign({ \"x-id\": \"UploadPartCopy\" }, (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() })), (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlWriteGetObjectResponseCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body, contents, resolvedHostname;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/octet-stream\", \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\" }, (isSerializableHeaderValue(input.RequestRoute) && { \"x-amz-request-route\": input.RequestRoute })), (isSerializableHeaderValue(input.RequestToken) && { \"x-amz-request-token\": input.RequestToken })), (isSerializableHeaderValue(input.StatusCode) && { \"x-amz-fwd-status\": input.StatusCode.toString() })), (isSerializableHeaderValue(input.ErrorCode) && { \"x-amz-fwd-error-code\": input.ErrorCode })), (isSerializableHeaderValue(input.ErrorMessage) && { \"x-amz-fwd-error-message\": input.ErrorMessage })), (isSerializableHeaderValue(input.AcceptRanges) && { \"x-amz-fwd-header-accept-ranges\": input.AcceptRanges })), (isSerializableHeaderValue(input.CacheControl) && { \"x-amz-fwd-header-cache-control\": input.CacheControl })), (isSerializableHeaderValue(input.ContentDisposition) && {\n                    \"x-amz-fwd-header-content-disposition\": input.ContentDisposition,\n                })), (isSerializableHeaderValue(input.ContentEncoding) && {\n                    \"x-amz-fwd-header-content-encoding\": input.ContentEncoding,\n                })), (isSerializableHeaderValue(input.ContentLanguage) && {\n                    \"x-amz-fwd-header-content-language\": input.ContentLanguage,\n                })), (isSerializableHeaderValue(input.ContentLength) && { \"content-length\": input.ContentLength.toString() })), (isSerializableHeaderValue(input.ContentRange) && { \"x-amz-fwd-header-content-range\": input.ContentRange })), (isSerializableHeaderValue(input.ContentType) && { \"x-amz-fwd-header-content-type\": input.ContentType })), (isSerializableHeaderValue(input.DeleteMarker) && {\n                    \"x-amz-fwd-header-x-amz-delete-marker\": input.DeleteMarker.toString(),\n                })), (isSerializableHeaderValue(input.ETag) && { \"x-amz-fwd-header-etag\": input.ETag })), (isSerializableHeaderValue(input.Expires) && {\n                    \"x-amz-fwd-header-expires\": __dateToUtcString(input.Expires).toString(),\n                })), (isSerializableHeaderValue(input.Expiration) && { \"x-amz-fwd-header-x-amz-expiration\": input.Expiration })), (isSerializableHeaderValue(input.LastModified) && {\n                    \"x-amz-fwd-header-last-modified\": __dateToUtcString(input.LastModified).toString(),\n                })), (isSerializableHeaderValue(input.MissingMeta) && {\n                    \"x-amz-fwd-header-x-amz-missing-meta\": input.MissingMeta.toString(),\n                })), (isSerializableHeaderValue(input.ObjectLockMode) && {\n                    \"x-amz-fwd-header-x-amz-object-lock-mode\": input.ObjectLockMode,\n                })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n                    \"x-amz-fwd-header-x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n                })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n                    \"x-amz-fwd-header-x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n                })), (isSerializableHeaderValue(input.PartsCount) && {\n                    \"x-amz-fwd-header-x-amz-mp-parts-count\": input.PartsCount.toString(),\n                })), (isSerializableHeaderValue(input.ReplicationStatus) && {\n                    \"x-amz-fwd-header-x-amz-replication-status\": input.ReplicationStatus,\n                })), (isSerializableHeaderValue(input.RequestCharged) && {\n                    \"x-amz-fwd-header-x-amz-request-charged\": input.RequestCharged,\n                })), (isSerializableHeaderValue(input.Restore) && { \"x-amz-fwd-header-x-amz-restore\": input.Restore })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\n                    \"x-amz-fwd-header-x-amz-server-side-encryption\": input.ServerSideEncryption,\n                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-fwd-header-x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\n                    \"x-amz-fwd-header-x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-fwd-header-x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.StorageClass) && {\n                    \"x-amz-fwd-header-x-amz-storage-class\": input.StorageClass,\n                })), (isSerializableHeaderValue(input.TagCount) && {\n                    \"x-amz-fwd-header-x-amz-tagging-count\": input.TagCount.toString(),\n                })), (isSerializableHeaderValue(input.VersionId) && { \"x-amz-fwd-header-x-amz-version-id\": input.VersionId })), (isSerializableHeaderValue(input.BucketKeyEnabled) && {\n                    \"x-amz-fwd-header-x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString(),\n                })), (input.Metadata !== undefined &&\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\n                        var _a;\n                        return (__assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a)));\n                    }, {})));\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/WriteGetObjectResponse\";\n                query = {\n                    \"x-id\": \"WriteGetObjectResponse\",\n                };\n                if (input.Body !== undefined) {\n                    body = input.Body;\n                }\n                if (input.Body !== undefined) {\n                    contents = input.Body;\n                    body = contents;\n                }\n                return [4, context.endpoint()];\n            case 2:\n                resolvedHostname = (_c.sent()).hostname;\n                if (context.disableHostPrefix !== true) {\n                    resolvedHostname = \"{RequestRoute}.\" + resolvedHostname;\n                    if (input.RequestRoute === undefined) {\n                        throw new Error(\"Empty value provided for input host prefix: RequestRoute.\");\n                    }\n                    resolvedHostname = resolvedHostname.replace(\"{RequestRoute}\", input.RequestRoute);\n                    if (!__isValidHostname(resolvedHostname)) {\n                        throw new Error(\"ValidationError: prefixed hostname must be hostname compatible.\");\n                    }\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: resolvedHostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlAbortMultipartUploadCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlAbortMultipartUploadCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchUpload\": return [3, 2];\n                    case \"com.amazonaws.s3#NoSuchUpload\": return [3, 2];\n                }\n                return [3, 4];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlCompleteMultipartUploadCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Bucket: undefined,\n                    BucketKeyEnabled: undefined,\n                    ETag: undefined,\n                    Expiration: undefined,\n                    Key: undefined,\n                    Location: undefined,\n                    RequestCharged: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"Bucket\"] !== undefined) {\n                    contents.Bucket = __expectString(data[\"Bucket\"]);\n                }\n                if (data[\"ETag\"] !== undefined) {\n                    contents.ETag = __expectString(data[\"ETag\"]);\n                }\n                if (data[\"Key\"] !== undefined) {\n                    contents.Key = __expectString(data[\"Key\"]);\n                }\n                if (data[\"Location\"] !== undefined) {\n                    contents.Location = __expectString(data[\"Location\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlCompleteMultipartUploadCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlCopyObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlCopyObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BucketKeyEnabled: undefined,\n                    CopyObjectResult: undefined,\n                    CopySourceVersionId: undefined,\n                    Expiration: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSEncryptionContext: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\n                }\n                if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n                    contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n                    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlCopyObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"ObjectNotInActiveTierError\": return [3, 2];\n                    case \"com.amazonaws.s3#ObjectNotInActiveTierError\": return [3, 2];\n                }\n                return [3, 4];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlCreateBucketCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlCreateBucketCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Location: undefined,\n                };\n                if (output.headers[\"location\"] !== undefined) {\n                    contents.Location = output.headers[\"location\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlCreateBucketCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BucketAlreadyExists\": return [3, 2];\n                    case \"com.amazonaws.s3#BucketAlreadyExists\": return [3, 2];\n                    case \"BucketAlreadyOwnedByYou\": return [3, 4];\n                    case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlCreateMultipartUploadCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AbortDate: undefined,\n                    AbortRuleId: undefined,\n                    Bucket: undefined,\n                    BucketKeyEnabled: undefined,\n                    Key: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSEncryptionContext: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    UploadId: undefined,\n                };\n                if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n                    contents.AbortDate = __expectNonNull(__parseRfc7231DateTime(output.headers[\"x-amz-abort-date\"]));\n                }\n                if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n                    contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n                    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"Bucket\"] !== undefined) {\n                    contents.Bucket = __expectString(data[\"Bucket\"]);\n                }\n                if (data[\"Key\"] !== undefined) {\n                    contents.Key = __expectString(data[\"Key\"]);\n                }\n                if (data[\"UploadId\"] !== undefined) {\n                    contents.UploadId = __expectString(data[\"UploadId\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlCreateMultipartUploadCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketCorsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketCorsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketLifecycleCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketLifecycleCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketReplicationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketReplicationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketWebsiteCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketWebsiteCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DeleteMarker: undefined,\n                    RequestCharged: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n                    contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteObjectsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteObjectsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Deleted: undefined,\n                    Errors: undefined,\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.Deleted === \"\") {\n                    contents.Deleted = [];\n                }\n                if (data[\"Deleted\"] !== undefined) {\n                    contents.Deleted = deserializeAws_restXmlDeletedObjects(__getArrayIfSingleItem(data[\"Deleted\"]), context);\n                }\n                if (data.Error === \"\") {\n                    contents.Errors = [];\n                }\n                if (data[\"Error\"] !== undefined) {\n                    contents.Errors = deserializeAws_restXmlErrors(__getArrayIfSingleItem(data[\"Error\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteObjectsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteObjectTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteObjectTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeletePublicAccessBlockCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeletePublicAccessBlockCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Status: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"Status\"] !== undefined) {\n                    contents.Status = __expectString(data[\"Status\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketAclCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Grants: undefined,\n                    Owner: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.AccessControlList === \"\") {\n                    contents.Grants = [];\n                }\n                if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n                    contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n                }\n                if (data[\"Owner\"] !== undefined) {\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AnalyticsConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketCorsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketCorsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CORSRules: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.CORSRule === \"\") {\n                    contents.CORSRules = [];\n                }\n                if (data[\"CORSRule\"] !== undefined) {\n                    contents.CORSRules = deserializeAws_restXmlCORSRules(__getArrayIfSingleItem(data[\"CORSRule\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketCorsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ServerSideEncryptionConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    IntelligentTieringConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.IntelligentTieringConfiguration = deserializeAws_restXmlIntelligentTieringConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketInventoryConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    InventoryConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketInventoryConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Rules: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.Rule === \"\") {\n                    contents.Rules = [];\n                }\n                if (data[\"Rule\"] !== undefined) {\n                    contents.Rules = deserializeAws_restXmlLifecycleRules(__getArrayIfSingleItem(data[\"Rule\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketLocationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketLocationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    LocationConstraint: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"LocationConstraint\"] !== undefined) {\n                    contents.LocationConstraint = __expectString(data[\"LocationConstraint\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketLocationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketLoggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    LoggingEnabled: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"LoggingEnabled\"] !== undefined) {\n                    contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data[\"LoggingEnabled\"], context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketLoggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketMetricsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    MetricsConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketMetricsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketNotificationConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    EventBridgeConfiguration: undefined,\n                    LambdaFunctionConfigurations: undefined,\n                    QueueConfigurations: undefined,\n                    TopicConfigurations: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"EventBridgeConfiguration\"] !== undefined) {\n                    contents.EventBridgeConfiguration = deserializeAws_restXmlEventBridgeConfiguration(data[\"EventBridgeConfiguration\"], context);\n                }\n                if (data.CloudFunctionConfiguration === \"\") {\n                    contents.LambdaFunctionConfigurations = [];\n                }\n                if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n                    contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList(__getArrayIfSingleItem(data[\"CloudFunctionConfiguration\"]), context);\n                }\n                if (data.QueueConfiguration === \"\") {\n                    contents.QueueConfigurations = [];\n                }\n                if (data[\"QueueConfiguration\"] !== undefined) {\n                    contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList(__getArrayIfSingleItem(data[\"QueueConfiguration\"]), context);\n                }\n                if (data.TopicConfiguration === \"\") {\n                    contents.TopicConfigurations = [];\n                }\n                if (data[\"TopicConfiguration\"] !== undefined) {\n                    contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList(__getArrayIfSingleItem(data[\"TopicConfiguration\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketNotificationConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketOwnershipControlsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    OwnershipControls: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.OwnershipControls = deserializeAws_restXmlOwnershipControls(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketOwnershipControlsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Policy: undefined,\n                };\n                return [4, collectBodyString(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.Policy = __expectString(data);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketPolicyStatusCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    PolicyStatus: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketPolicyStatusCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketReplicationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ReplicationConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketReplicationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketRequestPaymentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Payer: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"Payer\"] !== undefined) {\n                    contents.Payer = __expectString(data[\"Payer\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketRequestPaymentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    TagSet: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.TagSet === \"\") {\n                    contents.TagSet = [];\n                }\n                if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n                    contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketVersioningCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    MFADelete: undefined,\n                    Status: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"MfaDelete\"] !== undefined) {\n                    contents.MFADelete = __expectString(data[\"MfaDelete\"]);\n                }\n                if (data[\"Status\"] !== undefined) {\n                    contents.Status = __expectString(data[\"Status\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketVersioningCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketWebsiteCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ErrorDocument: undefined,\n                    IndexDocument: undefined,\n                    RedirectAllRequestsTo: undefined,\n                    RoutingRules: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"ErrorDocument\"] !== undefined) {\n                    contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data[\"ErrorDocument\"], context);\n                }\n                if (data[\"IndexDocument\"] !== undefined) {\n                    contents.IndexDocument = deserializeAws_restXmlIndexDocument(data[\"IndexDocument\"], context);\n                }\n                if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n                    contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\n                }\n                if (data.RoutingRules === \"\") {\n                    contents.RoutingRules = [];\n                }\n                if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n                    contents.RoutingRules = deserializeAws_restXmlRoutingRules(__getArrayIfSingleItem(data[\"RoutingRules\"][\"RoutingRule\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketWebsiteCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectCommandError(output, context)];\n        }\n        contents = {\n            $metadata: deserializeMetadata(output),\n            AcceptRanges: undefined,\n            Body: undefined,\n            BucketKeyEnabled: undefined,\n            CacheControl: undefined,\n            ContentDisposition: undefined,\n            ContentEncoding: undefined,\n            ContentLanguage: undefined,\n            ContentLength: undefined,\n            ContentRange: undefined,\n            ContentType: undefined,\n            DeleteMarker: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Expires: undefined,\n            LastModified: undefined,\n            Metadata: undefined,\n            MissingMeta: undefined,\n            ObjectLockLegalHoldStatus: undefined,\n            ObjectLockMode: undefined,\n            ObjectLockRetainUntilDate: undefined,\n            PartsCount: undefined,\n            ReplicationStatus: undefined,\n            RequestCharged: undefined,\n            Restore: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            StorageClass: undefined,\n            TagCount: undefined,\n            VersionId: undefined,\n            WebsiteRedirectLocation: undefined,\n        };\n        if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n        }\n        if (output.headers[\"accept-ranges\"] !== undefined) {\n            contents.AcceptRanges = output.headers[\"accept-ranges\"];\n        }\n        if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n        }\n        if (output.headers[\"x-amz-restore\"] !== undefined) {\n            contents.Restore = output.headers[\"x-amz-restore\"];\n        }\n        if (output.headers[\"last-modified\"] !== undefined) {\n            contents.LastModified = __expectNonNull(__parseRfc7231DateTime(output.headers[\"last-modified\"]));\n        }\n        if (output.headers[\"content-length\"] !== undefined) {\n            contents.ContentLength = __strictParseLong(output.headers[\"content-length\"]);\n        }\n        if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n        }\n        if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n            contents.MissingMeta = __strictParseInt32(output.headers[\"x-amz-missing-meta\"]);\n        }\n        if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n        }\n        if (output.headers[\"cache-control\"] !== undefined) {\n            contents.CacheControl = output.headers[\"cache-control\"];\n        }\n        if (output.headers[\"content-disposition\"] !== undefined) {\n            contents.ContentDisposition = output.headers[\"content-disposition\"];\n        }\n        if (output.headers[\"content-encoding\"] !== undefined) {\n            contents.ContentEncoding = output.headers[\"content-encoding\"];\n        }\n        if (output.headers[\"content-language\"] !== undefined) {\n            contents.ContentLanguage = output.headers[\"content-language\"];\n        }\n        if (output.headers[\"content-range\"] !== undefined) {\n            contents.ContentRange = output.headers[\"content-range\"];\n        }\n        if (output.headers[\"content-type\"] !== undefined) {\n            contents.ContentType = output.headers[\"content-type\"];\n        }\n        if (output.headers[\"expires\"] !== undefined) {\n            contents.Expires = __expectNonNull(__parseRfc7231DateTime(output.headers[\"expires\"]));\n        }\n        if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n            contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n        }\n        if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n            contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n        }\n        if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n        }\n        if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n            contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n        }\n        if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n            contents.PartsCount = __strictParseInt32(output.headers[\"x-amz-mp-parts-count\"]);\n        }\n        if (output.headers[\"x-amz-tagging-count\"] !== undefined) {\n            contents.TagCount = __strictParseInt32(output.headers[\"x-amz-tagging-count\"]);\n        }\n        if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n            contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n        }\n        if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n            contents.ObjectLockRetainUntilDate = __expectNonNull(__parseRfc3339DateTime(output.headers[\"x-amz-object-lock-retain-until-date\"]));\n        }\n        if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n            contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n        }\n        Object.keys(output.headers).forEach(function (header) {\n            if (contents.Metadata === undefined) {\n                contents.Metadata = {};\n            }\n            if (header.startsWith(\"x-amz-meta-\")) {\n                contents.Metadata[header.substring(11)] = output.headers[header];\n            }\n        });\n        data = output.body;\n        contents.Body = data;\n        return [2, Promise.resolve(contents)];\n    });\n}); };\nvar deserializeAws_restXmlGetObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InvalidObjectState\": return [3, 2];\n                    case \"com.amazonaws.s3#InvalidObjectState\": return [3, 2];\n                    case \"NoSuchKey\": return [3, 4];\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restXmlInvalidObjectStateResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetObjectAclCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Grants: undefined,\n                    Owner: undefined,\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.AccessControlList === \"\") {\n                    contents.Grants = [];\n                }\n                if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n                    contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n                }\n                if (data[\"Owner\"] !== undefined) {\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchKey\": return [3, 2];\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3, 2];\n                }\n                return [3, 4];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectLegalHoldCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    LegalHold: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectLegalHoldCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectLockConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ObjectLockConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectLockConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectRetentionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Retention: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectRetentionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    TagSet: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.TagSet === \"\") {\n                    contents.TagSet = [];\n                }\n                if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n                    contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectTorrentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];\n        }\n        contents = {\n            $metadata: deserializeMetadata(output),\n            Body: undefined,\n            RequestCharged: undefined,\n        };\n        if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n        }\n        data = output.body;\n        contents.Body = data;\n        return [2, Promise.resolve(contents)];\n    });\n}); };\nvar deserializeAws_restXmlGetObjectTorrentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetPublicAccessBlockCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    PublicAccessBlockConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetPublicAccessBlockCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlHeadBucketCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlHeadBucketCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlHeadBucketCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NotFound\": return [3, 2];\n                    case \"com.amazonaws.s3#NotFound\": return [3, 2];\n                }\n                return [3, 4];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restXmlNotFoundResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlHeadObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlHeadObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AcceptRanges: undefined,\n                    ArchiveStatus: undefined,\n                    BucketKeyEnabled: undefined,\n                    CacheControl: undefined,\n                    ContentDisposition: undefined,\n                    ContentEncoding: undefined,\n                    ContentLanguage: undefined,\n                    ContentLength: undefined,\n                    ContentType: undefined,\n                    DeleteMarker: undefined,\n                    ETag: undefined,\n                    Expiration: undefined,\n                    Expires: undefined,\n                    LastModified: undefined,\n                    Metadata: undefined,\n                    MissingMeta: undefined,\n                    ObjectLockLegalHoldStatus: undefined,\n                    ObjectLockMode: undefined,\n                    ObjectLockRetainUntilDate: undefined,\n                    PartsCount: undefined,\n                    ReplicationStatus: undefined,\n                    RequestCharged: undefined,\n                    Restore: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    StorageClass: undefined,\n                    VersionId: undefined,\n                    WebsiteRedirectLocation: undefined,\n                };\n                if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n                    contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n                }\n                if (output.headers[\"accept-ranges\"] !== undefined) {\n                    contents.AcceptRanges = output.headers[\"accept-ranges\"];\n                }\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\n                }\n                if (output.headers[\"x-amz-restore\"] !== undefined) {\n                    contents.Restore = output.headers[\"x-amz-restore\"];\n                }\n                if (output.headers[\"x-amz-archive-status\"] !== undefined) {\n                    contents.ArchiveStatus = output.headers[\"x-amz-archive-status\"];\n                }\n                if (output.headers[\"last-modified\"] !== undefined) {\n                    contents.LastModified = __expectNonNull(__parseRfc7231DateTime(output.headers[\"last-modified\"]));\n                }\n                if (output.headers[\"content-length\"] !== undefined) {\n                    contents.ContentLength = __strictParseLong(output.headers[\"content-length\"]);\n                }\n                if (output.headers[\"etag\"] !== undefined) {\n                    contents.ETag = output.headers[\"etag\"];\n                }\n                if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n                    contents.MissingMeta = __strictParseInt32(output.headers[\"x-amz-missing-meta\"]);\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"cache-control\"] !== undefined) {\n                    contents.CacheControl = output.headers[\"cache-control\"];\n                }\n                if (output.headers[\"content-disposition\"] !== undefined) {\n                    contents.ContentDisposition = output.headers[\"content-disposition\"];\n                }\n                if (output.headers[\"content-encoding\"] !== undefined) {\n                    contents.ContentEncoding = output.headers[\"content-encoding\"];\n                }\n                if (output.headers[\"content-language\"] !== undefined) {\n                    contents.ContentLanguage = output.headers[\"content-language\"];\n                }\n                if (output.headers[\"content-type\"] !== undefined) {\n                    contents.ContentType = output.headers[\"content-type\"];\n                }\n                if (output.headers[\"expires\"] !== undefined) {\n                    contents.Expires = __expectNonNull(__parseRfc7231DateTime(output.headers[\"expires\"]));\n                }\n                if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n                    contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n                    contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n                    contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n                }\n                if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n                    contents.PartsCount = __strictParseInt32(output.headers[\"x-amz-mp-parts-count\"]);\n                }\n                if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n                    contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n                }\n                if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n                    contents.ObjectLockRetainUntilDate = __expectNonNull(__parseRfc3339DateTime(output.headers[\"x-amz-object-lock-retain-until-date\"]));\n                }\n                if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n                    contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n                }\n                Object.keys(output.headers).forEach(function (header) {\n                    if (contents.Metadata === undefined) {\n                        contents.Metadata = {};\n                    }\n                    if (header.startsWith(\"x-amz-meta-\")) {\n                        contents.Metadata[header.substring(11)] = output.headers[header];\n                    }\n                });\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlHeadObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NotFound\": return [3, 2];\n                    case \"com.amazonaws.s3#NotFound\": return [3, 2];\n                }\n                return [3, 4];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restXmlNotFoundResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AnalyticsConfigurationList: undefined,\n                    ContinuationToken: undefined,\n                    IsTruncated: undefined,\n                    NextContinuationToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.AnalyticsConfiguration === \"\") {\n                    contents.AnalyticsConfigurationList = [];\n                }\n                if (data[\"AnalyticsConfiguration\"] !== undefined) {\n                    contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList(__getArrayIfSingleItem(data[\"AnalyticsConfiguration\"]), context);\n                }\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ContinuationToken: undefined,\n                    IntelligentTieringConfigurationList: undefined,\n                    IsTruncated: undefined,\n                    NextContinuationToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n                }\n                if (data.IntelligentTieringConfiguration === \"\") {\n                    contents.IntelligentTieringConfigurationList = [];\n                }\n                if (data[\"IntelligentTieringConfiguration\"] !== undefined) {\n                    contents.IntelligentTieringConfigurationList = deserializeAws_restXmlIntelligentTieringConfigurationList(__getArrayIfSingleItem(data[\"IntelligentTieringConfiguration\"]), context);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketInventoryConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ContinuationToken: undefined,\n                    InventoryConfigurationList: undefined,\n                    IsTruncated: undefined,\n                    NextContinuationToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n                }\n                if (data.InventoryConfiguration === \"\") {\n                    contents.InventoryConfigurationList = [];\n                }\n                if (data[\"InventoryConfiguration\"] !== undefined) {\n                    contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList(__getArrayIfSingleItem(data[\"InventoryConfiguration\"]), context);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketInventoryConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketMetricsConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ContinuationToken: undefined,\n                    IsTruncated: undefined,\n                    MetricsConfigurationList: undefined,\n                    NextContinuationToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data.MetricsConfiguration === \"\") {\n                    contents.MetricsConfigurationList = [];\n                }\n                if (data[\"MetricsConfiguration\"] !== undefined) {\n                    contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList(__getArrayIfSingleItem(data[\"MetricsConfiguration\"]), context);\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketMetricsConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListBucketsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Buckets: undefined,\n                    Owner: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.Buckets === \"\") {\n                    contents.Buckets = [];\n                }\n                if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\n                    contents.Buckets = deserializeAws_restXmlBuckets(__getArrayIfSingleItem(data[\"Buckets\"][\"Bucket\"]), context);\n                }\n                if (data[\"Owner\"] !== undefined) {\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListMultipartUploadsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Bucket: undefined,\n                    CommonPrefixes: undefined,\n                    Delimiter: undefined,\n                    EncodingType: undefined,\n                    IsTruncated: undefined,\n                    KeyMarker: undefined,\n                    MaxUploads: undefined,\n                    NextKeyMarker: undefined,\n                    NextUploadIdMarker: undefined,\n                    Prefix: undefined,\n                    UploadIdMarker: undefined,\n                    Uploads: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"Bucket\"] !== undefined) {\n                    contents.Bucket = __expectString(data[\"Bucket\"]);\n                }\n                if (data.CommonPrefixes === \"\") {\n                    contents.CommonPrefixes = [];\n                }\n                if (data[\"CommonPrefixes\"] !== undefined) {\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n                }\n                if (data[\"Delimiter\"] !== undefined) {\n                    contents.Delimiter = __expectString(data[\"Delimiter\"]);\n                }\n                if (data[\"EncodingType\"] !== undefined) {\n                    contents.EncodingType = __expectString(data[\"EncodingType\"]);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"KeyMarker\"] !== undefined) {\n                    contents.KeyMarker = __expectString(data[\"KeyMarker\"]);\n                }\n                if (data[\"MaxUploads\"] !== undefined) {\n                    contents.MaxUploads = __strictParseInt32(data[\"MaxUploads\"]);\n                }\n                if (data[\"NextKeyMarker\"] !== undefined) {\n                    contents.NextKeyMarker = __expectString(data[\"NextKeyMarker\"]);\n                }\n                if (data[\"NextUploadIdMarker\"] !== undefined) {\n                    contents.NextUploadIdMarker = __expectString(data[\"NextUploadIdMarker\"]);\n                }\n                if (data[\"Prefix\"] !== undefined) {\n                    contents.Prefix = __expectString(data[\"Prefix\"]);\n                }\n                if (data[\"UploadIdMarker\"] !== undefined) {\n                    contents.UploadIdMarker = __expectString(data[\"UploadIdMarker\"]);\n                }\n                if (data.Upload === \"\") {\n                    contents.Uploads = [];\n                }\n                if (data[\"Upload\"] !== undefined) {\n                    contents.Uploads = deserializeAws_restXmlMultipartUploadList(__getArrayIfSingleItem(data[\"Upload\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListMultipartUploadsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListObjectsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListObjectsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CommonPrefixes: undefined,\n                    Contents: undefined,\n                    Delimiter: undefined,\n                    EncodingType: undefined,\n                    IsTruncated: undefined,\n                    Marker: undefined,\n                    MaxKeys: undefined,\n                    Name: undefined,\n                    NextMarker: undefined,\n                    Prefix: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.CommonPrefixes === \"\") {\n                    contents.CommonPrefixes = [];\n                }\n                if (data[\"CommonPrefixes\"] !== undefined) {\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n                }\n                if (data.Contents === \"\") {\n                    contents.Contents = [];\n                }\n                if (data[\"Contents\"] !== undefined) {\n                    contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n                }\n                if (data[\"Delimiter\"] !== undefined) {\n                    contents.Delimiter = __expectString(data[\"Delimiter\"]);\n                }\n                if (data[\"EncodingType\"] !== undefined) {\n                    contents.EncodingType = __expectString(data[\"EncodingType\"]);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"Marker\"] !== undefined) {\n                    contents.Marker = __expectString(data[\"Marker\"]);\n                }\n                if (data[\"MaxKeys\"] !== undefined) {\n                    contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n                }\n                if (data[\"Name\"] !== undefined) {\n                    contents.Name = __expectString(data[\"Name\"]);\n                }\n                if (data[\"NextMarker\"] !== undefined) {\n                    contents.NextMarker = __expectString(data[\"NextMarker\"]);\n                }\n                if (data[\"Prefix\"] !== undefined) {\n                    contents.Prefix = __expectString(data[\"Prefix\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListObjectsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchBucket\": return [3, 2];\n                    case \"com.amazonaws.s3#NoSuchBucket\": return [3, 2];\n                }\n                return [3, 4];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListObjectsV2Command = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListObjectsV2CommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CommonPrefixes: undefined,\n                    Contents: undefined,\n                    ContinuationToken: undefined,\n                    Delimiter: undefined,\n                    EncodingType: undefined,\n                    IsTruncated: undefined,\n                    KeyCount: undefined,\n                    MaxKeys: undefined,\n                    Name: undefined,\n                    NextContinuationToken: undefined,\n                    Prefix: undefined,\n                    StartAfter: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.CommonPrefixes === \"\") {\n                    contents.CommonPrefixes = [];\n                }\n                if (data[\"CommonPrefixes\"] !== undefined) {\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n                }\n                if (data.Contents === \"\") {\n                    contents.Contents = [];\n                }\n                if (data[\"Contents\"] !== undefined) {\n                    contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n                }\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n                }\n                if (data[\"Delimiter\"] !== undefined) {\n                    contents.Delimiter = __expectString(data[\"Delimiter\"]);\n                }\n                if (data[\"EncodingType\"] !== undefined) {\n                    contents.EncodingType = __expectString(data[\"EncodingType\"]);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"KeyCount\"] !== undefined) {\n                    contents.KeyCount = __strictParseInt32(data[\"KeyCount\"]);\n                }\n                if (data[\"MaxKeys\"] !== undefined) {\n                    contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n                }\n                if (data[\"Name\"] !== undefined) {\n                    contents.Name = __expectString(data[\"Name\"]);\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n                }\n                if (data[\"Prefix\"] !== undefined) {\n                    contents.Prefix = __expectString(data[\"Prefix\"]);\n                }\n                if (data[\"StartAfter\"] !== undefined) {\n                    contents.StartAfter = __expectString(data[\"StartAfter\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListObjectsV2CommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchBucket\": return [3, 2];\n                    case \"com.amazonaws.s3#NoSuchBucket\": return [3, 2];\n                }\n                return [3, 4];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListObjectVersionsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListObjectVersionsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CommonPrefixes: undefined,\n                    DeleteMarkers: undefined,\n                    Delimiter: undefined,\n                    EncodingType: undefined,\n                    IsTruncated: undefined,\n                    KeyMarker: undefined,\n                    MaxKeys: undefined,\n                    Name: undefined,\n                    NextKeyMarker: undefined,\n                    NextVersionIdMarker: undefined,\n                    Prefix: undefined,\n                    VersionIdMarker: undefined,\n                    Versions: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.CommonPrefixes === \"\") {\n                    contents.CommonPrefixes = [];\n                }\n                if (data[\"CommonPrefixes\"] !== undefined) {\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n                }\n                if (data.DeleteMarker === \"\") {\n                    contents.DeleteMarkers = [];\n                }\n                if (data[\"DeleteMarker\"] !== undefined) {\n                    contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers(__getArrayIfSingleItem(data[\"DeleteMarker\"]), context);\n                }\n                if (data[\"Delimiter\"] !== undefined) {\n                    contents.Delimiter = __expectString(data[\"Delimiter\"]);\n                }\n                if (data[\"EncodingType\"] !== undefined) {\n                    contents.EncodingType = __expectString(data[\"EncodingType\"]);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"KeyMarker\"] !== undefined) {\n                    contents.KeyMarker = __expectString(data[\"KeyMarker\"]);\n                }\n                if (data[\"MaxKeys\"] !== undefined) {\n                    contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n                }\n                if (data[\"Name\"] !== undefined) {\n                    contents.Name = __expectString(data[\"Name\"]);\n                }\n                if (data[\"NextKeyMarker\"] !== undefined) {\n                    contents.NextKeyMarker = __expectString(data[\"NextKeyMarker\"]);\n                }\n                if (data[\"NextVersionIdMarker\"] !== undefined) {\n                    contents.NextVersionIdMarker = __expectString(data[\"NextVersionIdMarker\"]);\n                }\n                if (data[\"Prefix\"] !== undefined) {\n                    contents.Prefix = __expectString(data[\"Prefix\"]);\n                }\n                if (data[\"VersionIdMarker\"] !== undefined) {\n                    contents.VersionIdMarker = __expectString(data[\"VersionIdMarker\"]);\n                }\n                if (data.Version === \"\") {\n                    contents.Versions = [];\n                }\n                if (data[\"Version\"] !== undefined) {\n                    contents.Versions = deserializeAws_restXmlObjectVersionList(__getArrayIfSingleItem(data[\"Version\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListObjectVersionsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListPartsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListPartsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AbortDate: undefined,\n                    AbortRuleId: undefined,\n                    Bucket: undefined,\n                    Initiator: undefined,\n                    IsTruncated: undefined,\n                    Key: undefined,\n                    MaxParts: undefined,\n                    NextPartNumberMarker: undefined,\n                    Owner: undefined,\n                    PartNumberMarker: undefined,\n                    Parts: undefined,\n                    RequestCharged: undefined,\n                    StorageClass: undefined,\n                    UploadId: undefined,\n                };\n                if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n                    contents.AbortDate = __expectNonNull(__parseRfc7231DateTime(output.headers[\"x-amz-abort-date\"]));\n                }\n                if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n                    contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"Bucket\"] !== undefined) {\n                    contents.Bucket = __expectString(data[\"Bucket\"]);\n                }\n                if (data[\"Initiator\"] !== undefined) {\n                    contents.Initiator = deserializeAws_restXmlInitiator(data[\"Initiator\"], context);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"Key\"] !== undefined) {\n                    contents.Key = __expectString(data[\"Key\"]);\n                }\n                if (data[\"MaxParts\"] !== undefined) {\n                    contents.MaxParts = __strictParseInt32(data[\"MaxParts\"]);\n                }\n                if (data[\"NextPartNumberMarker\"] !== undefined) {\n                    contents.NextPartNumberMarker = __expectString(data[\"NextPartNumberMarker\"]);\n                }\n                if (data[\"Owner\"] !== undefined) {\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                }\n                if (data[\"PartNumberMarker\"] !== undefined) {\n                    contents.PartNumberMarker = __expectString(data[\"PartNumberMarker\"]);\n                }\n                if (data.Part === \"\") {\n                    contents.Parts = [];\n                }\n                if (data[\"Part\"] !== undefined) {\n                    contents.Parts = deserializeAws_restXmlParts(__getArrayIfSingleItem(data[\"Part\"]), context);\n                }\n                if (data[\"StorageClass\"] !== undefined) {\n                    contents.StorageClass = __expectString(data[\"StorageClass\"]);\n                }\n                if (data[\"UploadId\"] !== undefined) {\n                    contents.UploadId = __expectString(data[\"UploadId\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListPartsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketAclCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketCorsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketCorsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketCorsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketInventoryConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketInventoryConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketLoggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketLoggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketMetricsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketMetricsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketNotificationConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketNotificationConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketOwnershipControlsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketOwnershipControlsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketReplicationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketReplicationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketRequestPaymentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketRequestPaymentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketVersioningCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketVersioningCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketWebsiteCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketWebsiteCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BucketKeyEnabled: undefined,\n                    ETag: undefined,\n                    Expiration: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSEncryptionContext: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\n                }\n                if (output.headers[\"etag\"] !== undefined) {\n                    contents.ETag = output.headers[\"etag\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n                    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutObjectAclCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchKey\": return [3, 2];\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3, 2];\n                }\n                return [3, 4];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectLegalHoldCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectLegalHoldCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectLockConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectLockConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectRetentionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectRetentionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutPublicAccessBlockCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutPublicAccessBlockCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlRestoreObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlRestoreObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                    RestoreOutputPath: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                if (output.headers[\"x-amz-restore-output-path\"] !== undefined) {\n                    contents.RestoreOutputPath = output.headers[\"x-amz-restore-output-path\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlRestoreObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"ObjectAlreadyInActiveTierError\": return [3, 2];\n                    case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\": return [3, 2];\n                }\n                return [3, 4];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlSelectObjectContentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlSelectObjectContentCommandError(output, context)];\n        }\n        contents = {\n            $metadata: deserializeMetadata(output),\n            Payload: undefined,\n        };\n        data = context.eventStreamMarshaller.deserialize(output.body, function (event) { return __awaiter(void 0, void 0, void 0, function () {\n            var eventName, eventHeaders, eventMessage, parsedEvent;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        eventName = Object.keys(event)[0];\n                        eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\n                            accummulator[curr[0]] = curr[1].value;\n                            return accummulator;\n                        }, {});\n                        eventMessage = {\n                            headers: eventHeaders,\n                            body: event[eventName].body,\n                        };\n                        parsedEvent = (_a = {},\n                            _a[eventName] = eventMessage,\n                            _a);\n                        return [4, deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];\n                    case 1: return [2, _b.sent()];\n                }\n            });\n        }); });\n        contents.Payload = data;\n        return [2, Promise.resolve(contents)];\n    });\n}); };\nvar deserializeAws_restXmlSelectObjectContentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlUploadPartCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlUploadPartCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BucketKeyEnabled: undefined,\n                    ETag: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                };\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"etag\"] !== undefined) {\n                    contents.ETag = output.headers[\"etag\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlUploadPartCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlUploadPartCopyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlUploadPartCopyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BucketKeyEnabled: undefined,\n                    CopyPartResult: undefined,\n                    CopySourceVersionId: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                };\n                if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n                    contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlUploadPartCopyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlWriteGetObjectResponseCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlWriteGetObjectResponseCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlWriteGetObjectResponseCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_restXmlSelectObjectContentEventStream_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b, _c, _d, _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                if (!(output[\"Records\"] !== undefined)) return [3, 2];\n                _a = {};\n                return [4, deserializeAws_restXmlRecordsEvent_event(output[\"Records\"], context)];\n            case 1: return [2, (_a.Records = _f.sent(),\n                    _a)];\n            case 2:\n                if (!(output[\"Stats\"] !== undefined)) return [3, 4];\n                _b = {};\n                return [4, deserializeAws_restXmlStatsEvent_event(output[\"Stats\"], context)];\n            case 3: return [2, (_b.Stats = _f.sent(),\n                    _b)];\n            case 4:\n                if (!(output[\"Progress\"] !== undefined)) return [3, 6];\n                _c = {};\n                return [4, deserializeAws_restXmlProgressEvent_event(output[\"Progress\"], context)];\n            case 5: return [2, (_c.Progress = _f.sent(),\n                    _c)];\n            case 6:\n                if (!(output[\"Cont\"] !== undefined)) return [3, 8];\n                _d = {};\n                return [4, deserializeAws_restXmlContinuationEvent_event(output[\"Cont\"], context)];\n            case 7: return [2, (_d.Cont = _f.sent(),\n                    _d)];\n            case 8:\n                if (!(output[\"End\"] !== undefined)) return [3, 10];\n                _e = {};\n                return [4, deserializeAws_restXmlEndEvent_event(output[\"End\"], context)];\n            case 9: return [2, (_e.End = _f.sent(),\n                    _e)];\n            case 10: return [2, { $unknown: output }];\n        }\n    });\n}); };\nvar deserializeAws_restXmlContinuationEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        contents = {};\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlEndEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        contents = {};\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlProgressEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                contents = {};\n                _a = contents;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                _a.Details = _b.sent();\n                return [2, contents];\n        }\n    });\n}); };\nvar deserializeAws_restXmlRecordsEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        contents = {};\n        contents.Payload = output.body;\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlStatsEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                contents = {};\n                _a = contents;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                _a.Details = _b.sent();\n                return [2, contents];\n        }\n    });\n}); };\nvar deserializeAws_restXmlBucketAlreadyExistsResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"BucketAlreadyExists\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"BucketAlreadyOwnedByYou\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlInvalidObjectStateResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"InvalidObjectState\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            AccessTier: undefined,\n            StorageClass: undefined,\n        };\n        data = parsedOutput.body;\n        if (data[\"AccessTier\"] !== undefined) {\n            contents.AccessTier = __expectString(data[\"AccessTier\"]);\n        }\n        if (data[\"StorageClass\"] !== undefined) {\n            contents.StorageClass = __expectString(data[\"StorageClass\"]);\n        }\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlNoSuchBucketResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NoSuchBucket\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlNoSuchKeyResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NoSuchKey\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlNoSuchUploadResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NoSuchUpload\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlNotFoundResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NotFound\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"ObjectAlreadyInActiveTierError\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"ObjectNotInActiveTierError\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2, contents];\n    });\n}); };\nvar serializeAws_restXmlAbortIncompleteMultipartUpload = function (input, context) {\n    var bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\n    if (input.DaysAfterInitiation !== undefined && input.DaysAfterInitiation !== null) {\n        var node = new __XmlNode(\"DaysAfterInitiation\")\n            .addChildNode(new __XmlText(String(input.DaysAfterInitiation)))\n            .withName(\"DaysAfterInitiation\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAccelerateConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"AccelerateConfiguration\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"BucketAccelerateStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAccessControlPolicy = function (input, context) {\n    var bodyNode = new __XmlNode(\"AccessControlPolicy\");\n    if (input.Grants !== undefined && input.Grants !== null) {\n        var nodes = serializeAws_restXmlGrants(input.Grants, context);\n        var containerNode_1 = new __XmlNode(\"AccessControlList\");\n        nodes.map(function (node) {\n            containerNode_1.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_1);\n    }\n    if (input.Owner !== undefined && input.Owner !== null) {\n        var node = serializeAws_restXmlOwner(input.Owner, context).withName(\"Owner\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAccessControlTranslation = function (input, context) {\n    var bodyNode = new __XmlNode(\"AccessControlTranslation\");\n    if (input.Owner !== undefined && input.Owner !== null) {\n        var node = new __XmlNode(\"OwnerOverride\").addChildNode(new __XmlText(input.Owner)).withName(\"Owner\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAllowedHeaders = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"AllowedHeader\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlAllowedMethods = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"AllowedMethod\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlAllowedOrigins = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"AllowedOrigin\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlAnalyticsAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"AnalyticsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClassAnalysis !== undefined && input.StorageClassAnalysis !== null) {\n        var node = serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsExportDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\n    if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n        var node = serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsFilter\");\n    AnalyticsFilter.visit(input, {\n        Prefix: function (value) {\n            var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: function (value) {\n            var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        And: function (value) {\n            var node = serializeAws_restXmlAnalyticsAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: function (name, value) {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsS3BucketDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\n    if (input.Format !== undefined && input.Format !== null) {\n        var node = new __XmlNode(\"AnalyticsS3ExportFileFormat\")\n            .addChildNode(new __XmlText(input.Format))\n            .withName(\"Format\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BucketAccountId !== undefined && input.BucketAccountId !== null) {\n        var node = new __XmlNode(\"AccountId\")\n            .addChildNode(new __XmlText(input.BucketAccountId))\n            .withName(\"BucketAccountId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket !== undefined && input.Bucket !== null) {\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlBucketLifecycleConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\n    if (input.Rules !== undefined && input.Rules !== null) {\n        var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlBucketLoggingStatus = function (input, context) {\n    var bodyNode = new __XmlNode(\"BucketLoggingStatus\");\n    if (input.LoggingEnabled !== undefined && input.LoggingEnabled !== null) {\n        var node = serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCompletedMultipartUpload = function (input, context) {\n    var bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\n    if (input.Parts !== undefined && input.Parts !== null) {\n        var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Part\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCompletedPart = function (input, context) {\n    var bodyNode = new __XmlNode(\"CompletedPart\");\n    if (input.ETag !== undefined && input.ETag !== null) {\n        var node = new __XmlNode(\"ETag\").addChildNode(new __XmlText(input.ETag)).withName(\"ETag\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.PartNumber !== undefined && input.PartNumber !== null) {\n        var node = new __XmlNode(\"PartNumber\")\n            .addChildNode(new __XmlText(String(input.PartNumber)))\n            .withName(\"PartNumber\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCompletedPartList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlCompletedPart(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlCondition = function (input, context) {\n    var bodyNode = new __XmlNode(\"Condition\");\n    if (input.HttpErrorCodeReturnedEquals !== undefined && input.HttpErrorCodeReturnedEquals !== null) {\n        var node = new __XmlNode(\"HttpErrorCodeReturnedEquals\")\n            .addChildNode(new __XmlText(input.HttpErrorCodeReturnedEquals))\n            .withName(\"HttpErrorCodeReturnedEquals\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KeyPrefixEquals !== undefined && input.KeyPrefixEquals !== null) {\n        var node = new __XmlNode(\"KeyPrefixEquals\")\n            .addChildNode(new __XmlText(input.KeyPrefixEquals))\n            .withName(\"KeyPrefixEquals\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCORSConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"CORSConfiguration\");\n    if (input.CORSRules !== undefined && input.CORSRules !== null) {\n        var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"CORSRule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCORSRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"CORSRule\");\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AllowedHeaders !== undefined && input.AllowedHeaders !== null) {\n        var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);\n        nodes.map(function (node) {\n            node = node.withName(\"AllowedHeader\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AllowedMethods !== undefined && input.AllowedMethods !== null) {\n        var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);\n        nodes.map(function (node) {\n            node = node.withName(\"AllowedMethod\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AllowedOrigins !== undefined && input.AllowedOrigins !== null) {\n        var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);\n        nodes.map(function (node) {\n            node = node.withName(\"AllowedOrigin\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.ExposeHeaders !== undefined && input.ExposeHeaders !== null) {\n        var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);\n        nodes.map(function (node) {\n            node = node.withName(\"ExposeHeader\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.MaxAgeSeconds !== undefined && input.MaxAgeSeconds !== null) {\n        var node = new __XmlNode(\"MaxAgeSeconds\")\n            .addChildNode(new __XmlText(String(input.MaxAgeSeconds)))\n            .withName(\"MaxAgeSeconds\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCORSRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlCORSRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlCreateBucketConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\n    if (input.LocationConstraint !== undefined && input.LocationConstraint !== null) {\n        var node = new __XmlNode(\"BucketLocationConstraint\")\n            .addChildNode(new __XmlText(input.LocationConstraint))\n            .withName(\"LocationConstraint\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCSVInput = function (input, context) {\n    var bodyNode = new __XmlNode(\"CSVInput\");\n    if (input.FileHeaderInfo !== undefined && input.FileHeaderInfo !== null) {\n        var node = new __XmlNode(\"FileHeaderInfo\")\n            .addChildNode(new __XmlText(input.FileHeaderInfo))\n            .withName(\"FileHeaderInfo\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comments !== undefined && input.Comments !== null) {\n        var node = new __XmlNode(\"Comments\").addChildNode(new __XmlText(input.Comments)).withName(\"Comments\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n        var node = new __XmlNode(\"QuoteEscapeCharacter\")\n            .addChildNode(new __XmlText(input.QuoteEscapeCharacter))\n            .withName(\"QuoteEscapeCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n        var node = new __XmlNode(\"RecordDelimiter\")\n            .addChildNode(new __XmlText(input.RecordDelimiter))\n            .withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n        var node = new __XmlNode(\"FieldDelimiter\")\n            .addChildNode(new __XmlText(input.FieldDelimiter))\n            .withName(\"FieldDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n        var node = new __XmlNode(\"QuoteCharacter\")\n            .addChildNode(new __XmlText(input.QuoteCharacter))\n            .withName(\"QuoteCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AllowQuotedRecordDelimiter !== undefined && input.AllowQuotedRecordDelimiter !== null) {\n        var node = new __XmlNode(\"AllowQuotedRecordDelimiter\")\n            .addChildNode(new __XmlText(String(input.AllowQuotedRecordDelimiter)))\n            .withName(\"AllowQuotedRecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCSVOutput = function (input, context) {\n    var bodyNode = new __XmlNode(\"CSVOutput\");\n    if (input.QuoteFields !== undefined && input.QuoteFields !== null) {\n        var node = new __XmlNode(\"QuoteFields\").addChildNode(new __XmlText(input.QuoteFields)).withName(\"QuoteFields\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n        var node = new __XmlNode(\"QuoteEscapeCharacter\")\n            .addChildNode(new __XmlText(input.QuoteEscapeCharacter))\n            .withName(\"QuoteEscapeCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n        var node = new __XmlNode(\"RecordDelimiter\")\n            .addChildNode(new __XmlText(input.RecordDelimiter))\n            .withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n        var node = new __XmlNode(\"FieldDelimiter\")\n            .addChildNode(new __XmlText(input.FieldDelimiter))\n            .withName(\"FieldDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n        var node = new __XmlNode(\"QuoteCharacter\")\n            .addChildNode(new __XmlText(input.QuoteCharacter))\n            .withName(\"QuoteCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDefaultRetention = function (input, context) {\n    var bodyNode = new __XmlNode(\"DefaultRetention\");\n    if (input.Mode !== undefined && input.Mode !== null) {\n        var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Years !== undefined && input.Years !== null) {\n        var node = new __XmlNode(\"Years\").addChildNode(new __XmlText(String(input.Years))).withName(\"Years\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDelete = function (input, context) {\n    var bodyNode = new __XmlNode(\"Delete\");\n    if (input.Objects !== undefined && input.Objects !== null) {\n        var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Object\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Quiet !== undefined && input.Quiet !== null) {\n        var node = new __XmlNode(\"Quiet\").addChildNode(new __XmlText(String(input.Quiet))).withName(\"Quiet\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDeleteMarkerReplication = function (input, context) {\n    var bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"DeleteMarkerReplicationStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"Destination\");\n    if (input.Bucket !== undefined && input.Bucket !== null) {\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Account !== undefined && input.Account !== null) {\n        var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.Account)).withName(\"Account\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass !== undefined && input.StorageClass !== null) {\n        var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlTranslation !== undefined && input.AccessControlTranslation !== null) {\n        var node = serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EncryptionConfiguration !== undefined && input.EncryptionConfiguration !== null) {\n        var node = serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplicationTime !== undefined && input.ReplicationTime !== null) {\n        var node = serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Metrics !== undefined && input.Metrics !== null) {\n        var node = serializeAws_restXmlMetrics(input.Metrics, context).withName(\"Metrics\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlEncryption = function (input, context) {\n    var bodyNode = new __XmlNode(\"Encryption\");\n    if (input.EncryptionType !== undefined && input.EncryptionType !== null) {\n        var node = new __XmlNode(\"ServerSideEncryption\")\n            .addChildNode(new __XmlText(input.EncryptionType))\n            .withName(\"EncryptionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSKeyId !== undefined && input.KMSKeyId !== null) {\n        var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSKeyId)).withName(\"KMSKeyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSContext !== undefined && input.KMSContext !== null) {\n        var node = new __XmlNode(\"KMSContext\").addChildNode(new __XmlText(input.KMSContext)).withName(\"KMSContext\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlEncryptionConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"EncryptionConfiguration\");\n    if (input.ReplicaKmsKeyID !== undefined && input.ReplicaKmsKeyID !== null) {\n        var node = new __XmlNode(\"ReplicaKmsKeyID\")\n            .addChildNode(new __XmlText(input.ReplicaKmsKeyID))\n            .withName(\"ReplicaKmsKeyID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlErrorDocument = function (input, context) {\n    var bodyNode = new __XmlNode(\"ErrorDocument\");\n    if (input.Key !== undefined && input.Key !== null) {\n        var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlEventBridgeConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"EventBridgeConfiguration\");\n    return bodyNode;\n};\nvar serializeAws_restXmlEventList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"Event\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlExistingObjectReplication = function (input, context) {\n    var bodyNode = new __XmlNode(\"ExistingObjectReplication\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ExistingObjectReplicationStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlExposeHeaders = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"ExposeHeader\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlFilterRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"FilterRule\");\n    if (input.Name !== undefined && input.Name !== null) {\n        var node = new __XmlNode(\"FilterRuleName\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        var node = new __XmlNode(\"FilterRuleValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlFilterRuleList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlFilterRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlGlacierJobParameters = function (input, context) {\n    var bodyNode = new __XmlNode(\"GlacierJobParameters\");\n    if (input.Tier !== undefined && input.Tier !== null) {\n        var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlGrant = function (input, context) {\n    var bodyNode = new __XmlNode(\"Grant\");\n    if (input.Grantee !== undefined && input.Grantee !== null) {\n        var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n        node.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Permission !== undefined && input.Permission !== null) {\n        var node = new __XmlNode(\"Permission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlGrantee = function (input, context) {\n    var bodyNode = new __XmlNode(\"Grantee\");\n    if (input.DisplayName !== undefined && input.DisplayName !== null) {\n        var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EmailAddress !== undefined && input.EmailAddress !== null) {\n        var node = new __XmlNode(\"EmailAddress\").addChildNode(new __XmlText(input.EmailAddress)).withName(\"EmailAddress\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.URI !== undefined && input.URI !== null) {\n        var node = new __XmlNode(\"URI\").addChildNode(new __XmlText(input.URI)).withName(\"URI\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        bodyNode.addAttribute(\"xsi:type\", input.Type);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlGrants = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlGrant(entry, context);\n        return node.withName(\"Grant\");\n    });\n};\nvar serializeAws_restXmlIndexDocument = function (input, context) {\n    var bodyNode = new __XmlNode(\"IndexDocument\");\n    if (input.Suffix !== undefined && input.Suffix !== null) {\n        var node = new __XmlNode(\"Suffix\").addChildNode(new __XmlText(input.Suffix)).withName(\"Suffix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInputSerialization = function (input, context) {\n    var bodyNode = new __XmlNode(\"InputSerialization\");\n    if (input.CSV !== undefined && input.CSV !== null) {\n        var node = serializeAws_restXmlCSVInput(input.CSV, context).withName(\"CSV\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CompressionType !== undefined && input.CompressionType !== null) {\n        var node = new __XmlNode(\"CompressionType\")\n            .addChildNode(new __XmlText(input.CompressionType))\n            .withName(\"CompressionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.JSON !== undefined && input.JSON !== null) {\n        var node = serializeAws_restXmlJSONInput(input.JSON, context).withName(\"JSON\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Parquet !== undefined && input.Parquet !== null) {\n        var node = serializeAws_restXmlParquetInput(input.Parquet, context).withName(\"Parquet\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlIntelligentTieringAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"IntelligentTieringAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlIntelligentTieringConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"IntelligentTieringConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"IntelligentTieringId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlIntelligentTieringFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"IntelligentTieringStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tierings !== undefined && input.Tierings !== null) {\n        var nodes = serializeAws_restXmlTieringList(input.Tierings, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tiering\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlIntelligentTieringFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"IntelligentTieringFilter\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tag !== undefined && input.Tag !== null) {\n        var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.And !== undefined && input.And !== null) {\n        var node = serializeAws_restXmlIntelligentTieringAndOperator(input.And, context).withName(\"And\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryConfiguration\");\n    if (input.Destination !== undefined && input.Destination !== null) {\n        var node = serializeAws_restXmlInventoryDestination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IsEnabled !== undefined && input.IsEnabled !== null) {\n        var node = new __XmlNode(\"IsEnabled\").addChildNode(new __XmlText(String(input.IsEnabled))).withName(\"IsEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlInventoryFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"InventoryId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IncludedObjectVersions !== undefined && input.IncludedObjectVersions !== null) {\n        var node = new __XmlNode(\"InventoryIncludedObjectVersions\")\n            .addChildNode(new __XmlText(input.IncludedObjectVersions))\n            .withName(\"IncludedObjectVersions\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OptionalFields !== undefined && input.OptionalFields !== null) {\n        var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);\n        var containerNode_2 = new __XmlNode(\"OptionalFields\");\n        nodes.map(function (node) {\n            containerNode_2.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_2);\n    }\n    if (input.Schedule !== undefined && input.Schedule !== null) {\n        var node = serializeAws_restXmlInventorySchedule(input.Schedule, context).withName(\"Schedule\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryDestination\");\n    if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n        var node = serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryEncryption = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryEncryption\");\n    if (input.SSES3 !== undefined && input.SSES3 !== null) {\n        var node = serializeAws_restXmlSSES3(input.SSES3, context).withName(\"SSE-S3\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SSEKMS !== undefined && input.SSEKMS !== null) {\n        var node = serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryFilter\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryOptionalFields = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"InventoryOptionalField\").addChildNode(new __XmlText(entry));\n        return node.withName(\"Field\");\n    });\n};\nvar serializeAws_restXmlInventoryS3BucketDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\n    if (input.AccountId !== undefined && input.AccountId !== null) {\n        var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.AccountId)).withName(\"AccountId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket !== undefined && input.Bucket !== null) {\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Format !== undefined && input.Format !== null) {\n        var node = new __XmlNode(\"InventoryFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Encryption !== undefined && input.Encryption !== null) {\n        var node = serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName(\"Encryption\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventorySchedule = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventorySchedule\");\n    if (input.Frequency !== undefined && input.Frequency !== null) {\n        var node = new __XmlNode(\"InventoryFrequency\").addChildNode(new __XmlText(input.Frequency)).withName(\"Frequency\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlJSONInput = function (input, context) {\n    var bodyNode = new __XmlNode(\"JSONInput\");\n    if (input.Type !== undefined && input.Type !== null) {\n        var node = new __XmlNode(\"JSONType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlJSONOutput = function (input, context) {\n    var bodyNode = new __XmlNode(\"JSONOutput\");\n    if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n        var node = new __XmlNode(\"RecordDelimiter\")\n            .addChildNode(new __XmlText(input.RecordDelimiter))\n            .withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLambdaFunctionConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.LambdaFunctionArn !== undefined && input.LambdaFunctionArn !== null) {\n        var node = new __XmlNode(\"LambdaFunctionArn\")\n            .addChildNode(new __XmlText(input.LambdaFunctionArn))\n            .withName(\"CloudFunction\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events !== undefined && input.Events !== null) {\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLambdaFunctionConfigurationList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlLifecycleExpiration = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleExpiration\");\n    if (input.Date !== undefined && input.Date !== null) {\n        var node = new __XmlNode(\"Date\")\n            .addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\"))\n            .withName(\"Date\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExpiredObjectDeleteMarker !== undefined && input.ExpiredObjectDeleteMarker !== null) {\n        var node = new __XmlNode(\"ExpiredObjectDeleteMarker\")\n            .addChildNode(new __XmlText(String(input.ExpiredObjectDeleteMarker)))\n            .withName(\"ExpiredObjectDeleteMarker\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleRule\");\n    if (input.Expiration !== undefined && input.Expiration !== null) {\n        var node = serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName(\"Expiration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ExpirationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Transitions !== undefined && input.Transitions !== null) {\n        var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Transition\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.NoncurrentVersionTransitions !== undefined && input.NoncurrentVersionTransitions !== null) {\n        var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n        nodes.map(function (node) {\n            node = node.withName(\"NoncurrentVersionTransition\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.NoncurrentVersionExpiration !== undefined && input.NoncurrentVersionExpiration !== null) {\n        var node = serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AbortIncompleteMultipartUpload !== undefined && input.AbortIncompleteMultipartUpload !== null) {\n        var node = serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRuleAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.ObjectSizeGreaterThan !== undefined && input.ObjectSizeGreaterThan !== null) {\n        var node = new __XmlNode(\"ObjectSizeGreaterThanBytes\")\n            .addChildNode(new __XmlText(String(input.ObjectSizeGreaterThan)))\n            .withName(\"ObjectSizeGreaterThan\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ObjectSizeLessThan !== undefined && input.ObjectSizeLessThan !== null) {\n        var node = new __XmlNode(\"ObjectSizeLessThanBytes\")\n            .addChildNode(new __XmlText(String(input.ObjectSizeLessThan)))\n            .withName(\"ObjectSizeLessThan\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRuleFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\n    LifecycleRuleFilter.visit(input, {\n        Prefix: function (value) {\n            var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: function (value) {\n            var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        ObjectSizeGreaterThan: function (value) {\n            var node = new __XmlNode(\"ObjectSizeGreaterThanBytes\")\n                .addChildNode(new __XmlText(String(value)))\n                .withName(\"ObjectSizeGreaterThan\");\n            bodyNode.addChildNode(node);\n        },\n        ObjectSizeLessThan: function (value) {\n            var node = new __XmlNode(\"ObjectSizeLessThanBytes\")\n                .addChildNode(new __XmlText(String(value)))\n                .withName(\"ObjectSizeLessThan\");\n            bodyNode.addChildNode(node);\n        },\n        And: function (value) {\n            var node = serializeAws_restXmlLifecycleRuleAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: function (name, value) {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlLifecycleRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlLoggingEnabled = function (input, context) {\n    var bodyNode = new __XmlNode(\"LoggingEnabled\");\n    if (input.TargetBucket !== undefined && input.TargetBucket !== null) {\n        var node = new __XmlNode(\"TargetBucket\").addChildNode(new __XmlText(input.TargetBucket)).withName(\"TargetBucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TargetGrants !== undefined && input.TargetGrants !== null) {\n        var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);\n        var containerNode_3 = new __XmlNode(\"TargetGrants\");\n        nodes.map(function (node) {\n            containerNode_3.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_3);\n    }\n    if (input.TargetPrefix !== undefined && input.TargetPrefix !== null) {\n        var node = new __XmlNode(\"TargetPrefix\").addChildNode(new __XmlText(input.TargetPrefix)).withName(\"TargetPrefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetadataEntry = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetadataEntry\");\n    if (input.Name !== undefined && input.Name !== null) {\n        var node = new __XmlNode(\"MetadataKey\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        var node = new __XmlNode(\"MetadataValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetrics = function (input, context) {\n    var bodyNode = new __XmlNode(\"Metrics\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"MetricsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EventThreshold !== undefined && input.EventThreshold !== null) {\n        var node = serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetricsAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetricsAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AccessPointArn !== undefined && input.AccessPointArn !== null) {\n        var node = new __XmlNode(\"AccessPointArn\")\n            .addChildNode(new __XmlText(input.AccessPointArn))\n            .withName(\"AccessPointArn\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetricsConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetricsConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"MetricsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlMetricsFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetricsFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetricsFilter\");\n    MetricsFilter.visit(input, {\n        Prefix: function (value) {\n            var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: function (value) {\n            var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        AccessPointArn: function (value) {\n            var node = new __XmlNode(\"AccessPointArn\").addChildNode(new __XmlText(value)).withName(\"AccessPointArn\");\n            bodyNode.addChildNode(node);\n        },\n        And: function (value) {\n            var node = serializeAws_restXmlMetricsAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: function (name, value) {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionExpiration = function (input, context) {\n    var bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\n    if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n        var node = new __XmlNode(\"Days\")\n            .addChildNode(new __XmlText(String(input.NoncurrentDays)))\n            .withName(\"NoncurrentDays\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.NewerNoncurrentVersions !== undefined && input.NewerNoncurrentVersions !== null) {\n        var node = new __XmlNode(\"VersionCount\")\n            .addChildNode(new __XmlText(String(input.NewerNoncurrentVersions)))\n            .withName(\"NewerNoncurrentVersions\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionTransition = function (input, context) {\n    var bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\n    if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n        var node = new __XmlNode(\"Days\")\n            .addChildNode(new __XmlText(String(input.NoncurrentDays)))\n            .withName(\"NoncurrentDays\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass !== undefined && input.StorageClass !== null) {\n        var node = new __XmlNode(\"TransitionStorageClass\")\n            .addChildNode(new __XmlText(input.StorageClass))\n            .withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.NewerNoncurrentVersions !== undefined && input.NewerNoncurrentVersions !== null) {\n        var node = new __XmlNode(\"VersionCount\")\n            .addChildNode(new __XmlText(String(input.NewerNoncurrentVersions)))\n            .withName(\"NewerNoncurrentVersions\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionTransitionList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlNotificationConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"NotificationConfiguration\");\n    if (input.TopicConfigurations !== undefined && input.TopicConfigurations !== null) {\n        var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);\n        nodes.map(function (node) {\n            node = node.withName(\"TopicConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.QueueConfigurations !== undefined && input.QueueConfigurations !== null) {\n        var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);\n        nodes.map(function (node) {\n            node = node.withName(\"QueueConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.LambdaFunctionConfigurations !== undefined && input.LambdaFunctionConfigurations !== null) {\n        var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n        nodes.map(function (node) {\n            node = node.withName(\"CloudFunctionConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.EventBridgeConfiguration !== undefined && input.EventBridgeConfiguration !== null) {\n        var node = serializeAws_restXmlEventBridgeConfiguration(input.EventBridgeConfiguration, context).withName(\"EventBridgeConfiguration\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlNotificationConfigurationFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\n    if (input.Key !== undefined && input.Key !== null) {\n        var node = serializeAws_restXmlS3KeyFilter(input.Key, context).withName(\"S3Key\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectIdentifier = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectIdentifier\");\n    if (input.Key !== undefined && input.Key !== null) {\n        var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.VersionId !== undefined && input.VersionId !== null) {\n        var node = new __XmlNode(\"ObjectVersionId\").addChildNode(new __XmlText(input.VersionId)).withName(\"VersionId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectIdentifierList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlObjectIdentifier(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlObjectLockConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\n    if (input.ObjectLockEnabled !== undefined && input.ObjectLockEnabled !== null) {\n        var node = new __XmlNode(\"ObjectLockEnabled\")\n            .addChildNode(new __XmlText(input.ObjectLockEnabled))\n            .withName(\"ObjectLockEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Rule !== undefined && input.Rule !== null) {\n        var node = serializeAws_restXmlObjectLockRule(input.Rule, context).withName(\"Rule\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectLockLegalHold = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ObjectLockLegalHoldStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectLockRetention = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockRetention\");\n    if (input.Mode !== undefined && input.Mode !== null) {\n        var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RetainUntilDate !== undefined && input.RetainUntilDate !== null) {\n        var node = new __XmlNode(\"Date\")\n            .addChildNode(new __XmlText(input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\"))\n            .withName(\"RetainUntilDate\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectLockRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockRule\");\n    if (input.DefaultRetention !== undefined && input.DefaultRetention !== null) {\n        var node = serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOutputLocation = function (input, context) {\n    var bodyNode = new __XmlNode(\"OutputLocation\");\n    if (input.S3 !== undefined && input.S3 !== null) {\n        var node = serializeAws_restXmlS3Location(input.S3, context).withName(\"S3\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOutputSerialization = function (input, context) {\n    var bodyNode = new __XmlNode(\"OutputSerialization\");\n    if (input.CSV !== undefined && input.CSV !== null) {\n        var node = serializeAws_restXmlCSVOutput(input.CSV, context).withName(\"CSV\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.JSON !== undefined && input.JSON !== null) {\n        var node = serializeAws_restXmlJSONOutput(input.JSON, context).withName(\"JSON\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOwner = function (input, context) {\n    var bodyNode = new __XmlNode(\"Owner\");\n    if (input.DisplayName !== undefined && input.DisplayName !== null) {\n        var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOwnershipControls = function (input, context) {\n    var bodyNode = new __XmlNode(\"OwnershipControls\");\n    if (input.Rules !== undefined && input.Rules !== null) {\n        var nodes = serializeAws_restXmlOwnershipControlsRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOwnershipControlsRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"OwnershipControlsRule\");\n    if (input.ObjectOwnership !== undefined && input.ObjectOwnership !== null) {\n        var node = new __XmlNode(\"ObjectOwnership\")\n            .addChildNode(new __XmlText(input.ObjectOwnership))\n            .withName(\"ObjectOwnership\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOwnershipControlsRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlOwnershipControlsRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlParquetInput = function (input, context) {\n    var bodyNode = new __XmlNode(\"ParquetInput\");\n    return bodyNode;\n};\nvar serializeAws_restXmlPublicAccessBlockConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\n    if (input.BlockPublicAcls !== undefined && input.BlockPublicAcls !== null) {\n        var node = new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.BlockPublicAcls)))\n            .withName(\"BlockPublicAcls\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IgnorePublicAcls !== undefined && input.IgnorePublicAcls !== null) {\n        var node = new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.IgnorePublicAcls)))\n            .withName(\"IgnorePublicAcls\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BlockPublicPolicy !== undefined && input.BlockPublicPolicy !== null) {\n        var node = new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.BlockPublicPolicy)))\n            .withName(\"BlockPublicPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RestrictPublicBuckets !== undefined && input.RestrictPublicBuckets !== null) {\n        var node = new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.RestrictPublicBuckets)))\n            .withName(\"RestrictPublicBuckets\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlQueueConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"QueueConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueueArn !== undefined && input.QueueArn !== null) {\n        var node = new __XmlNode(\"QueueArn\").addChildNode(new __XmlText(input.QueueArn)).withName(\"Queue\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events !== undefined && input.Events !== null) {\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlQueueConfigurationList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlQueueConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlRedirect = function (input, context) {\n    var bodyNode = new __XmlNode(\"Redirect\");\n    if (input.HostName !== undefined && input.HostName !== null) {\n        var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HttpRedirectCode !== undefined && input.HttpRedirectCode !== null) {\n        var node = new __XmlNode(\"HttpRedirectCode\")\n            .addChildNode(new __XmlText(input.HttpRedirectCode))\n            .withName(\"HttpRedirectCode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Protocol !== undefined && input.Protocol !== null) {\n        var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplaceKeyPrefixWith !== undefined && input.ReplaceKeyPrefixWith !== null) {\n        var node = new __XmlNode(\"ReplaceKeyPrefixWith\")\n            .addChildNode(new __XmlText(input.ReplaceKeyPrefixWith))\n            .withName(\"ReplaceKeyPrefixWith\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplaceKeyWith !== undefined && input.ReplaceKeyWith !== null) {\n        var node = new __XmlNode(\"ReplaceKeyWith\")\n            .addChildNode(new __XmlText(input.ReplaceKeyWith))\n            .withName(\"ReplaceKeyWith\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRedirectAllRequestsTo = function (input, context) {\n    var bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\n    if (input.HostName !== undefined && input.HostName !== null) {\n        var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Protocol !== undefined && input.Protocol !== null) {\n        var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicaModifications = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicaModifications\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ReplicaModificationsStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationConfiguration\");\n    if (input.Role !== undefined && input.Role !== null) {\n        var node = new __XmlNode(\"Role\").addChildNode(new __XmlText(input.Role)).withName(\"Role\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Rules !== undefined && input.Rules !== null) {\n        var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationRule\");\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Priority !== undefined && input.Priority !== null) {\n        var node = new __XmlNode(\"Priority\").addChildNode(new __XmlText(String(input.Priority))).withName(\"Priority\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ReplicationRuleStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SourceSelectionCriteria !== undefined && input.SourceSelectionCriteria !== null) {\n        var node = serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExistingObjectReplication !== undefined && input.ExistingObjectReplication !== null) {\n        var node = serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Destination !== undefined && input.Destination !== null) {\n        var node = serializeAws_restXmlDestination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DeleteMarkerReplication !== undefined && input.DeleteMarkerReplication !== null) {\n        var node = serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRuleAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRuleFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\n    ReplicationRuleFilter.visit(input, {\n        Prefix: function (value) {\n            var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: function (value) {\n            var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        And: function (value) {\n            var node = serializeAws_restXmlReplicationRuleAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: function (name, value) {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlReplicationRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlReplicationTime = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationTime\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ReplicationTimeStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Time !== undefined && input.Time !== null) {\n        var node = serializeAws_restXmlReplicationTimeValue(input.Time, context).withName(\"Time\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationTimeValue = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationTimeValue\");\n    if (input.Minutes !== undefined && input.Minutes !== null) {\n        var node = new __XmlNode(\"Minutes\").addChildNode(new __XmlText(String(input.Minutes))).withName(\"Minutes\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRequestPaymentConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\n    if (input.Payer !== undefined && input.Payer !== null) {\n        var node = new __XmlNode(\"Payer\").addChildNode(new __XmlText(input.Payer)).withName(\"Payer\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRequestProgress = function (input, context) {\n    var bodyNode = new __XmlNode(\"RequestProgress\");\n    if (input.Enabled !== undefined && input.Enabled !== null) {\n        var node = new __XmlNode(\"EnableRequestProgress\")\n            .addChildNode(new __XmlText(String(input.Enabled)))\n            .withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRestoreRequest = function (input, context) {\n    var bodyNode = new __XmlNode(\"RestoreRequest\");\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.GlacierJobParameters !== undefined && input.GlacierJobParameters !== null) {\n        var node = serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        var node = new __XmlNode(\"RestoreRequestType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tier !== undefined && input.Tier !== null) {\n        var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Description !== undefined && input.Description !== null) {\n        var node = new __XmlNode(\"Description\").addChildNode(new __XmlText(input.Description)).withName(\"Description\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SelectParameters !== undefined && input.SelectParameters !== null) {\n        var node = serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName(\"SelectParameters\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OutputLocation !== undefined && input.OutputLocation !== null) {\n        var node = serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName(\"OutputLocation\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRoutingRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"RoutingRule\");\n    if (input.Condition !== undefined && input.Condition !== null) {\n        var node = serializeAws_restXmlCondition(input.Condition, context).withName(\"Condition\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Redirect !== undefined && input.Redirect !== null) {\n        var node = serializeAws_restXmlRedirect(input.Redirect, context).withName(\"Redirect\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRoutingRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlRoutingRule(entry, context);\n        return node.withName(\"RoutingRule\");\n    });\n};\nvar serializeAws_restXmlS3KeyFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"S3KeyFilter\");\n    if (input.FilterRules !== undefined && input.FilterRules !== null) {\n        var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"FilterRule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlS3Location = function (input, context) {\n    var bodyNode = new __XmlNode(\"S3Location\");\n    if (input.BucketName !== undefined && input.BucketName !== null) {\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.BucketName)).withName(\"BucketName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"LocationPrefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Encryption !== undefined && input.Encryption !== null) {\n        var node = serializeAws_restXmlEncryption(input.Encryption, context).withName(\"Encryption\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CannedACL !== undefined && input.CannedACL !== null) {\n        var node = new __XmlNode(\"ObjectCannedACL\").addChildNode(new __XmlText(input.CannedACL)).withName(\"CannedACL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlList !== undefined && input.AccessControlList !== null) {\n        var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);\n        var containerNode_4 = new __XmlNode(\"AccessControlList\");\n        nodes.map(function (node) {\n            containerNode_4.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_4);\n    }\n    if (input.Tagging !== undefined && input.Tagging !== null) {\n        var node = serializeAws_restXmlTagging(input.Tagging, context).withName(\"Tagging\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.UserMetadata !== undefined && input.UserMetadata !== null) {\n        var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);\n        var containerNode_5 = new __XmlNode(\"UserMetadata\");\n        nodes.map(function (node) {\n            containerNode_5.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_5);\n    }\n    if (input.StorageClass !== undefined && input.StorageClass !== null) {\n        var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlScanRange = function (input, context) {\n    var bodyNode = new __XmlNode(\"ScanRange\");\n    if (input.Start !== undefined && input.Start !== null) {\n        var node = new __XmlNode(\"Start\").addChildNode(new __XmlText(String(input.Start))).withName(\"Start\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.End !== undefined && input.End !== null) {\n        var node = new __XmlNode(\"End\").addChildNode(new __XmlText(String(input.End))).withName(\"End\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSelectParameters = function (input, context) {\n    var bodyNode = new __XmlNode(\"SelectParameters\");\n    if (input.InputSerialization !== undefined && input.InputSerialization !== null) {\n        var node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExpressionType !== undefined && input.ExpressionType !== null) {\n        var node = new __XmlNode(\"ExpressionType\")\n            .addChildNode(new __XmlText(input.ExpressionType))\n            .withName(\"ExpressionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Expression !== undefined && input.Expression !== null) {\n        var node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OutputSerialization !== undefined && input.OutputSerialization !== null) {\n        var node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionByDefault = function (input, context) {\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\n    if (input.SSEAlgorithm !== undefined && input.SSEAlgorithm !== null) {\n        var node = new __XmlNode(\"ServerSideEncryption\")\n            .addChildNode(new __XmlText(input.SSEAlgorithm))\n            .withName(\"SSEAlgorithm\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSMasterKeyID !== undefined && input.KMSMasterKeyID !== null) {\n        var node = new __XmlNode(\"SSEKMSKeyId\")\n            .addChildNode(new __XmlText(input.KMSMasterKeyID))\n            .withName(\"KMSMasterKeyID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\n    if (input.Rules !== undefined && input.Rules !== null) {\n        var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\n    if (input.ApplyServerSideEncryptionByDefault !== undefined && input.ApplyServerSideEncryptionByDefault !== null) {\n        var node = serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BucketKeyEnabled !== undefined && input.BucketKeyEnabled !== null) {\n        var node = new __XmlNode(\"BucketKeyEnabled\")\n            .addChildNode(new __XmlText(String(input.BucketKeyEnabled)))\n            .withName(\"BucketKeyEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlSourceSelectionCriteria = function (input, context) {\n    var bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\n    if (input.SseKmsEncryptedObjects !== undefined && input.SseKmsEncryptedObjects !== null) {\n        var node = serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplicaModifications !== undefined && input.ReplicaModifications !== null) {\n        var node = serializeAws_restXmlReplicaModifications(input.ReplicaModifications, context).withName(\"ReplicaModifications\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSSEKMS = function (input, context) {\n    var bodyNode = new __XmlNode(\"SSE-KMS\");\n    if (input.KeyId !== undefined && input.KeyId !== null) {\n        var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KeyId)).withName(\"KeyId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSseKmsEncryptedObjects = function (input, context) {\n    var bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"SseKmsEncryptedObjectsStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSSES3 = function (input, context) {\n    var bodyNode = new __XmlNode(\"SSE-S3\");\n    return bodyNode;\n};\nvar serializeAws_restXmlStorageClassAnalysis = function (input, context) {\n    var bodyNode = new __XmlNode(\"StorageClassAnalysis\");\n    if (input.DataExport !== undefined && input.DataExport !== null) {\n        var node = serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlStorageClassAnalysisDataExport = function (input, context) {\n    var bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\n    if (input.OutputSchemaVersion !== undefined && input.OutputSchemaVersion !== null) {\n        var node = new __XmlNode(\"StorageClassAnalysisSchemaVersion\")\n            .addChildNode(new __XmlText(input.OutputSchemaVersion))\n            .withName(\"OutputSchemaVersion\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Destination !== undefined && input.Destination !== null) {\n        var node = serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTag = function (input, context) {\n    var bodyNode = new __XmlNode(\"Tag\");\n    if (input.Key !== undefined && input.Key !== null) {\n        var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        var node = new __XmlNode(\"Value\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTagging = function (input, context) {\n    var bodyNode = new __XmlNode(\"Tagging\");\n    if (input.TagSet !== undefined && input.TagSet !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.TagSet, context);\n        var containerNode_6 = new __XmlNode(\"TagSet\");\n        nodes.map(function (node) {\n            containerNode_6.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_6);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTagSet = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTag(entry, context);\n        return node.withName(\"Tag\");\n    });\n};\nvar serializeAws_restXmlTargetGrant = function (input, context) {\n    var bodyNode = new __XmlNode(\"TargetGrant\");\n    if (input.Grantee !== undefined && input.Grantee !== null) {\n        var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n        node.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Permission !== undefined && input.Permission !== null) {\n        var node = new __XmlNode(\"BucketLogsPermission\")\n            .addChildNode(new __XmlText(input.Permission))\n            .withName(\"Permission\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTargetGrants = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTargetGrant(entry, context);\n        return node.withName(\"Grant\");\n    });\n};\nvar serializeAws_restXmlTiering = function (input, context) {\n    var bodyNode = new __XmlNode(\"Tiering\");\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"IntelligentTieringDays\")\n            .addChildNode(new __XmlText(String(input.Days)))\n            .withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessTier !== undefined && input.AccessTier !== null) {\n        var node = new __XmlNode(\"IntelligentTieringAccessTier\")\n            .addChildNode(new __XmlText(input.AccessTier))\n            .withName(\"AccessTier\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTieringList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTiering(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlTopicConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"TopicConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TopicArn !== undefined && input.TopicArn !== null) {\n        var node = new __XmlNode(\"TopicArn\").addChildNode(new __XmlText(input.TopicArn)).withName(\"Topic\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events !== undefined && input.Events !== null) {\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTopicConfigurationList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTopicConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlTransition = function (input, context) {\n    var bodyNode = new __XmlNode(\"Transition\");\n    if (input.Date !== undefined && input.Date !== null) {\n        var node = new __XmlNode(\"Date\")\n            .addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\"))\n            .withName(\"Date\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass !== undefined && input.StorageClass !== null) {\n        var node = new __XmlNode(\"TransitionStorageClass\")\n            .addChildNode(new __XmlText(input.StorageClass))\n            .withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTransitionList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTransition(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlUserMetadata = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlMetadataEntry(entry, context);\n        return node.withName(\"MetadataEntry\");\n    });\n};\nvar serializeAws_restXmlVersioningConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"VersioningConfiguration\");\n    if (input.MFADelete !== undefined && input.MFADelete !== null) {\n        var node = new __XmlNode(\"MFADelete\").addChildNode(new __XmlText(input.MFADelete)).withName(\"MfaDelete\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"BucketVersioningStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlWebsiteConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"WebsiteConfiguration\");\n    if (input.ErrorDocument !== undefined && input.ErrorDocument !== null) {\n        var node = serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IndexDocument !== undefined && input.IndexDocument !== null) {\n        var node = serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName(\"IndexDocument\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RedirectAllRequestsTo !== undefined && input.RedirectAllRequestsTo !== null) {\n        var node = serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RoutingRules !== undefined && input.RoutingRules !== null) {\n        var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);\n        var containerNode_7 = new __XmlNode(\"RoutingRules\");\n        nodes.map(function (node) {\n            containerNode_7.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_7);\n    }\n    return bodyNode;\n};\nvar deserializeAws_restXmlAbortIncompleteMultipartUpload = function (output, context) {\n    var contents = {\n        DaysAfterInitiation: undefined,\n    };\n    if (output[\"DaysAfterInitiation\"] !== undefined) {\n        contents.DaysAfterInitiation = __strictParseInt32(output[\"DaysAfterInitiation\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAccessControlTranslation = function (output, context) {\n    var contents = {\n        Owner: undefined,\n    };\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = __expectString(output[\"Owner\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAllowedHeaders = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restXmlAllowedMethods = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restXmlAllowedOrigins = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restXmlAnalyticsAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        Filter: undefined,\n        StorageClassAnalysis: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlAnalyticsFilter(__expectUnion(output[\"Filter\"]), context);\n    }\n    if (output[\"StorageClassAnalysis\"] !== undefined) {\n        contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlAnalyticsConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlAnalyticsExportDestination = function (output, context) {\n    var contents = {\n        S3BucketDestination: undefined,\n    };\n    if (output[\"S3BucketDestination\"] !== undefined) {\n        contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsFilter = function (output, context) {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: __expectString(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: deserializeAws_restXmlAnalyticsAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlAnalyticsS3BucketDestination = function (output, context) {\n    var contents = {\n        Format: undefined,\n        BucketAccountId: undefined,\n        Bucket: undefined,\n        Prefix: undefined,\n    };\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = __expectString(output[\"Format\"]);\n    }\n    if (output[\"BucketAccountId\"] !== undefined) {\n        contents.BucketAccountId = __expectString(output[\"BucketAccountId\"]);\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(output[\"Bucket\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlBucket = function (output, context) {\n    var contents = {\n        Name: undefined,\n        CreationDate: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"CreationDate\"] !== undefined) {\n        contents.CreationDate = __expectNonNull(__parseRfc3339DateTime(output[\"CreationDate\"]));\n    }\n    return contents;\n};\nvar deserializeAws_restXmlBuckets = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlBucket(entry, context);\n    });\n};\nvar deserializeAws_restXmlCommonPrefix = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCommonPrefixList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlCommonPrefix(entry, context);\n    });\n};\nvar deserializeAws_restXmlCondition = function (output, context) {\n    var contents = {\n        HttpErrorCodeReturnedEquals: undefined,\n        KeyPrefixEquals: undefined,\n    };\n    if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n        contents.HttpErrorCodeReturnedEquals = __expectString(output[\"HttpErrorCodeReturnedEquals\"]);\n    }\n    if (output[\"KeyPrefixEquals\"] !== undefined) {\n        contents.KeyPrefixEquals = __expectString(output[\"KeyPrefixEquals\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlContinuationEvent = function (output, context) {\n    var contents = {};\n    return contents;\n};\nvar deserializeAws_restXmlCopyObjectResult = function (output, context) {\n    var contents = {\n        ETag: undefined,\n        LastModified: undefined,\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCopyPartResult = function (output, context) {\n    var contents = {\n        ETag: undefined,\n        LastModified: undefined,\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCORSRule = function (output, context) {\n    var contents = {\n        ID: undefined,\n        AllowedHeaders: undefined,\n        AllowedMethods: undefined,\n        AllowedOrigins: undefined,\n        ExposeHeaders: undefined,\n        MaxAgeSeconds: undefined,\n    };\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output.AllowedHeader === \"\") {\n        contents.AllowedHeaders = [];\n    }\n    if (output[\"AllowedHeader\"] !== undefined) {\n        contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders(__getArrayIfSingleItem(output[\"AllowedHeader\"]), context);\n    }\n    if (output.AllowedMethod === \"\") {\n        contents.AllowedMethods = [];\n    }\n    if (output[\"AllowedMethod\"] !== undefined) {\n        contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(__getArrayIfSingleItem(output[\"AllowedMethod\"]), context);\n    }\n    if (output.AllowedOrigin === \"\") {\n        contents.AllowedOrigins = [];\n    }\n    if (output[\"AllowedOrigin\"] !== undefined) {\n        contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins(__getArrayIfSingleItem(output[\"AllowedOrigin\"]), context);\n    }\n    if (output.ExposeHeader === \"\") {\n        contents.ExposeHeaders = [];\n    }\n    if (output[\"ExposeHeader\"] !== undefined) {\n        contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders(__getArrayIfSingleItem(output[\"ExposeHeader\"]), context);\n    }\n    if (output[\"MaxAgeSeconds\"] !== undefined) {\n        contents.MaxAgeSeconds = __strictParseInt32(output[\"MaxAgeSeconds\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCORSRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlCORSRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlDefaultRetention = function (output, context) {\n    var contents = {\n        Mode: undefined,\n        Days: undefined,\n        Years: undefined,\n    };\n    if (output[\"Mode\"] !== undefined) {\n        contents.Mode = __expectString(output[\"Mode\"]);\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = __strictParseInt32(output[\"Days\"]);\n    }\n    if (output[\"Years\"] !== undefined) {\n        contents.Years = __strictParseInt32(output[\"Years\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeletedObject = function (output, context) {\n    var contents = {\n        Key: undefined,\n        VersionId: undefined,\n        DeleteMarker: undefined,\n        DeleteMarkerVersionId: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = __expectString(output[\"VersionId\"]);\n    }\n    if (output[\"DeleteMarker\"] !== undefined) {\n        contents.DeleteMarker = __parseBoolean(output[\"DeleteMarker\"]);\n    }\n    if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n        contents.DeleteMarkerVersionId = __expectString(output[\"DeleteMarkerVersionId\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeletedObjects = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlDeletedObject(entry, context);\n    });\n};\nvar deserializeAws_restXmlDeleteMarkerEntry = function (output, context) {\n    var contents = {\n        Owner: undefined,\n        Key: undefined,\n        VersionId: undefined,\n        IsLatest: undefined,\n        LastModified: undefined,\n    };\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = __expectString(output[\"VersionId\"]);\n    }\n    if (output[\"IsLatest\"] !== undefined) {\n        contents.IsLatest = __parseBoolean(output[\"IsLatest\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeleteMarkerReplication = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeleteMarkers = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlDeleteMarkerEntry(entry, context);\n    });\n};\nvar deserializeAws_restXmlDestination = function (output, context) {\n    var contents = {\n        Bucket: undefined,\n        Account: undefined,\n        StorageClass: undefined,\n        AccessControlTranslation: undefined,\n        EncryptionConfiguration: undefined,\n        ReplicationTime: undefined,\n        Metrics: undefined,\n    };\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(output[\"Bucket\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = __expectString(output[\"Account\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"AccessControlTranslation\"] !== undefined) {\n        contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output[\"AccessControlTranslation\"], context);\n    }\n    if (output[\"EncryptionConfiguration\"] !== undefined) {\n        contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\n    }\n    if (output[\"ReplicationTime\"] !== undefined) {\n        contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output[\"ReplicationTime\"], context);\n    }\n    if (output[\"Metrics\"] !== undefined) {\n        contents.Metrics = deserializeAws_restXmlMetrics(output[\"Metrics\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlEncryptionConfiguration = function (output, context) {\n    var contents = {\n        ReplicaKmsKeyID: undefined,\n    };\n    if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n        contents.ReplicaKmsKeyID = __expectString(output[\"ReplicaKmsKeyID\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlEndEvent = function (output, context) {\n    var contents = {};\n    return contents;\n};\nvar deserializeAws_restXml_Error = function (output, context) {\n    var contents = {\n        Key: undefined,\n        VersionId: undefined,\n        Code: undefined,\n        Message: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = __expectString(output[\"VersionId\"]);\n    }\n    if (output[\"Code\"] !== undefined) {\n        contents.Code = __expectString(output[\"Code\"]);\n    }\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = __expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlErrorDocument = function (output, context) {\n    var contents = {\n        Key: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlErrors = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXml_Error(entry, context);\n    });\n};\nvar deserializeAws_restXmlEventBridgeConfiguration = function (output, context) {\n    var contents = {};\n    return contents;\n};\nvar deserializeAws_restXmlEventList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restXmlExistingObjectReplication = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlExposeHeaders = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restXmlFilterRule = function (output, context) {\n    var contents = {\n        Name: undefined,\n        Value: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = __expectString(output[\"Value\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlFilterRuleList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlFilterRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlGrant = function (output, context) {\n    var contents = {\n        Grantee: undefined,\n        Permission: undefined,\n    };\n    if (output[\"Grantee\"] !== undefined) {\n        contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n    }\n    if (output[\"Permission\"] !== undefined) {\n        contents.Permission = __expectString(output[\"Permission\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlGrantee = function (output, context) {\n    var contents = {\n        DisplayName: undefined,\n        EmailAddress: undefined,\n        ID: undefined,\n        URI: undefined,\n        Type: undefined,\n    };\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = __expectString(output[\"DisplayName\"]);\n    }\n    if (output[\"EmailAddress\"] !== undefined) {\n        contents.EmailAddress = __expectString(output[\"EmailAddress\"]);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output[\"URI\"] !== undefined) {\n        contents.URI = __expectString(output[\"URI\"]);\n    }\n    if (output[\"xsi:type\"] !== undefined) {\n        contents.Type = __expectString(output[\"xsi:type\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlGrants = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlGrant(entry, context);\n    });\n};\nvar deserializeAws_restXmlIndexDocument = function (output, context) {\n    var contents = {\n        Suffix: undefined,\n    };\n    if (output[\"Suffix\"] !== undefined) {\n        contents.Suffix = __expectString(output[\"Suffix\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInitiator = function (output, context) {\n    var contents = {\n        ID: undefined,\n        DisplayName: undefined,\n    };\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = __expectString(output[\"DisplayName\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlIntelligentTieringAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlIntelligentTieringConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        Filter: undefined,\n        Status: undefined,\n        Tierings: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlIntelligentTieringFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output.Tiering === \"\") {\n        contents.Tierings = [];\n    }\n    if (output[\"Tiering\"] !== undefined) {\n        contents.Tierings = deserializeAws_restXmlTieringList(__getArrayIfSingleItem(output[\"Tiering\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlIntelligentTieringConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlIntelligentTieringConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlIntelligentTieringFilter = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tag: undefined,\n        And: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n    }\n    if (output[\"And\"] !== undefined) {\n        contents.And = deserializeAws_restXmlIntelligentTieringAndOperator(output[\"And\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryConfiguration = function (output, context) {\n    var contents = {\n        Destination: undefined,\n        IsEnabled: undefined,\n        Filter: undefined,\n        Id: undefined,\n        IncludedObjectVersions: undefined,\n        OptionalFields: undefined,\n        Schedule: undefined,\n    };\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = deserializeAws_restXmlInventoryDestination(output[\"Destination\"], context);\n    }\n    if (output[\"IsEnabled\"] !== undefined) {\n        contents.IsEnabled = __parseBoolean(output[\"IsEnabled\"]);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlInventoryFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"IncludedObjectVersions\"] !== undefined) {\n        contents.IncludedObjectVersions = __expectString(output[\"IncludedObjectVersions\"]);\n    }\n    if (output.OptionalFields === \"\") {\n        contents.OptionalFields = [];\n    }\n    if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\n        contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields(__getArrayIfSingleItem(output[\"OptionalFields\"][\"Field\"]), context);\n    }\n    if (output[\"Schedule\"] !== undefined) {\n        contents.Schedule = deserializeAws_restXmlInventorySchedule(output[\"Schedule\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlInventoryConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlInventoryDestination = function (output, context) {\n    var contents = {\n        S3BucketDestination: undefined,\n    };\n    if (output[\"S3BucketDestination\"] !== undefined) {\n        contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryEncryption = function (output, context) {\n    var contents = {\n        SSES3: undefined,\n        SSEKMS: undefined,\n    };\n    if (output[\"SSE-S3\"] !== undefined) {\n        contents.SSES3 = deserializeAws_restXmlSSES3(output[\"SSE-S3\"], context);\n    }\n    if (output[\"SSE-KMS\"] !== undefined) {\n        contents.SSEKMS = deserializeAws_restXmlSSEKMS(output[\"SSE-KMS\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryFilter = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryOptionalFields = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restXmlInventoryS3BucketDestination = function (output, context) {\n    var contents = {\n        AccountId: undefined,\n        Bucket: undefined,\n        Format: undefined,\n        Prefix: undefined,\n        Encryption: undefined,\n    };\n    if (output[\"AccountId\"] !== undefined) {\n        contents.AccountId = __expectString(output[\"AccountId\"]);\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(output[\"Bucket\"]);\n    }\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = __expectString(output[\"Format\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output[\"Encryption\"] !== undefined) {\n        contents.Encryption = deserializeAws_restXmlInventoryEncryption(output[\"Encryption\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventorySchedule = function (output, context) {\n    var contents = {\n        Frequency: undefined,\n    };\n    if (output[\"Frequency\"] !== undefined) {\n        contents.Frequency = __expectString(output[\"Frequency\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLambdaFunctionConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        LambdaFunctionArn: undefined,\n        Events: undefined,\n        Filter: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"CloudFunction\"] !== undefined) {\n        contents.LambdaFunctionArn = __expectString(output[\"CloudFunction\"]);\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    if (output[\"Event\"] !== undefined) {\n        contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLambdaFunctionConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlLifecycleExpiration = function (output, context) {\n    var contents = {\n        Date: undefined,\n        Days: undefined,\n        ExpiredObjectDeleteMarker: undefined,\n    };\n    if (output[\"Date\"] !== undefined) {\n        contents.Date = __expectNonNull(__parseRfc3339DateTime(output[\"Date\"]));\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = __strictParseInt32(output[\"Days\"]);\n    }\n    if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n        contents.ExpiredObjectDeleteMarker = __parseBoolean(output[\"ExpiredObjectDeleteMarker\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleRule = function (output, context) {\n    var contents = {\n        Expiration: undefined,\n        ID: undefined,\n        Prefix: undefined,\n        Filter: undefined,\n        Status: undefined,\n        Transitions: undefined,\n        NoncurrentVersionTransitions: undefined,\n        NoncurrentVersionExpiration: undefined,\n        AbortIncompleteMultipartUpload: undefined,\n    };\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output[\"Expiration\"], context);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(__expectUnion(output[\"Filter\"]), context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output.Transition === \"\") {\n        contents.Transitions = [];\n    }\n    if (output[\"Transition\"] !== undefined) {\n        contents.Transitions = deserializeAws_restXmlTransitionList(__getArrayIfSingleItem(output[\"Transition\"]), context);\n    }\n    if (output.NoncurrentVersionTransition === \"\") {\n        contents.NoncurrentVersionTransitions = [];\n    }\n    if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n        contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList(__getArrayIfSingleItem(output[\"NoncurrentVersionTransition\"]), context);\n    }\n    if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n        contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\n    }\n    if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n        contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleRuleAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n        ObjectSizeGreaterThan: undefined,\n        ObjectSizeLessThan: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    if (output[\"ObjectSizeGreaterThan\"] !== undefined) {\n        contents.ObjectSizeGreaterThan = __strictParseLong(output[\"ObjectSizeGreaterThan\"]);\n    }\n    if (output[\"ObjectSizeLessThan\"] !== undefined) {\n        contents.ObjectSizeLessThan = __strictParseLong(output[\"ObjectSizeLessThan\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleRuleFilter = function (output, context) {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: __expectString(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"ObjectSizeGreaterThan\"] !== undefined) {\n        return {\n            ObjectSizeGreaterThan: __strictParseLong(output[\"ObjectSizeGreaterThan\"]),\n        };\n    }\n    if (output[\"ObjectSizeLessThan\"] !== undefined) {\n        return {\n            ObjectSizeLessThan: __strictParseLong(output[\"ObjectSizeLessThan\"]),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: deserializeAws_restXmlLifecycleRuleAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlLifecycleRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlLifecycleRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlLoggingEnabled = function (output, context) {\n    var contents = {\n        TargetBucket: undefined,\n        TargetGrants: undefined,\n        TargetPrefix: undefined,\n    };\n    if (output[\"TargetBucket\"] !== undefined) {\n        contents.TargetBucket = __expectString(output[\"TargetBucket\"]);\n    }\n    if (output.TargetGrants === \"\") {\n        contents.TargetGrants = [];\n    }\n    if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n        contents.TargetGrants = deserializeAws_restXmlTargetGrants(__getArrayIfSingleItem(output[\"TargetGrants\"][\"Grant\"]), context);\n    }\n    if (output[\"TargetPrefix\"] !== undefined) {\n        contents.TargetPrefix = __expectString(output[\"TargetPrefix\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetrics = function (output, context) {\n    var contents = {\n        Status: undefined,\n        EventThreshold: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output[\"EventThreshold\"] !== undefined) {\n        contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output[\"EventThreshold\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetricsAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n        AccessPointArn: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    if (output[\"AccessPointArn\"] !== undefined) {\n        contents.AccessPointArn = __expectString(output[\"AccessPointArn\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetricsConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        Filter: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlMetricsFilter(__expectUnion(output[\"Filter\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetricsConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlMetricsConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlMetricsFilter = function (output, context) {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: __expectString(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"AccessPointArn\"] !== undefined) {\n        return {\n            AccessPointArn: __expectString(output[\"AccessPointArn\"]),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: deserializeAws_restXmlMetricsAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlMultipartUpload = function (output, context) {\n    var contents = {\n        UploadId: undefined,\n        Key: undefined,\n        Initiated: undefined,\n        StorageClass: undefined,\n        Owner: undefined,\n        Initiator: undefined,\n    };\n    if (output[\"UploadId\"] !== undefined) {\n        contents.UploadId = __expectString(output[\"UploadId\"]);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"Initiated\"] !== undefined) {\n        contents.Initiated = __expectNonNull(__parseRfc3339DateTime(output[\"Initiated\"]));\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    if (output[\"Initiator\"] !== undefined) {\n        contents.Initiator = deserializeAws_restXmlInitiator(output[\"Initiator\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMultipartUploadList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlMultipartUpload(entry, context);\n    });\n};\nvar deserializeAws_restXmlNoncurrentVersionExpiration = function (output, context) {\n    var contents = {\n        NoncurrentDays: undefined,\n        NewerNoncurrentVersions: undefined,\n    };\n    if (output[\"NoncurrentDays\"] !== undefined) {\n        contents.NoncurrentDays = __strictParseInt32(output[\"NoncurrentDays\"]);\n    }\n    if (output[\"NewerNoncurrentVersions\"] !== undefined) {\n        contents.NewerNoncurrentVersions = __strictParseInt32(output[\"NewerNoncurrentVersions\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlNoncurrentVersionTransition = function (output, context) {\n    var contents = {\n        NoncurrentDays: undefined,\n        StorageClass: undefined,\n        NewerNoncurrentVersions: undefined,\n    };\n    if (output[\"NoncurrentDays\"] !== undefined) {\n        contents.NoncurrentDays = __strictParseInt32(output[\"NoncurrentDays\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"NewerNoncurrentVersions\"] !== undefined) {\n        contents.NewerNoncurrentVersions = __strictParseInt32(output[\"NewerNoncurrentVersions\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlNoncurrentVersionTransitionList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlNoncurrentVersionTransition(entry, context);\n    });\n};\nvar deserializeAws_restXmlNotificationConfigurationFilter = function (output, context) {\n    var contents = {\n        Key: undefined,\n    };\n    if (output[\"S3Key\"] !== undefined) {\n        contents.Key = deserializeAws_restXmlS3KeyFilter(output[\"S3Key\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXml_Object = function (output, context) {\n    var contents = {\n        Key: undefined,\n        LastModified: undefined,\n        ETag: undefined,\n        Size: undefined,\n        StorageClass: undefined,\n        Owner: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n    }\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = __strictParseLong(output[\"Size\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXml_Object(entry, context);\n    });\n};\nvar deserializeAws_restXmlObjectLockConfiguration = function (output, context) {\n    var contents = {\n        ObjectLockEnabled: undefined,\n        Rule: undefined,\n    };\n    if (output[\"ObjectLockEnabled\"] !== undefined) {\n        contents.ObjectLockEnabled = __expectString(output[\"ObjectLockEnabled\"]);\n    }\n    if (output[\"Rule\"] !== undefined) {\n        contents.Rule = deserializeAws_restXmlObjectLockRule(output[\"Rule\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectLockLegalHold = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectLockRetention = function (output, context) {\n    var contents = {\n        Mode: undefined,\n        RetainUntilDate: undefined,\n    };\n    if (output[\"Mode\"] !== undefined) {\n        contents.Mode = __expectString(output[\"Mode\"]);\n    }\n    if (output[\"RetainUntilDate\"] !== undefined) {\n        contents.RetainUntilDate = __expectNonNull(__parseRfc3339DateTime(output[\"RetainUntilDate\"]));\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectLockRule = function (output, context) {\n    var contents = {\n        DefaultRetention: undefined,\n    };\n    if (output[\"DefaultRetention\"] !== undefined) {\n        contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output[\"DefaultRetention\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectVersion = function (output, context) {\n    var contents = {\n        ETag: undefined,\n        Size: undefined,\n        StorageClass: undefined,\n        Key: undefined,\n        VersionId: undefined,\n        IsLatest: undefined,\n        LastModified: undefined,\n        Owner: undefined,\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = __strictParseLong(output[\"Size\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = __expectString(output[\"VersionId\"]);\n    }\n    if (output[\"IsLatest\"] !== undefined) {\n        contents.IsLatest = __parseBoolean(output[\"IsLatest\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectVersionList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlObjectVersion(entry, context);\n    });\n};\nvar deserializeAws_restXmlOwner = function (output, context) {\n    var contents = {\n        DisplayName: undefined,\n        ID: undefined,\n    };\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = __expectString(output[\"DisplayName\"]);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlOwnershipControls = function (output, context) {\n    var contents = {\n        Rules: undefined,\n    };\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    if (output[\"Rule\"] !== undefined) {\n        contents.Rules = deserializeAws_restXmlOwnershipControlsRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlOwnershipControlsRule = function (output, context) {\n    var contents = {\n        ObjectOwnership: undefined,\n    };\n    if (output[\"ObjectOwnership\"] !== undefined) {\n        contents.ObjectOwnership = __expectString(output[\"ObjectOwnership\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlOwnershipControlsRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlOwnershipControlsRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlPart = function (output, context) {\n    var contents = {\n        PartNumber: undefined,\n        LastModified: undefined,\n        ETag: undefined,\n        Size: undefined,\n    };\n    if (output[\"PartNumber\"] !== undefined) {\n        contents.PartNumber = __strictParseInt32(output[\"PartNumber\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n    }\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = __strictParseLong(output[\"Size\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlParts = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlPart(entry, context);\n    });\n};\nvar deserializeAws_restXmlPolicyStatus = function (output, context) {\n    var contents = {\n        IsPublic: undefined,\n    };\n    if (output[\"IsPublic\"] !== undefined) {\n        contents.IsPublic = __parseBoolean(output[\"IsPublic\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlProgress = function (output, context) {\n    var contents = {\n        BytesScanned: undefined,\n        BytesProcessed: undefined,\n        BytesReturned: undefined,\n    };\n    if (output[\"BytesScanned\"] !== undefined) {\n        contents.BytesScanned = __strictParseLong(output[\"BytesScanned\"]);\n    }\n    if (output[\"BytesProcessed\"] !== undefined) {\n        contents.BytesProcessed = __strictParseLong(output[\"BytesProcessed\"]);\n    }\n    if (output[\"BytesReturned\"] !== undefined) {\n        contents.BytesReturned = __strictParseLong(output[\"BytesReturned\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlProgressEvent = function (output, context) {\n    var contents = {\n        Details: undefined,\n    };\n    if (output[\"Details\"] !== undefined) {\n        contents.Details = deserializeAws_restXmlProgress(output[\"Details\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlPublicAccessBlockConfiguration = function (output, context) {\n    var contents = {\n        BlockPublicAcls: undefined,\n        IgnorePublicAcls: undefined,\n        BlockPublicPolicy: undefined,\n        RestrictPublicBuckets: undefined,\n    };\n    if (output[\"BlockPublicAcls\"] !== undefined) {\n        contents.BlockPublicAcls = __parseBoolean(output[\"BlockPublicAcls\"]);\n    }\n    if (output[\"IgnorePublicAcls\"] !== undefined) {\n        contents.IgnorePublicAcls = __parseBoolean(output[\"IgnorePublicAcls\"]);\n    }\n    if (output[\"BlockPublicPolicy\"] !== undefined) {\n        contents.BlockPublicPolicy = __parseBoolean(output[\"BlockPublicPolicy\"]);\n    }\n    if (output[\"RestrictPublicBuckets\"] !== undefined) {\n        contents.RestrictPublicBuckets = __parseBoolean(output[\"RestrictPublicBuckets\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlQueueConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        QueueArn: undefined,\n        Events: undefined,\n        Filter: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"Queue\"] !== undefined) {\n        contents.QueueArn = __expectString(output[\"Queue\"]);\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    if (output[\"Event\"] !== undefined) {\n        contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlQueueConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlQueueConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlRecordsEvent = function (output, context) {\n    var contents = {\n        Payload: undefined,\n    };\n    if (output[\"Payload\"] !== undefined) {\n        contents.Payload = context.base64Decoder(output[\"Payload\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRedirect = function (output, context) {\n    var contents = {\n        HostName: undefined,\n        HttpRedirectCode: undefined,\n        Protocol: undefined,\n        ReplaceKeyPrefixWith: undefined,\n        ReplaceKeyWith: undefined,\n    };\n    if (output[\"HostName\"] !== undefined) {\n        contents.HostName = __expectString(output[\"HostName\"]);\n    }\n    if (output[\"HttpRedirectCode\"] !== undefined) {\n        contents.HttpRedirectCode = __expectString(output[\"HttpRedirectCode\"]);\n    }\n    if (output[\"Protocol\"] !== undefined) {\n        contents.Protocol = __expectString(output[\"Protocol\"]);\n    }\n    if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n        contents.ReplaceKeyPrefixWith = __expectString(output[\"ReplaceKeyPrefixWith\"]);\n    }\n    if (output[\"ReplaceKeyWith\"] !== undefined) {\n        contents.ReplaceKeyWith = __expectString(output[\"ReplaceKeyWith\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRedirectAllRequestsTo = function (output, context) {\n    var contents = {\n        HostName: undefined,\n        Protocol: undefined,\n    };\n    if (output[\"HostName\"] !== undefined) {\n        contents.HostName = __expectString(output[\"HostName\"]);\n    }\n    if (output[\"Protocol\"] !== undefined) {\n        contents.Protocol = __expectString(output[\"Protocol\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicaModifications = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationConfiguration = function (output, context) {\n    var contents = {\n        Role: undefined,\n        Rules: undefined,\n    };\n    if (output[\"Role\"] !== undefined) {\n        contents.Role = __expectString(output[\"Role\"]);\n    }\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    if (output[\"Rule\"] !== undefined) {\n        contents.Rules = deserializeAws_restXmlReplicationRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationRule = function (output, context) {\n    var contents = {\n        ID: undefined,\n        Priority: undefined,\n        Prefix: undefined,\n        Filter: undefined,\n        Status: undefined,\n        SourceSelectionCriteria: undefined,\n        ExistingObjectReplication: undefined,\n        Destination: undefined,\n        DeleteMarkerReplication: undefined,\n    };\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output[\"Priority\"] !== undefined) {\n        contents.Priority = __strictParseInt32(output[\"Priority\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlReplicationRuleFilter(__expectUnion(output[\"Filter\"]), context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output[\"SourceSelectionCriteria\"] !== undefined) {\n        contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\n    }\n    if (output[\"ExistingObjectReplication\"] !== undefined) {\n        contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\n    }\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = deserializeAws_restXmlDestination(output[\"Destination\"], context);\n    }\n    if (output[\"DeleteMarkerReplication\"] !== undefined) {\n        contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationRuleAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationRuleFilter = function (output, context) {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: __expectString(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: deserializeAws_restXmlReplicationRuleAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlReplicationRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlReplicationRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlReplicationTime = function (output, context) {\n    var contents = {\n        Status: undefined,\n        Time: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output[\"Time\"] !== undefined) {\n        contents.Time = deserializeAws_restXmlReplicationTimeValue(output[\"Time\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationTimeValue = function (output, context) {\n    var contents = {\n        Minutes: undefined,\n    };\n    if (output[\"Minutes\"] !== undefined) {\n        contents.Minutes = __strictParseInt32(output[\"Minutes\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRoutingRule = function (output, context) {\n    var contents = {\n        Condition: undefined,\n        Redirect: undefined,\n    };\n    if (output[\"Condition\"] !== undefined) {\n        contents.Condition = deserializeAws_restXmlCondition(output[\"Condition\"], context);\n    }\n    if (output[\"Redirect\"] !== undefined) {\n        contents.Redirect = deserializeAws_restXmlRedirect(output[\"Redirect\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRoutingRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlRoutingRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlS3KeyFilter = function (output, context) {\n    var contents = {\n        FilterRules: undefined,\n    };\n    if (output.FilterRule === \"\") {\n        contents.FilterRules = [];\n    }\n    if (output[\"FilterRule\"] !== undefined) {\n        contents.FilterRules = deserializeAws_restXmlFilterRuleList(__getArrayIfSingleItem(output[\"FilterRule\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSelectObjectContentEventStream = function (output, context) {\n    if (output[\"Records\"] !== undefined) {\n        return {\n            Records: deserializeAws_restXmlRecordsEvent(output[\"Records\"], context),\n        };\n    }\n    if (output[\"Stats\"] !== undefined) {\n        return {\n            Stats: deserializeAws_restXmlStatsEvent(output[\"Stats\"], context),\n        };\n    }\n    if (output[\"Progress\"] !== undefined) {\n        return {\n            Progress: deserializeAws_restXmlProgressEvent(output[\"Progress\"], context),\n        };\n    }\n    if (output[\"Cont\"] !== undefined) {\n        return {\n            Cont: deserializeAws_restXmlContinuationEvent(output[\"Cont\"], context),\n        };\n    }\n    if (output[\"End\"] !== undefined) {\n        return {\n            End: deserializeAws_restXmlEndEvent(output[\"End\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlServerSideEncryptionByDefault = function (output, context) {\n    var contents = {\n        SSEAlgorithm: undefined,\n        KMSMasterKeyID: undefined,\n    };\n    if (output[\"SSEAlgorithm\"] !== undefined) {\n        contents.SSEAlgorithm = __expectString(output[\"SSEAlgorithm\"]);\n    }\n    if (output[\"KMSMasterKeyID\"] !== undefined) {\n        contents.KMSMasterKeyID = __expectString(output[\"KMSMasterKeyID\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionConfiguration = function (output, context) {\n    var contents = {\n        Rules: undefined,\n    };\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    if (output[\"Rule\"] !== undefined) {\n        contents.Rules = deserializeAws_restXmlServerSideEncryptionRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionRule = function (output, context) {\n    var contents = {\n        ApplyServerSideEncryptionByDefault: undefined,\n        BucketKeyEnabled: undefined,\n    };\n    if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n        contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\n    }\n    if (output[\"BucketKeyEnabled\"] !== undefined) {\n        contents.BucketKeyEnabled = __parseBoolean(output[\"BucketKeyEnabled\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlServerSideEncryptionRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlSourceSelectionCriteria = function (output, context) {\n    var contents = {\n        SseKmsEncryptedObjects: undefined,\n        ReplicaModifications: undefined,\n    };\n    if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n        contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\n    }\n    if (output[\"ReplicaModifications\"] !== undefined) {\n        contents.ReplicaModifications = deserializeAws_restXmlReplicaModifications(output[\"ReplicaModifications\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSSEKMS = function (output, context) {\n    var contents = {\n        KeyId: undefined,\n    };\n    if (output[\"KeyId\"] !== undefined) {\n        contents.KeyId = __expectString(output[\"KeyId\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSseKmsEncryptedObjects = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSSES3 = function (output, context) {\n    var contents = {};\n    return contents;\n};\nvar deserializeAws_restXmlStats = function (output, context) {\n    var contents = {\n        BytesScanned: undefined,\n        BytesProcessed: undefined,\n        BytesReturned: undefined,\n    };\n    if (output[\"BytesScanned\"] !== undefined) {\n        contents.BytesScanned = __strictParseLong(output[\"BytesScanned\"]);\n    }\n    if (output[\"BytesProcessed\"] !== undefined) {\n        contents.BytesProcessed = __strictParseLong(output[\"BytesProcessed\"]);\n    }\n    if (output[\"BytesReturned\"] !== undefined) {\n        contents.BytesReturned = __strictParseLong(output[\"BytesReturned\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlStatsEvent = function (output, context) {\n    var contents = {\n        Details: undefined,\n    };\n    if (output[\"Details\"] !== undefined) {\n        contents.Details = deserializeAws_restXmlStats(output[\"Details\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlStorageClassAnalysis = function (output, context) {\n    var contents = {\n        DataExport: undefined,\n    };\n    if (output[\"DataExport\"] !== undefined) {\n        contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output[\"DataExport\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlStorageClassAnalysisDataExport = function (output, context) {\n    var contents = {\n        OutputSchemaVersion: undefined,\n        Destination: undefined,\n    };\n    if (output[\"OutputSchemaVersion\"] !== undefined) {\n        contents.OutputSchemaVersion = __expectString(output[\"OutputSchemaVersion\"]);\n    }\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output[\"Destination\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTag = function (output, context) {\n    var contents = {\n        Key: undefined,\n        Value: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = __expectString(output[\"Value\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTagSet = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTag(entry, context);\n    });\n};\nvar deserializeAws_restXmlTargetGrant = function (output, context) {\n    var contents = {\n        Grantee: undefined,\n        Permission: undefined,\n    };\n    if (output[\"Grantee\"] !== undefined) {\n        contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n    }\n    if (output[\"Permission\"] !== undefined) {\n        contents.Permission = __expectString(output[\"Permission\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTargetGrants = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTargetGrant(entry, context);\n    });\n};\nvar deserializeAws_restXmlTiering = function (output, context) {\n    var contents = {\n        Days: undefined,\n        AccessTier: undefined,\n    };\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = __strictParseInt32(output[\"Days\"]);\n    }\n    if (output[\"AccessTier\"] !== undefined) {\n        contents.AccessTier = __expectString(output[\"AccessTier\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTieringList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTiering(entry, context);\n    });\n};\nvar deserializeAws_restXmlTopicConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        TopicArn: undefined,\n        Events: undefined,\n        Filter: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"Topic\"] !== undefined) {\n        contents.TopicArn = __expectString(output[\"Topic\"]);\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    if (output[\"Event\"] !== undefined) {\n        contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTopicConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTopicConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlTransition = function (output, context) {\n    var contents = {\n        Date: undefined,\n        Days: undefined,\n        StorageClass: undefined,\n    };\n    if (output[\"Date\"] !== undefined) {\n        contents.Date = __expectNonNull(__parseRfc3339DateTime(output[\"Date\"]));\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = __strictParseInt32(output[\"Days\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTransitionList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTransition(entry, context);\n    });\n};\nvar deserializeMetadata = function (output) {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\nvar collectBody = function (streamBody, context) {\n    if (streamBody === void 0) { streamBody = new Uint8Array(); }\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nvar collectBodyString = function (streamBody, context) {\n    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });\n};\nvar isSerializableHeaderValue = function (value) {\n    return value !== undefined &&\n        value !== null &&\n        value !== \"\" &&\n        (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n        (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\nvar parseBody = function (streamBody, context) {\n    return collectBodyString(streamBody, context).then(function (encoded) {\n        if (encoded.length) {\n            var parsedObj = xmlParse(encoded, {\n                attributeNamePrefix: \"\",\n                ignoreAttributes: false,\n                parseNodeValue: false,\n                trimValues: false,\n                tagValueProcessor: function (val) { return (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : decodeHTML(val)); },\n            });\n            var textNodeName = \"#text\";\n            var key = Object.keys(parsedObj)[0];\n            var parsedObjToReturn = parsedObj[key];\n            if (parsedObjToReturn[textNodeName]) {\n                parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n                delete parsedObjToReturn[textNodeName];\n            }\n            return __getValueFromTextNode(parsedObjToReturn);\n        }\n        return {};\n    });\n};\nvar loadRestXmlErrorCode = function (output, data) {\n    if (data.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n    return \"\";\n};\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAW,IAAIC,aAAxB,EAAuCC,eAAe,IAAIC,iBAA1D,QAAoF,wBAApF;AACA,SAASC,eAAe,IAAIC,iBAA5B,EAA+CC,aAAa,IAAIC,eAAhE,EAAiFC,YAAY,IAAIC,cAAjG,EAAiHC,YAAY,IAAIC,cAAjI,EAAiJC,WAAW,IAAIC,aAAhK,EAA+KC,0BAA0B,IAAIC,4BAA7M,EAA2OC,oBAAoB,IAAIC,sBAAnQ,EAA2RC,oBAAoB,IAAIC,sBAAnT,EAA2UC,YAAY,IAAIC,cAA3V,EAA2WC,oBAAoB,IAAIC,sBAAnY,EAA2ZC,oBAAoB,IAAIC,sBAAnb,EAA2cC,gBAAgB,IAAIC,kBAA/d,EAAmfC,eAAe,IAAIC,iBAAtgB,QAAgiB,wBAAhiB;AACA,SAASC,OAAO,IAAIC,SAApB,EAA+BC,OAAO,IAAIC,SAA1C,QAA2D,sBAA3D;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,KAAK,IAAIC,QAAlB,QAAkC,iBAAlC;AACA,SAASC,eAAT,EAA0BC,mBAA1B,EAA+CC,aAA/C,EAA8DC,qBAA9D,QAA4F,oBAA5F;AACA,OAAO,IAAIC,+CAA+C,GAAG,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAAsC6C,KAAK,CAACiC,QAAN,KAAmBT,SAAnB,IAAgC;YAAEU,QAAQ,EAAElC,KAAK,CAACiC;UAAlB,CAAtE,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI1E,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CwG,CAAhB;AA+CpF,CA/CE;AAgDP,OAAO,IAAIwB,kDAAkD,GAAG,UAAUpC,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4GyB,QAA5G;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAA1F,CAAT,EAAqJD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC3N,+BAA+BpB,KAAK,CAACoB;UADsL,CAA7M,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAAyC6C,KAAK,CAACiC,QAAN,KAAmBT,SAAnB,IAAgC;YAAEU,QAAQ,EAAElC,KAAK,CAACiC;UAAlB,CAAzE,CAAhB;;UACA,IAAIjC,KAAK,CAACsC,eAAN,KAA0Bd,SAA9B,EAAyC;YACrCZ,IAAI,GAAG2B,4CAA4C,CAACvC,KAAK,CAACsC,eAAP,EAAwBrC,OAAxB,CAAnD;UACH;;UACD,IAAID,KAAK,CAACsC,eAAN,KAA0Bd,SAA9B,EAAyC;YACrCa,QAAQ,GAAGE,4CAA4C,CAACvC,KAAK,CAACsC,eAAP,EAAwBrC,OAAxB,CAAvD;YACAoC,QAAQ,GAAGA,QAAQ,CAACG,QAAT,CAAkB,yBAAlB,CAAX;YACA5B,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,MAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA1CR;IAqDH,CAtDiB,CAAlB;EAuDH,CAzD2G,CAAhB;AAyDvF,CAzDE;AA0DP,OAAO,IAAI+B,qCAAqC,GAAG,UAAU3C,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAAC4C,GAAP,CAAzB,IAAwC;YAAE,aAAa5C,KAAK,CAAC4C;UAArB,CAA9C,CAAT,EAAsF1B,yBAAyB,CAAClB,KAAK,CAAC6C,YAAP,CAAzB,IAAiD;YAAE,iBAAiB7C,KAAK,CAAC6C;UAAzB,CAAvI,CAAT,EAA4L3B,yBAAyB,CAAClB,KAAK,CAAC8C,kBAAP,CAAzB,IAAuD;YAAE,uBAAuB9C,KAAK,CAAC8C;UAA/B,CAAnP,CAAT,EAAoT5B,yBAAyB,CAAClB,KAAK,CAAC+C,eAAP,CAAzB,IAAoD;YAAE,oBAAoB/C,KAAK,CAAC+C;UAA5B,CAAxW,CAAT,EAAma7B,yBAAyB,CAAClB,KAAK,CAACgD,eAAP,CAAzB,IAAoD;YAAE,oBAAoBhD,KAAK,CAACgD;UAA5B,CAAvd,CAAT,EAAkhB9B,yBAAyB,CAAClB,KAAK,CAACiD,WAAP,CAAzB,IAAgD;YAAE,gBAAgBjD,KAAK,CAACiD;UAAxB,CAAlkB,CAAT,EAAqnB/B,yBAAyB,CAAClB,KAAK,CAACkD,UAAP,CAAzB,IAA+C;YAAE,qBAAqBlD,KAAK,CAACkD;UAA7B,CAApqB,CAAT,EAA2tBhC,yBAAyB,CAAClB,KAAK,CAACmD,iBAAP,CAAzB,IAAsD;YAC7iC,8BAA8BnD,KAAK,CAACmD;UADygC,CAAjxB,CAAT,EAEjRjC,yBAAyB,CAAClB,KAAK,CAACoD,yBAAP,CAAzB,IAA8D;YAChE,uCAAuCzF,iBAAiB,CAACqC,KAAK,CAACoD,yBAAP,CAAjB,CAAmDV,QAAnD;UADyB,CAFmN,CAAT,EAIxQxB,yBAAyB,CAAClB,KAAK,CAACqD,qBAAP,CAAzB,IAA0D;YAC5D,mCAAmCrD,KAAK,CAACqD;UADmB,CAJ8M,CAAT,EAM/PnC,yBAAyB,CAAClB,KAAK,CAACsD,2BAAP,CAAzB,IAAgE;YAClE,yCAAyC3F,iBAAiB,CAACqC,KAAK,CAACsD,2BAAP,CAAjB,CAAqDZ,QAArD;UADyB,CAN+L,CAAT,EAQtPxB,yBAAyB,CAAClB,KAAK,CAACuD,OAAP,CAAzB,IAA4C;YAAEC,OAAO,EAAE7F,iBAAiB,CAACqC,KAAK,CAACuD,OAAP,CAAjB,CAAiCb,QAAjC;UAAX,CAR0M,CAAT,EAQpIxB,yBAAyB,CAAClB,KAAK,CAACyD,gBAAP,CAAzB,IAAqD;YAAE,4BAA4BzD,KAAK,CAACyD;UAApC,CAR+E,CAAT,EAQXvC,yBAAyB,CAAClB,KAAK,CAAC0D,SAAP,CAAzB,IAA8C;YAAE,oBAAoB1D,KAAK,CAAC0D;UAA5B,CARnC,CAAT,EAQwFxC,yBAAyB,CAAClB,KAAK,CAAC2D,YAAP,CAAzB,IAAiD;YAAE,wBAAwB3D,KAAK,CAAC2D;UAAhC,CARzI,CAAT,EAQqMzC,yBAAyB,CAAClB,KAAK,CAAC4D,aAAP,CAAzB,IAAkD;YAAE,yBAAyB5D,KAAK,CAAC4D;UAAjC,CARvP,CAAT,EAQqT1C,yBAAyB,CAAClB,KAAK,CAAC6D,iBAAP,CAAzB,IAAsD;YAAE,4BAA4B7D,KAAK,CAAC6D;UAApC,CAR3W,CAAT,EAQgb3C,yBAAyB,CAAClB,KAAK,CAAC8D,gBAAP,CAAzB,IAAqD;YAAE,2BAA2B9D,KAAK,CAAC8D;UAAnC,CARre,CAAT,EAQwiB5C,yBAAyB,CAAClB,KAAK,CAAC+D,oBAAP,CAAzB,IAAyD;YAC1xB,gCAAgC/D,KAAK,CAAC+D;UADovB,CARjmB,CAAT,EAU9K7C,yBAAyB,CAAClB,KAAK,CAACgE,YAAP,CAAzB,IAAiD;YAAE,uBAAuBhE,KAAK,CAACgE;UAA/B,CAV6H,CAAT,EAUlE9C,yBAAyB,CAAClB,KAAK,CAACiE,uBAAP,CAAzB,IAA4D;YACjK,mCAAmCjE,KAAK,CAACiE;UADwH,CAVM,CAAT,EAY5J/C,yBAAyB,CAAClB,KAAK,CAACkE,oBAAP,CAAzB,IAAyD;YAC3D,mDAAmDlE,KAAK,CAACkE;UADE,CAZmG,CAAT,EAcnJhD,yBAAyB,CAAClB,KAAK,CAACmE,cAAP,CAAzB,IAAmD;YACrD,6CAA6CnE,KAAK,CAACmE;UADE,CAdgG,CAAT,EAgB1IjD,yBAAyB,CAAClB,KAAK,CAACoE,iBAAP,CAAzB,IAAsD;YACxD,iDAAiDpE,KAAK,CAACoE;UADC,CAhBoF,CAAT,EAkBjIlD,yBAAyB,CAAClB,KAAK,CAACqE,WAAP,CAAzB,IAAgD;YAClD,+CAA+CrE,KAAK,CAACqE;UADH,CAlBiF,CAAT,EAoBxHnD,yBAAyB,CAAClB,KAAK,CAACsE,uBAAP,CAAzB,IAA4D;YAC9D,wCAAwCtE,KAAK,CAACsE;UADgB,CApB4D,CAAT,EAsB/GpD,yBAAyB,CAAClB,KAAK,CAACuE,gBAAP,CAAzB,IAAqD;YACvD,mDAAmDvE,KAAK,CAACuE,gBAAN,CAAuB7B,QAAvB;UADI,CAtB0D,CAAT,EAwBtGxB,yBAAyB,CAAClB,KAAK,CAACwE,8BAAP,CAAzB,IAAmE;YACrE,+DAA+DxE,KAAK,CAACwE;UADA,CAxBmC,CAAT,EA0B7FtD,yBAAyB,CAAClB,KAAK,CAACyE,wBAAP,CAAzB,IAA6D;YAC/D,yDAAyDzE,KAAK,CAACyE;UADA,CA1BgC,CAAT,EA4BpFvD,yBAAyB,CAAClB,KAAK,CAAC0E,2BAAP,CAAzB,IAAgE;YAClE,6DAA6D1E,KAAK,CAAC0E;UADD,CA5BoB,CAAT,EA8B3ExD,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CA9B0B,CAAT,EA8BiCD,yBAAyB,CAAClB,KAAK,CAAC2E,OAAP,CAAzB,IAA4C;YAAE,iBAAiB3E,KAAK,CAAC2E;UAAzB,CA9B7E,CAAT,EA8B6HzD,yBAAyB,CAAClB,KAAK,CAAC4E,cAAP,CAAzB,IAAmD;YAAE,0BAA0B5E,KAAK,CAAC4E;UAAlC,CA9BhL,CAAT,EA8BgP1D,yBAAyB,CAAClB,KAAK,CAAC6E,yBAAP,CAAzB,IAA8D;YAChW,uCAAuC,CAAC7E,KAAK,CAAC6E,yBAAN,CAAgCC,WAAhC,GAA8CjD,KAA9C,CAAoD,GAApD,EAAyD,CAAzD,IAA8D,GAA/D,EAAoEa,QAApE;UADyT,CA9B9S,CAAT,EAgCvCxB,yBAAyB,CAAClB,KAAK,CAAC+E,yBAAP,CAAzB,IAA8D;YAChE,gCAAgC/E,KAAK,CAAC+E;UAD0B,CAhCvB,CAAT,EAkC9B7D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAlC1B,CAAT,EAoCrBF,yBAAyB,CAAClB,KAAK,CAACgF,yBAAP,CAAzB,IAA8D;YAChE,sCAAsChF,KAAK,CAACgF;UADoB,CApCzC,CAAT,EAsCZhF,KAAK,CAACiF,QAAN,KAAmBzD,SAAnB,IACF0D,MAAM,CAACC,IAAP,CAAYnF,KAAK,CAACiF,QAAlB,EAA4BG,MAA5B,CAAmC,UAAUC,GAAV,EAAeC,MAAf,EAAuB;YACtD,IAAIpF,EAAJ;;YACA,OAAQ/C,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKkI,GAAL,CAAT,GAAqBnF,EAAE,GAAG,EAAL,EAASA,EAAE,CAAC,gBAAgBoF,MAAM,CAACC,WAAP,EAAjB,CAAF,GAA2CvF,KAAK,CAACiF,QAAN,CAAeK,MAAf,CAApD,EAA4EpF,EAAjG,EAAhB;UACH,CAHD,EAGG,EAHH,CAvCc,CAAlB;UA2CAO,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ,QAAQ;UADJ,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIpD,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA1ER;IAqFH,CAtFiB,CAAlB;EAuFH,CAzF8F,CAAhB;AAyF1E,CAzFE;AA0FP,OAAO,IAAI4E,uCAAuC,GAAG,UAAUxF,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFE,IAAnF,EAAyFyB,QAAzF;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4C,GAAP,CAAzB,IAAwC;YAAE,aAAa5C,KAAK,CAAC4C;UAArB,CAAjF,CAAT,EAAyH1B,yBAAyB,CAAClB,KAAK,CAACyD,gBAAP,CAAzB,IAAqD;YAAE,4BAA4BzD,KAAK,CAACyD;UAApC,CAA9K,CAAT,EAAkPvC,yBAAyB,CAAClB,KAAK,CAAC0D,SAAP,CAAzB,IAA8C;YAAE,oBAAoB1D,KAAK,CAAC0D;UAA5B,CAAhS,CAAT,EAAqVxC,yBAAyB,CAAClB,KAAK,CAAC2D,YAAP,CAAzB,IAAiD;YAAE,wBAAwB3D,KAAK,CAAC2D;UAAhC,CAAtY,CAAT,EAAkczC,yBAAyB,CAAClB,KAAK,CAACyF,UAAP,CAAzB,IAA+C;YAAE,qBAAqBzF,KAAK,CAACyF;UAA7B,CAAjf,CAAT,EAAwiBvE,yBAAyB,CAAClB,KAAK,CAAC4D,aAAP,CAAzB,IAAkD;YAAE,yBAAyB5D,KAAK,CAAC4D;UAAjC,CAA1lB,CAAT,EAAwpB1C,yBAAyB,CAAClB,KAAK,CAAC0F,0BAAP,CAAzB,IAA+D;YAC9uB,oCAAoC1F,KAAK,CAAC0F,0BAAN,CAAiChD,QAAjC;UAD0sB,CAAvtB,CAAT,EAEZxB,yBAAyB,CAAClB,KAAK,CAAC2F,eAAP,CAAzB,IAAoD;YAAE,0BAA0B3F,KAAK,CAAC2F;UAAlC,CAFxC,CAAlB;UAGAlF,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4F,yBAAN,KAAoCpE,SAAxC,EAAmD;YAC/CZ,IAAI,GAAGiF,6CAA6C,CAAC7F,KAAK,CAAC4F,yBAAP,EAAkC3F,OAAlC,CAApD;UACH;;UACD,IAAID,KAAK,CAAC4F,yBAAN,KAAoCpE,SAAxC,EAAmD;YAC/Ca,QAAQ,GAAGwD,6CAA6C,CAAC7F,KAAK,CAAC4F,yBAAP,EAAkC3F,OAAlC,CAAxD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBG,IAAI,EAAEA;UAPe,CAAlB,CAAJ,CAAP;MA3BR;IAqCH,CAtCiB,CAAlB;EAuCH,CAzCgG,CAAhB;AAyC5E,CAzCE;AA0CP,OAAO,IAAIkF,gDAAgD,GAAG,UAAU9F,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAAC4C,GAAP,CAAzB,IAAwC;YAAE,aAAa5C,KAAK,CAAC4C;UAArB,CAA9C,CAAT,EAAsF1B,yBAAyB,CAAClB,KAAK,CAAC6C,YAAP,CAAzB,IAAiD;YAAE,iBAAiB7C,KAAK,CAAC6C;UAAzB,CAAvI,CAAT,EAA4L3B,yBAAyB,CAAClB,KAAK,CAAC8C,kBAAP,CAAzB,IAAuD;YAAE,uBAAuB9C,KAAK,CAAC8C;UAA/B,CAAnP,CAAT,EAAoT5B,yBAAyB,CAAClB,KAAK,CAAC+C,eAAP,CAAzB,IAAoD;YAAE,oBAAoB/C,KAAK,CAAC+C;UAA5B,CAAxW,CAAT,EAAma7B,yBAAyB,CAAClB,KAAK,CAACgD,eAAP,CAAzB,IAAoD;YAAE,oBAAoBhD,KAAK,CAACgD;UAA5B,CAAvd,CAAT,EAAkhB9B,yBAAyB,CAAClB,KAAK,CAACiD,WAAP,CAAzB,IAAgD;YAAE,gBAAgBjD,KAAK,CAACiD;UAAxB,CAAlkB,CAAT,EAAqnB/B,yBAAyB,CAAClB,KAAK,CAACuD,OAAP,CAAzB,IAA4C;YAAEC,OAAO,EAAE7F,iBAAiB,CAACqC,KAAK,CAACuD,OAAP,CAAjB,CAAiCb,QAAjC;UAAX,CAAjqB,CAAT,EAAuuBxB,yBAAyB,CAAClB,KAAK,CAACyD,gBAAP,CAAzB,IAAqD;YAAE,4BAA4BzD,KAAK,CAACyD;UAApC,CAA5xB,CAAT,EAAg2BvC,yBAAyB,CAAClB,KAAK,CAAC0D,SAAP,CAAzB,IAA8C;YAAE,oBAAoB1D,KAAK,CAAC0D;UAA5B,CAA94B,CAAT,EAAm8BxC,yBAAyB,CAAClB,KAAK,CAAC2D,YAAP,CAAzB,IAAiD;YAAE,wBAAwB3D,KAAK,CAAC2D;UAAhC,CAAp/B,CAAT,EAAgjCzC,yBAAyB,CAAClB,KAAK,CAAC4D,aAAP,CAAzB,IAAkD;YAAE,yBAAyB5D,KAAK,CAAC4D;UAAjC,CAAlmC,CAAT,EAAgqC1C,yBAAyB,CAAClB,KAAK,CAAC+D,oBAAP,CAAzB,IAAyD;YAC92C,gCAAgC/D,KAAK,CAAC+D;UADw0C,CAAztC,CAAT,EAE1I7C,yBAAyB,CAAClB,KAAK,CAACgE,YAAP,CAAzB,IAAiD;YAAE,uBAAuBhE,KAAK,CAACgE;UAA/B,CAFyF,CAAT,EAE9B9C,yBAAyB,CAAClB,KAAK,CAACiE,uBAAP,CAAzB,IAA4D;YACjK,mCAAmCjE,KAAK,CAACiE;UADwH,CAF9B,CAAT,EAIxH/C,yBAAyB,CAAClB,KAAK,CAACkE,oBAAP,CAAzB,IAAyD;YAC3D,mDAAmDlE,KAAK,CAACkE;UADE,CAJ+D,CAAT,EAM/GhD,yBAAyB,CAAClB,KAAK,CAACmE,cAAP,CAAzB,IAAmD;YACrD,6CAA6CnE,KAAK,CAACmE;UADE,CAN4D,CAAT,EAQtGjD,yBAAyB,CAAClB,KAAK,CAACoE,iBAAP,CAAzB,IAAsD;YACxD,iDAAiDpE,KAAK,CAACoE;UADC,CARgD,CAAT,EAU7FlD,yBAAyB,CAAClB,KAAK,CAACqE,WAAP,CAAzB,IAAgD;YAClD,+CAA+CrE,KAAK,CAACqE;UADH,CAV6C,CAAT,EAYpFnD,yBAAyB,CAAClB,KAAK,CAACsE,uBAAP,CAAzB,IAA4D;YAC9D,wCAAwCtE,KAAK,CAACsE;UADgB,CAZwB,CAAT,EAc3EpD,yBAAyB,CAAClB,KAAK,CAACuE,gBAAP,CAAzB,IAAqD;YACvD,mDAAmDvE,KAAK,CAACuE,gBAAN,CAAuB7B,QAAvB;UADI,CAdsB,CAAT,EAgBlExB,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAhBiB,CAAT,EAgB0CD,yBAAyB,CAAClB,KAAK,CAAC2E,OAAP,CAAzB,IAA4C;YAAE,iBAAiB3E,KAAK,CAAC2E;UAAzB,CAhBtF,CAAT,EAgBsIzD,yBAAyB,CAAClB,KAAK,CAAC4E,cAAP,CAAzB,IAAmD;YAAE,0BAA0B5E,KAAK,CAAC4E;UAAlC,CAhBzL,CAAT,EAgByP1D,yBAAyB,CAAClB,KAAK,CAAC6E,yBAAP,CAAzB,IAA8D;YAChW,uCAAuC,CAAC7E,KAAK,CAAC6E,yBAAN,CAAgCC,WAAhC,GAA8CjD,KAA9C,CAAoD,GAApD,EAAyD,CAAzD,IAA8D,GAA/D,EAAoEa,QAApE;UADyT,CAhBvT,CAAT,EAkB9BxB,yBAAyB,CAAClB,KAAK,CAAC+E,yBAAP,CAAzB,IAA8D;YAChE,gCAAgC/E,KAAK,CAAC+E;UAD0B,CAlBhC,CAAT,EAoBrB7D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CApBnC,CAAT,EAsBZpB,KAAK,CAACiF,QAAN,KAAmBzD,SAAnB,IACF0D,MAAM,CAACC,IAAP,CAAYnF,KAAK,CAACiF,QAAlB,EAA4BG,MAA5B,CAAmC,UAAUC,GAAV,EAAeC,MAAf,EAAuB;YACtD,IAAIpF,EAAJ;;YACA,OAAQ/C,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKkI,GAAL,CAAT,GAAqBnF,EAAE,GAAG,EAAL,EAASA,EAAE,CAAC,gBAAgBoF,MAAM,CAACC,WAAP,EAAjB,CAAF,GAA2CvF,KAAK,CAACiF,QAAN,CAAeK,MAAf,CAApD,EAA4EpF,EAAjG,EAAhB;UACH,CAHD,EAGG,EAHH,CAvBc,CAAlB;UA2BAO,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJoF,OAAO,EAAE,EADL;YAEJ,QAAQ;UAFJ,CAAR;UAIA,OAAO,CAAC,CAAD,EAAI,IAAIxI,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,MAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA3DR;IAsEH,CAvEiB,CAAlB;EAwEH,CA1EyG,CAAhB;AA0ErF,CA1EE;AA2EP,OAAO,IAAIoF,uCAAuC,GAAG,UAAUhG,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFE,IAAnF;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInE,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBG,IAAI,EAAEA;UAPe,CAAlB,CAAJ,CAAP;MAlBR;IA4BH,CA7BiB,CAAlB;EA8BH,CAhCgG,CAAhB;AAgC5E,CAhCE;AAiCP,OAAO,IAAIqF,6DAA6D,GAAG,UAAUjG,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE+I,SAAS,EAAE;UAAb,CAAD,EAAqBlG,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0B;YAAE4E,EAAE,EAAEpG,KAAK,CAACmG;UAAZ,CAA/C,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI5I,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCsH,CAAhB;AAkClG,CAlCE;AAmCP,OAAO,IAAIyF,2CAA2C,GAAG,UAAUrG,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ2F,IAAI,EAAE;UADF,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI/I,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCoG,CAAhB;AAoChF,CApCE;AAqCP,OAAO,IAAI2F,iDAAiD,GAAG,UAAUvG,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ6F,UAAU,EAAE;UADR,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIjJ,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApC0G,CAAhB;AAoCtF,CApCE;AAqCP,OAAO,IAAI6F,sEAAsE,GAAG,UAAUzG,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjK,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAG,EAAV;UACAC,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE,uBAAuB;UAAzB,CAAD,EAAiC6C,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0B;YAAE4E,EAAE,EAAEpG,KAAK,CAACmG;UAAZ,CAA3D,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI5I,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAjBR;IA4BH,CA7BiB,CAAlB;EA8BH,CAhC+H,CAAhB;AAgC3G,CAhCE;AAiCP,OAAO,IAAI8F,6DAA6D,GAAG,UAAU1G,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAEwJ,SAAS,EAAE;UAAb,CAAD,EAAqB3G,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0B;YAAE4E,EAAE,EAAEpG,KAAK,CAACmG;UAAZ,CAA/C,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI5I,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCsH,CAAhB;AAkClG,CAlCE;AAmCP,OAAO,IAAIgG,gDAAgD,GAAG,UAAU5G,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJkG,SAAS,EAAE;UADP,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAItJ,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCyG,CAAhB;AAoCrF,CApCE;AAqCP,OAAO,IAAIkG,2DAA2D,GAAG,UAAU9G,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE4J,OAAO,EAAE;UAAX,CAAD,EAAmB/G,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0B;YAAE4E,EAAE,EAAEpG,KAAK,CAACmG;UAAZ,CAA7C,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI5I,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCoH,CAAhB;AAkChG,CAlCE;AAmCP,OAAO,IAAIoG,wDAAwD,GAAG,UAAUhH,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJsG,iBAAiB,EAAE;UADf,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI1J,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCiH,CAAhB;AAoC7F,CApCE;AAqCP,OAAO,IAAIsG,6CAA6C,GAAG,UAAUlH,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJwG,MAAM,EAAE;UADJ,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI5J,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCsG,CAAhB;AAoClF,CApCE;AAqCP,OAAO,IAAIwG,kDAAkD,GAAG,UAAUpH,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ0G,WAAW,EAAE;UADT,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI9J,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApC2G,CAAhB;AAoCvF,CApCE;AAqCP,OAAO,IAAI0G,8CAA8C,GAAG,UAAUtH,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ4G,OAAO,EAAE;UADL,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIhK,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCuG,CAAhB;AAoCnF,CApCE;AAqCP,OAAO,IAAI4G,8CAA8C,GAAG,UAAUxH,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ8G,OAAO,EAAE;UADL,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIlK,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCuG,CAAhB;AAoCnF,CApCE;AAqCP,OAAO,IAAI8G,uCAAuC,GAAG,UAAU1H,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAAC2H,GAAP,CAAzB,IAAwC;YAAE,aAAa3H,KAAK,CAAC2H;UAArB,CAA9C,CAAT,EAAsFzG,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvI,CAAT,EAAkMD,yBAAyB,CAAClB,KAAK,CAAC4H,yBAAP,CAAzB,IAA8D;YACvR,qCAAqC5H,KAAK,CAAC4H,yBAAN,CAAgClF,QAAhC;UADkP,CAAhQ,CAAT,EAEZxB,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAA8B6C,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiC;YAAEsG,SAAS,EAAE9H,KAAK,CAAC6H;UAAnB,CAA/D,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAItK,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAlCR;IA6CH,CA9CiB,CAAlB;EA+CH,CAjDgG,CAAhB;AAiD5E,CAjDE;AAkDP,OAAO,IAAImH,wCAAwC,GAAG,UAAU/H,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC2H,GAAP,CAAzB,IAAwC;YAAE,aAAa3H,KAAK,CAAC2H;UAArB,CAAjF,CAAT,EAAyHzG,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAA1K,CAAT,EAAqOD,yBAAyB,CAAClB,KAAK,CAAC4H,yBAAP,CAAzB,IAA8D;YAC1T,qCAAqC5H,KAAK,CAAC4H,yBAAN,CAAgClF,QAAhC;UADqR,CAAnS,CAAT,EAEZxB,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJqH,MAAM,EAAE,EADJ;YAEJ,QAAQ;UAFJ,CAAR;;UAIA,IAAIhI,KAAK,CAACiI,MAAN,KAAiBzG,SAArB,EAAgC;YAC5BZ,IAAI,GAAGsH,0BAA0B,CAAClI,KAAK,CAACiI,MAAP,EAAehI,OAAf,CAAjC;UACH;;UACD,IAAID,KAAK,CAACiI,MAAN,KAAiBzG,SAArB,EAAgC;YAC5Ba,QAAQ,GAAG6F,0BAA0B,CAAClI,KAAK,CAACiI,MAAP,EAAehI,OAAf,CAArC;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,MAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAjCR;IA4CH,CA7CiB,CAAlB;EA8CH,CAhDiG,CAAhB;AAgD7E,CAhDE;AAiDP,OAAO,IAAIuH,8CAA8C,GAAG,UAAUnI,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAEoK,OAAO,EAAE;UAAX,CAAD,EAAmBvH,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiC;YAAEsG,SAAS,EAAE9H,KAAK,CAAC6H;UAAnB,CAApD,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAItK,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CuG,CAAhB;AA+CnF,CA/CE;AAgDP,OAAO,IAAIwH,kDAAkD,GAAG,UAAUpI,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ0H,iBAAiB,EAAE;UADf,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI9K,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,QAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApC2G,CAAhB;AAoCvF,CApCE;AAqCP,OAAO,IAAI0H,2DAA2D,GAAG,UAAUtI,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ4H,UAAU,EAAE;UADR,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIhL,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCoH,CAAhB;AAoChG,CApCE;AAqCP,OAAO,IAAI4H,uCAAuC,GAAG,UAAUxI,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ8H,GAAG,EAAE;UADD,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIlL,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCgG,CAAhB;AAoC5E,CApCE;AAqCP,OAAO,IAAI8H,0DAA0D,GAAG,UAAU1I,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE+I,SAAS,EAAE,EAAb;YAAiB,QAAQ;UAAzB,CAAD,EAAgElG,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0B;YAAE4E,EAAE,EAAEpG,KAAK,CAACmG;UAAZ,CAA1F,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI5I,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCmH,CAAhB;AAkC/F,CAlCE;AAmCP,OAAO,IAAI+H,wCAAwC,GAAG,UAAU3I,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ2F,IAAI,EAAE;UADF,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI/I,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCiG,CAAhB;AAoC7E,CApCE;AAqCP,OAAO,IAAIgI,8CAA8C,GAAG,UAAU5I,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ6F,UAAU,EAAE;UADR,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIjJ,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCuG,CAAhB;AAoCnF,CApCE;AAqCP,OAAO,IAAIiI,mEAAmE,GAAG,UAAU7I,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9J,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAG,EAAV;UACAC,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE,uBAAuB,EAAzB;YAA6B,QAAQ;UAArC,CAAD,EAAqF6C,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0B;YAAE4E,EAAE,EAAEpG,KAAK,CAACmG;UAAZ,CAA/G,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI5I,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAjBR;IA4BH,CA7BiB,CAAlB;EA8BH,CAhC4H,CAAhB;AAgCxG,CAhCE;AAiCP,OAAO,IAAIkI,0DAA0D,GAAG,UAAU9I,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAEwJ,SAAS,EAAE,EAAb;YAAiB,QAAQ;UAAzB,CAAD,EAAgE3G,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0B;YAAE4E,EAAE,EAAEpG,KAAK,CAACmG;UAAZ,CAA1F,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI5I,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCmH,CAAhB;AAkC/F,CAlCE;AAmCP,OAAO,IAAImI,0DAA0D,GAAG,UAAU/I,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJkG,SAAS,EAAE;UADP,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAItJ,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCmH,CAAhB;AAoC/F,CApCE;AAqCP,OAAO,IAAIoI,4CAA4C,GAAG,UAAUhJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJsI,QAAQ,EAAE;UADN,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI1L,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCqG,CAAhB;AAoCjF,CApCE;AAqCP,OAAO,IAAIsI,2CAA2C,GAAG,UAAUlJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJwI,OAAO,EAAE;UADL,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI5L,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCoG,CAAhB;AAoChF,CApCE;AAqCP,OAAO,IAAIwI,wDAAwD,GAAG,UAAUpJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE4J,OAAO,EAAE,EAAX;YAAe,QAAQ;UAAvB,CAAD,EAA4D/G,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0B;YAAE4E,EAAE,EAAEpG,KAAK,CAACmG;UAAZ,CAAtF,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI5I,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCiH,CAAhB;AAkC7F,CAlCE;AAmCP,OAAO,IAAIyI,6DAA6D,GAAG,UAAUrJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ2I,YAAY,EAAE;UADV,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI/L,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCsH,CAAhB;AAoClG,CApCE;AAqCP,OAAO,IAAI2I,qDAAqD,GAAG,UAAUvJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJsG,iBAAiB,EAAE;UADf,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI1J,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApC8G,CAAhB;AAoC1F,CApCE;AAqCP,OAAO,IAAI4I,0CAA0C,GAAG,UAAUxJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJwG,MAAM,EAAE;UADJ,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI5J,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCmG,CAAhB;AAoC/E,CApCE;AAqCP,OAAO,IAAI6I,gDAAgD,GAAG,UAAUzJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ+I,YAAY,EAAE;UADV,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAInM,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCyG,CAAhB;AAoCrF,CApCE;AAqCP,OAAO,IAAI+I,+CAA+C,GAAG,UAAU3J,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ0G,WAAW,EAAE;UADT,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI9J,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCwG,CAAhB;AAoCpF,CApCE;AAqCP,OAAO,IAAIgJ,kDAAkD,GAAG,UAAU5J,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJkJ,cAAc,EAAE;UADZ,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAItM,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApC2G,CAAhB;AAoCvF,CApCE;AAqCP,OAAO,IAAIkJ,2CAA2C,GAAG,UAAU9J,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ4G,OAAO,EAAE;UADL,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIhK,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCoG,CAAhB;AAoChF,CApCE;AAqCP,OAAO,IAAImJ,8CAA8C,GAAG,UAAU/J,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJqJ,UAAU,EAAE;UADR,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIzM,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCuG,CAAhB;AAoCnF,CApCE;AAqCP,OAAO,IAAIqJ,2CAA2C,GAAG,UAAUjK,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ8G,OAAO,EAAE;UADL,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIlK,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCoG,CAAhB;AAoChF,CApCE;AAqCP,OAAO,IAAIsJ,oCAAoC,GAAG,UAAUlK,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/H,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACmK,OAAP,CAAzB,IAA4C;YAAE,YAAYnK,KAAK,CAACmK;UAApB,CAAlD,CAAT,EAA6FjJ,yBAAyB,CAAClB,KAAK,CAACoK,eAAP,CAAzB,IAAoD;YACvO,qBAAqBzM,iBAAiB,CAACqC,KAAK,CAACoK,eAAP,CAAjB,CAAyC1H,QAAzC;UADkN,CAAjJ,CAAT,EAE3ExB,yBAAyB,CAAClB,KAAK,CAACqK,WAAP,CAAzB,IAAgD;YAAE,iBAAiBrK,KAAK,CAACqK;UAAzB,CAF2B,CAAT,EAEyBnJ,yBAAyB,CAAClB,KAAK,CAACsK,iBAAP,CAAzB,IAAsD;YACnJ,uBAAuB3M,iBAAiB,CAACqC,KAAK,CAACsK,iBAAP,CAAjB,CAA2C5H,QAA3C;UAD4H,CAF/E,CAAT,EAIzDxB,yBAAyB,CAAClB,KAAK,CAACuK,KAAP,CAAzB,IAA0C;YAAEC,KAAK,EAAExK,KAAK,CAACuK;UAAf,CAJe,CAAT,EAIqBrJ,yBAAyB,CAAClB,KAAK,CAACkE,oBAAP,CAAzB,IAAyD;YAChI,mDAAmDlE,KAAK,CAACkE;UADuE,CAJ9E,CAAT,EAMvChD,yBAAyB,CAAClB,KAAK,CAACmE,cAAP,CAAzB,IAAmD;YACrD,6CAA6CnE,KAAK,CAACmE;UADE,CANZ,CAAT,EAQ9BjD,yBAAyB,CAAClB,KAAK,CAACoE,iBAAP,CAAzB,IAAsD;YACxD,iDAAiDpE,KAAK,CAACoE;UADC,CARxB,CAAT,EAUrBlD,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAV5B,CAAT,EAUuFD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC7J,+BAA+BpB,KAAK,CAACoB;UADwH,CAV/I,CAAlB;UAaAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAA2B6C,KAAK,CAACyK,oBAAN,KAA+BjJ,SAA/B,IAA4C;YAAE,0BAA0BxB,KAAK,CAACyK;UAAlC,CAAvE,CAAT,EAA6IzK,KAAK,CAAC0K,0BAAN,KAAqClJ,SAArC,IAAkD;YACjQ,gCAAgCxB,KAAK,CAAC0K;UAD2N,CAA/L,CAAT,EAEvD1K,KAAK,CAAC2K,uBAAN,KAAkCnJ,SAAlC,IAA+C;YAAE,6BAA6BxB,KAAK,CAAC2K;UAArC,CAFQ,CAAT,EAEoE3K,KAAK,CAAC4K,uBAAN,KAAkCpJ,SAAlC,IAA+C;YAAE,6BAA6BxB,KAAK,CAAC4K;UAArC,CAFnH,CAAT,EAE+L5K,KAAK,CAAC6K,mBAAN,KAA8BrJ,SAA9B,IAA2C;YAAE,yBAAyBxB,KAAK,CAAC6K;UAAjC,CAF1O,CAAT,EAE8S7K,KAAK,CAAC8K,eAAN,KAA0BtJ,SAA1B,IAAuC;YACnX,oBAAoB7D,iBAAiB,CAACqC,KAAK,CAAC8K,eAAP,CAAjB,CAAyCpI,QAAzC;UAD+V,CAFrV,CAAT,EAInB1C,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiC;YAAEsG,SAAS,EAAE9H,KAAK,CAAC6H;UAAnB,CAJd,CAAT,EAI0D7H,KAAK,CAAC+K,UAAN,KAAqBvJ,SAArB,IAAkC;YAAEwJ,UAAU,EAAEhL,KAAK,CAAC+K,UAAN,CAAiBrI,QAAjB;UAAd,CAJ5F,CAAhB;UAKA,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9CR;IAyDH,CA1DiB,CAAlB;EA2DH,CA7D6F,CAAhB;AA6DzE,CA7DE;AA8DP,OAAO,IAAIqK,uCAAuC,GAAG,UAAUjL,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAEsL,GAAG,EAAE;UAAP,CAAD,EAAezI,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiC;YAAEsG,SAAS,EAAE9H,KAAK,CAAC6H;UAAnB,CAAhD,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAItK,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CgG,CAAhB;AA+C5E,CA/CE;AAgDP,OAAO,IAAIsK,6CAA6C,GAAG,UAAUlL,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE,cAAc;UAAhB,CAAD,EAAwB6C,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiC;YAAEsG,SAAS,EAAE9H,KAAK,CAAC6H;UAAnB,CAAzD,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAItK,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CsG,CAAhB;AA+ClF,CA/CE;AAgDP,OAAO,IAAIuK,qDAAqD,GAAG,UAAUnL,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ,eAAe;UADX,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIpD,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApC8G,CAAhB;AAoC1F,CApCE;AAqCP,OAAO,IAAIwK,6CAA6C,GAAG,UAAUpL,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAEkO,SAAS,EAAE;UAAb,CAAD,EAAqBrL,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiC;YAAEsG,SAAS,EAAE9H,KAAK,CAAC6H;UAAnB,CAAtD,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAItK,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CsG,CAAhB;AA+ClF,CA/CE;AAgDP,OAAO,IAAI0K,2CAA2C,GAAG,UAAUtL,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACrF,+BAA+BpB,KAAK,CAACoB;UADgD,CAA9D,CAAT,EAEZF,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAFrC,CAAlB;UAGAV,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAEoK,OAAO,EAAE;UAAX,CAAD,EAAmBvH,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiC;YAAEsG,SAAS,EAAE9H,KAAK,CAAC6H;UAAnB,CAApD,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAItK,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CoG,CAAhB;AA+ChF,CA/CE;AAgDP,OAAO,IAAI2K,2CAA2C,GAAG,UAAUvL,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ6K,OAAO,EAAE;UADL,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIjO,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAlCR;IA6CH,CA9CiB,CAAlB;EA+CH,CAjDoG,CAAhB;AAiDhF,CAjDE;AAkDP,OAAO,IAAI6K,+CAA+C,GAAG,UAAUzL,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ0H,iBAAiB,EAAE;UADf,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI9K,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCwG,CAAhB;AAoCpF,CApCE;AAqCP,OAAO,IAAI8K,qCAAqC,GAAG,UAAU1L,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFE,IAAnF;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInE,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,MAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBG,IAAI,EAAEA;UAPe,CAAlB,CAAJ,CAAP;MAlBR;IA4BH,CA7BiB,CAAlB;EA8BH,CAhC8F,CAAhB;AAgC1E,CAhCE;AAiCP,OAAO,IAAI+K,qCAAqC,GAAG,UAAU3L,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACmK,OAAP,CAAzB,IAA4C;YAAE,YAAYnK,KAAK,CAACmK;UAApB,CAAlD,CAAT,EAA6FjJ,yBAAyB,CAAClB,KAAK,CAACoK,eAAP,CAAzB,IAAoD;YACvO,qBAAqBzM,iBAAiB,CAACqC,KAAK,CAACoK,eAAP,CAAjB,CAAyC1H,QAAzC;UADkN,CAAjJ,CAAT,EAE3ExB,yBAAyB,CAAClB,KAAK,CAACqK,WAAP,CAAzB,IAAgD;YAAE,iBAAiBrK,KAAK,CAACqK;UAAzB,CAF2B,CAAT,EAEyBnJ,yBAAyB,CAAClB,KAAK,CAACsK,iBAAP,CAAzB,IAAsD;YACnJ,uBAAuB3M,iBAAiB,CAACqC,KAAK,CAACsK,iBAAP,CAAjB,CAA2C5H,QAA3C;UAD4H,CAF/E,CAAT,EAIzDxB,yBAAyB,CAAClB,KAAK,CAACuK,KAAP,CAAzB,IAA0C;YAAEC,KAAK,EAAExK,KAAK,CAACuK;UAAf,CAJe,CAAT,EAIqBrJ,yBAAyB,CAAClB,KAAK,CAACkE,oBAAP,CAAzB,IAAyD;YAChI,mDAAmDlE,KAAK,CAACkE;UADuE,CAJ9E,CAAT,EAMvChD,yBAAyB,CAAClB,KAAK,CAACmE,cAAP,CAAzB,IAAmD;YACrD,6CAA6CnE,KAAK,CAACmE;UADE,CANZ,CAAT,EAQ9BjD,yBAAyB,CAAClB,KAAK,CAACoE,iBAAP,CAAzB,IAAsD;YACxD,iDAAiDpE,KAAK,CAACoE;UADC,CARxB,CAAT,EAUrBlD,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAV5B,CAAT,EAUuFD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC7J,+BAA+BpB,KAAK,CAACoB;UADwH,CAV/I,CAAlB;UAaAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM6C,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiC;YAAEsG,SAAS,EAAE9H,KAAK,CAAC6H;UAAnB,CAAvC,CAAT,EAAmF7H,KAAK,CAAC+K,UAAN,KAAqBvJ,SAArB,IAAkC;YAAEwJ,UAAU,EAAEhL,KAAK,CAAC+K,UAAN,CAAiBrI,QAAjB;UAAd,CAArH,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,MAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA1CR;IAqDH,CAtDiB,CAAlB;EAuDH,CAzD8F,CAAhB;AAyD1E,CAzDE;AA0DP,OAAO,IAAIgL,4DAA4D,GAAG,UAAU5L,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE+I,SAAS,EAAE,EAAb;YAAiB,QAAQ;UAAzB,CAAD,EAAkElG,KAAK,CAAC6L,iBAAN,KAA4BrK,SAA5B,IAAyC;YAAE,sBAAsBxB,KAAK,CAAC6L;UAA9B,CAA3G,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAItO,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCqH,CAAhB;AAkCjG,CAlCE;AAmCP,OAAO,IAAIkL,qEAAqE,GAAG,UAAU9L,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChK,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAG,EAAV;UACAC,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE,uBAAuB,EAAzB;YAA6B,QAAQ;UAArC,CAAD,EAAuF6C,KAAK,CAAC6L,iBAAN,KAA4BrK,SAA5B,IAAyC;YAAE,sBAAsBxB,KAAK,CAAC6L;UAA9B,CAAhI,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAItO,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAjBR;IA4BH,CA7BiB,CAAlB;EA8BH,CAhC8H,CAAhB;AAgC1G,CAhCE;AAiCP,OAAO,IAAImL,4DAA4D,GAAG,UAAU/L,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAEwJ,SAAS,EAAE,EAAb;YAAiB,QAAQ;UAAzB,CAAD,EAAkE3G,KAAK,CAAC6L,iBAAN,KAA4BrK,SAA5B,IAAyC;YAAE,sBAAsBxB,KAAK,CAAC6L;UAA9B,CAA3G,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAItO,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCqH,CAAhB;AAkCjG,CAlCE;AAmCP,OAAO,IAAIoL,0DAA0D,GAAG,UAAUhM,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE4J,OAAO,EAAE,EAAX;YAAe,QAAQ;UAAvB,CAAD,EAA8D/G,KAAK,CAAC6L,iBAAN,KAA4BrK,SAA5B,IAAyC;YAAE,sBAAsBxB,KAAK,CAAC6L;UAA9B,CAAvG,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAItO,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCmH,CAAhB;AAkC/F,CAlCE;AAmCP,OAAO,IAAIqL,sCAAsC,GAAG,UAAUjM,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEG,IAAvE;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAG;YACN,gBAAgB;UADV,CAAV;UAGAC,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,GAA9I;UACAK,IAAI,GAAG,EAAP;UACA,OAAO,CAAC,CAAD,EAAI,IAAIrD,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBG,IAAI,EAAEA;UAPe,CAAlB,CAAJ,CAAP;MATR;IAmBH,CApBiB,CAAlB;EAqBH,CAvB+F,CAAhB;AAuB3E,CAvBE;AAwBP,OAAO,IAAIsL,+CAA+C,GAAG,UAAUlM,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE4I,OAAO,EAAE;UAAX,CAAD,EAAmB/F,KAAK,CAACmM,SAAN,KAAoB3K,SAApB,IAAiC;YAAE4K,SAAS,EAAEpM,KAAK,CAACmM;UAAnB,CAApD,CAAT,EAAgGnM,KAAK,CAACqM,YAAN,KAAuB7K,SAAvB,IAAoC;YAAE,iBAAiBxB,KAAK,CAACqM;UAAzB,CAApI,CAAT,EAAyLrM,KAAK,CAACsM,SAAN,KAAoB9K,SAApB,IAAiC;YAAE,cAAcxB,KAAK,CAACsM;UAAtB,CAA1N,CAAT,EAAyQtM,KAAK,CAACuM,UAAN,KAAqB/K,SAArB,IAAkC;YAAE,eAAexB,KAAK,CAACuM,UAAN,CAAiB7J,QAAjB;UAAjB,CAA3S,CAAT,EAAuW1C,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8B;YAAEiL,MAAM,EAAEzM,KAAK,CAACwM;UAAhB,CAArY,CAAT,EAA2axM,KAAK,CAAC0M,cAAN,KAAyBlL,SAAzB,IAAsC;YAAE,oBAAoBxB,KAAK,CAAC0M;UAA5B,CAAjd,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAInP,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCwG,CAAhB;AAkCpF,CAlCE;AAmCP,OAAO,IAAI+L,sCAAsC,GAAG,UAAU3M,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM6C,KAAK,CAACmM,SAAN,KAAoB3K,SAApB,IAAiC;YAAE4K,SAAS,EAAEpM,KAAK,CAACmM;UAAnB,CAAvC,CAAT,EAAmFnM,KAAK,CAACqM,YAAN,KAAuB7K,SAAvB,IAAoC;YAAE,iBAAiBxB,KAAK,CAACqM;UAAzB,CAAvH,CAAT,EAA4KrM,KAAK,CAAC4M,MAAN,KAAiBpL,SAAjB,IAA8B;YAAEqL,MAAM,EAAE7M,KAAK,CAAC4M;UAAhB,CAA1M,CAAT,EAAgP5M,KAAK,CAAC8M,OAAN,KAAkBtL,SAAlB,IAA+B;YAAE,YAAYxB,KAAK,CAAC8M,OAAN,CAAcpK,QAAd;UAAd,CAA/Q,CAAT,EAAqU1C,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8B;YAAEiL,MAAM,EAAEzM,KAAK,CAACwM;UAAhB,CAAnW,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIjP,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlC+F,CAAhB;AAkC3E,CAlCE;AAmCP,OAAO,IAAImM,wCAAwC,GAAG,UAAU/M,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,aAAa;UAAf,CAAD,EAAwB6C,KAAK,CAACmM,SAAN,KAAoB3K,SAApB,IAAiC;YAAE4K,SAAS,EAAEpM,KAAK,CAACmM;UAAnB,CAAzD,CAAT,EAAqGnM,KAAK,CAACqM,YAAN,KAAuB7K,SAAvB,IAAoC;YAAE,iBAAiBxB,KAAK,CAACqM;UAAzB,CAAzI,CAAT,EAA8LrM,KAAK,CAAC8M,OAAN,KAAkBtL,SAAlB,IAA+B;YAAE,YAAYxB,KAAK,CAAC8M,OAAN,CAAcpK,QAAd;UAAd,CAA7N,CAAT,EAAmR1C,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8B;YAAEiL,MAAM,EAAEzM,KAAK,CAACwM;UAAhB,CAAjT,CAAT,EAAuVxM,KAAK,CAAC6L,iBAAN,KAA4BrK,SAA5B,IAAyC;YAAE,sBAAsBxB,KAAK,CAAC6L;UAA9B,CAAhY,CAAT,EAA+b7L,KAAK,CAACgN,UAAN,KAAqBxL,SAArB,IAAkC;YAAE,eAAexB,KAAK,CAACgN,UAAN,CAAiBtK,QAAjB;UAAjB,CAAje,CAAT,EAA6hB1C,KAAK,CAACiN,UAAN,KAAqBzL,SAArB,IAAkC;YAAE,eAAexB,KAAK,CAACiN;UAAvB,CAA/jB,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI1P,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCiG,CAAhB;AAkC7E,CAlCE;AAmCP,OAAO,IAAIsM,6CAA6C,GAAG,UAAUlN,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAEgQ,QAAQ,EAAE;UAAZ,CAAD,EAAoBnN,KAAK,CAACmM,SAAN,KAAoB3K,SAApB,IAAiC;YAAE4K,SAAS,EAAEpM,KAAK,CAACmM;UAAnB,CAArD,CAAT,EAAiGnM,KAAK,CAACqM,YAAN,KAAuB7K,SAAvB,IAAoC;YAAE,iBAAiBxB,KAAK,CAACqM;UAAzB,CAArI,CAAT,EAA0LrM,KAAK,CAACsM,SAAN,KAAoB9K,SAApB,IAAiC;YAAE,cAAcxB,KAAK,CAACsM;UAAtB,CAA3N,CAAT,EAA0QtM,KAAK,CAAC8M,OAAN,KAAkBtL,SAAlB,IAA+B;YAAE,YAAYxB,KAAK,CAAC8M,OAAN,CAAcpK,QAAd;UAAd,CAAzS,CAAT,EAA+V1C,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8B;YAAEiL,MAAM,EAAEzM,KAAK,CAACwM;UAAhB,CAA7X,CAAT,EAAmaxM,KAAK,CAACoN,eAAN,KAA0B5L,SAA1B,IAAuC;YAAE,qBAAqBxB,KAAK,CAACoN;UAA7B,CAA1c,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI7P,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCsG,CAAhB;AAkClF,CAlCE;AAmCP,OAAO,IAAIyM,oCAAoC,GAAG,UAAUrN,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/H,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAA2B6C,KAAK,CAACsN,QAAN,KAAmB9L,SAAnB,IAAgC;YAAE,aAAaxB,KAAK,CAACsN,QAAN,CAAe5K,QAAf;UAAf,CAA3D,CAAT,EAAmH1C,KAAK,CAACuN,gBAAN,KAA2B/L,SAA3B,IAAwC;YAAE,sBAAsBxB,KAAK,CAACuN;UAA9B,CAA3J,CAAT,EAAyNvN,KAAK,CAACiC,QAAN,KAAmBT,SAAnB,IAAgC;YAAEU,QAAQ,EAAElC,KAAK,CAACiC;UAAlB,CAAzP,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI1E,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/C6F,CAAhB;AA+CzE,CA/CE;AAgDP,OAAO,IAAI4M,2DAA2D,GAAG,UAAUxN,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/G,+BAA+BpB,KAAK,CAACoB;UAD0E,CAAjG,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ4H,UAAU,EAAE;UADR,CAAR;;UAGA,IAAIvI,KAAK,CAACyN,uBAAN,KAAkCjM,SAAtC,EAAiD;YAC7CZ,IAAI,GAAG8M,2CAA2C,CAAC1N,KAAK,CAACyN,uBAAP,EAAgCxN,OAAhC,CAAlD;UACH;;UACD,IAAID,KAAK,CAACyN,uBAAN,KAAkCjM,SAAtC,EAAiD;YAC7Ca,QAAQ,GAAGqL,2CAA2C,CAAC1N,KAAK,CAACyN,uBAAP,EAAgCxN,OAAhC,CAAtD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7CoH,CAAhB;AA6ChG,CA7CE;AA8CP,OAAO,IAAI+M,uCAAuC,GAAG,UAAU3N,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4C,GAAP,CAAzB,IAAwC;YAAE,aAAa5C,KAAK,CAAC4C;UAArB,CAAjF,CAAT,EAAyH1B,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAxK,CAAT,EAAyN1M,yBAAyB,CAAClB,KAAK,CAACyD,gBAAP,CAAzB,IAAqD;YAAE,4BAA4BzD,KAAK,CAACyD;UAApC,CAA9Q,CAAT,EAAkVvC,yBAAyB,CAAClB,KAAK,CAAC0D,SAAP,CAAzB,IAA8C;YAAE,oBAAoB1D,KAAK,CAAC0D;UAA5B,CAAhY,CAAT,EAAqbxC,yBAAyB,CAAClB,KAAK,CAAC2D,YAAP,CAAzB,IAAiD;YAAE,wBAAwB3D,KAAK,CAAC2D;UAAhC,CAAte,CAAT,EAAkiBzC,yBAAyB,CAAClB,KAAK,CAACyF,UAAP,CAAzB,IAA+C;YAAE,qBAAqBzF,KAAK,CAACyF;UAA7B,CAAjlB,CAAT,EAAwoBvE,yBAAyB,CAAClB,KAAK,CAAC4D,aAAP,CAAzB,IAAkD;YAAE,yBAAyB5D,KAAK,CAAC4D;UAAjC,CAA1rB,CAAT,EAAwvB1C,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC9zB,+BAA+BpB,KAAK,CAACoB;UADyxB,CAAhzB,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ8H,GAAG,EAAE;UADD,CAAR;;UAGA,IAAIzI,KAAK,CAAC6N,mBAAN,KAA8BrM,SAAlC,EAA6C;YACzCZ,IAAI,GAAGkN,uCAAuC,CAAC9N,KAAK,CAAC6N,mBAAP,EAA4B5N,OAA5B,CAA9C;UACH;;UACD,IAAID,KAAK,CAAC6N,mBAAN,KAA8BrM,SAAlC,EAA6C;YACzCa,QAAQ,GAAGyL,uCAAuC,CAAC9N,KAAK,CAAC6N,mBAAP,EAA4B5N,OAA5B,CAAlD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7CgG,CAAhB;AA6C5E,CA7CE;AA8CP,OAAO,IAAImN,0DAA0D,GAAG,UAAU/N,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/G,+BAA+BpB,KAAK,CAACoB;UAD0E,CAAjG,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE+I,SAAS,EAAE;UAAb,CAAD,EAAqBlG,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0B;YAAE4E,EAAE,EAAEpG,KAAK,CAACmG;UAAZ,CAA/C,CAAhB;;UACA,IAAInG,KAAK,CAACgO,sBAAN,KAAiCxM,SAArC,EAAgD;YAC5CZ,IAAI,GAAGqN,0CAA0C,CAACjO,KAAK,CAACgO,sBAAP,EAA+B/N,OAA/B,CAAjD;UACH;;UACD,IAAID,KAAK,CAACgO,sBAAN,KAAiCxM,SAArC,EAAgD;YAC5Ca,QAAQ,GAAG4L,0CAA0C,CAACjO,KAAK,CAACgO,sBAAP,EAA+B/N,OAA/B,CAArD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA5BR;IAuCH,CAxCiB,CAAlB;EAyCH,CA3CmH,CAAhB;AA2C/F,CA3CE;AA4CP,OAAO,IAAIsN,wCAAwC,GAAG,UAAUlO,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAxF,CAAT,EAAyI1M,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/M,+BAA+BpB,KAAK,CAACoB;UAD0K,CAAjM,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ2F,IAAI,EAAE;UADF,CAAR;;UAGA,IAAItG,KAAK,CAACmO,iBAAN,KAA4B3M,SAAhC,EAA2C;YACvCZ,IAAI,GAAGwN,qCAAqC,CAACpO,KAAK,CAACmO,iBAAP,EAA0BlO,OAA1B,CAA5C;UACH;;UACD,IAAID,KAAK,CAACmO,iBAAN,KAA4B3M,SAAhC,EAA2C;YACvCa,QAAQ,GAAG+L,qCAAqC,CAACpO,KAAK,CAACmO,iBAAP,EAA0BlO,OAA1B,CAAhD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7CiG,CAAhB;AA6C7E,CA7CE;AA8CP,OAAO,IAAIyN,8CAA8C,GAAG,UAAUrO,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAxF,CAAT,EAAyI1M,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/M,+BAA+BpB,KAAK,CAACoB;UAD0K,CAAjM,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ6F,UAAU,EAAE;UADR,CAAR;;UAGA,IAAIxG,KAAK,CAACsO,iCAAN,KAA4C9M,SAAhD,EAA2D;YACvDZ,IAAI,GAAG2N,qDAAqD,CAACvO,KAAK,CAACsO,iCAAP,EAA0CrO,OAA1C,CAA5D;UACH;;UACD,IAAID,KAAK,CAACsO,iCAAN,KAA4C9M,SAAhD,EAA2D;YACvDa,QAAQ,GAAGkM,qDAAqD,CAACvO,KAAK,CAACsO,iCAAP,EAA0CrO,OAA1C,CAAhE;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7CuG,CAAhB;AA6CnF,CA7CE;AA8CP,OAAO,IAAI4N,mEAAmE,GAAG,UAAUxO,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9J,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAG;YACN,gBAAgB;UADV,CAAV;UAGAC,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE,uBAAuB;UAAzB,CAAD,EAAiC6C,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0B;YAAE4E,EAAE,EAAEpG,KAAK,CAACmG;UAAZ,CAA3D,CAAhB;;UACA,IAAInG,KAAK,CAACyO,+BAAN,KAA0CjN,SAA9C,EAAyD;YACrDZ,IAAI,GAAG8N,mDAAmD,CAAC1O,KAAK,CAACyO,+BAAP,EAAwCxO,OAAxC,CAA1D;UACH;;UACD,IAAID,KAAK,CAACyO,+BAAN,KAA0CjN,SAA9C,EAAyD;YACrDa,QAAQ,GAAGqM,mDAAmD,CAAC1O,KAAK,CAACyO,+BAAP,EAAwCxO,OAAxC,CAA9D;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA5BR;IAuCH,CAxCiB,CAAlB;EAyCH,CA3C4H,CAAhB;AA2CxG,CA3CE;AA4CP,OAAO,IAAI+N,0DAA0D,GAAG,UAAU3O,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/G,+BAA+BpB,KAAK,CAACoB;UAD0E,CAAjG,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAEwJ,SAAS,EAAE;UAAb,CAAD,EAAqB3G,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0B;YAAE4E,EAAE,EAAEpG,KAAK,CAACmG;UAAZ,CAA/C,CAAhB;;UACA,IAAInG,KAAK,CAAC4O,sBAAN,KAAiCpN,SAArC,EAAgD;YAC5CZ,IAAI,GAAGiO,0CAA0C,CAAC7O,KAAK,CAAC4O,sBAAP,EAA+B3O,OAA/B,CAAjD;UACH;;UACD,IAAID,KAAK,CAAC4O,sBAAN,KAAiCpN,SAArC,EAAgD;YAC5Ca,QAAQ,GAAGwM,0CAA0C,CAAC7O,KAAK,CAAC4O,sBAAP,EAA+B3O,OAA/B,CAArD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA5BR;IAuCH,CAxCiB,CAAlB;EAyCH,CA3CmH,CAAhB;AA2C/F,CA3CE;AA4CP,OAAO,IAAIkO,0DAA0D,GAAG,UAAU9O,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/G,+BAA+BpB,KAAK,CAACoB;UAD0E,CAAjG,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJkG,SAAS,EAAE;UADP,CAAR;;UAGA,IAAI7G,KAAK,CAAC+O,sBAAN,KAAiCvN,SAArC,EAAgD;YAC5CZ,IAAI,GAAGoO,gDAAgD,CAAChP,KAAK,CAAC+O,sBAAP,EAA+B9O,OAA/B,CAAvD;UACH;;UACD,IAAID,KAAK,CAAC+O,sBAAN,KAAiCvN,SAArC,EAAgD;YAC5Ca,QAAQ,GAAG2M,gDAAgD,CAAChP,KAAK,CAAC+O,sBAAP,EAA+B9O,OAA/B,CAA3D;YACAoC,QAAQ,GAAGA,QAAQ,CAACG,QAAT,CAAkB,wBAAlB,CAAX;YACA5B,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA/BR;IA0CH,CA3CiB,CAAlB;EA4CH,CA9CmH,CAAhB;AA8C/F,CA9CE;AA+CP,OAAO,IAAIqO,2CAA2C,GAAG,UAAUjP,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAxF,CAAT,EAAyI1M,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/M,+BAA+BpB,KAAK,CAACoB;UAD0K,CAAjM,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJwI,OAAO,EAAE;UADL,CAAR;;UAGA,IAAInJ,KAAK,CAACkP,mBAAN,KAA8B1N,SAAlC,EAA6C;YACzCZ,IAAI,GAAGuO,uCAAuC,CAACnP,KAAK,CAACkP,mBAAP,EAA4BjP,OAA5B,CAA9C;UACH;;UACD,IAAID,KAAK,CAACkP,mBAAN,KAA8B1N,SAAlC,EAA6C;YACzCa,QAAQ,GAAG8M,uCAAuC,CAACnP,KAAK,CAACkP,mBAAP,EAA4BjP,OAA5B,CAAlD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7CoG,CAAhB;AA6ChF,CA7CE;AA8CP,OAAO,IAAIwO,wDAAwD,GAAG,UAAUpP,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/G,+BAA+BpB,KAAK,CAACoB;UAD0E,CAAjG,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE4J,OAAO,EAAE;UAAX,CAAD,EAAmB/G,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0B;YAAE4E,EAAE,EAAEpG,KAAK,CAACmG;UAAZ,CAA7C,CAAhB;;UACA,IAAInG,KAAK,CAACqP,oBAAN,KAA+B7N,SAAnC,EAA8C;YAC1CZ,IAAI,GAAG0O,wCAAwC,CAACtP,KAAK,CAACqP,oBAAP,EAA6BpP,OAA7B,CAA/C;UACH;;UACD,IAAID,KAAK,CAACqP,oBAAN,KAA+B7N,SAAnC,EAA8C;YAC1Ca,QAAQ,GAAGiN,wCAAwC,CAACtP,KAAK,CAACqP,oBAAP,EAA6BpP,OAA7B,CAAnD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA5BR;IAuCH,CAxCiB,CAAlB;EAyCH,CA3CiH,CAAhB;AA2C7F,CA3CE;AA4CP,OAAO,IAAI2O,6DAA6D,GAAG,UAAUvP,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxH,+BAA+BpB,KAAK,CAACoB;UADmF,CAAjG,CAAT,EAEZF,yBAAyB,CAAClB,KAAK,CAACwP,yBAAP,CAAzB,IAA8D;YAChE,qCAAqCxP,KAAK,CAACwP,yBAAN,CAAgC9M,QAAhC;UAD2B,CAFlD,CAAlB;UAKAjC,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ2I,YAAY,EAAE;UADV,CAAR;;UAGA,IAAItJ,KAAK,CAACyP,yBAAN,KAAoCjO,SAAxC,EAAmD;YAC/CZ,IAAI,GAAG8O,6CAA6C,CAAC1P,KAAK,CAACyP,yBAAP,EAAkCxP,OAAlC,CAApD;UACH;;UACD,IAAID,KAAK,CAACyP,yBAAN,KAAoCjO,SAAxC,EAAmD;YAC/Ca,QAAQ,GAAGqN,6CAA6C,CAAC1P,KAAK,CAACyP,yBAAP,EAAkCxP,OAAlC,CAAxD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CsH,CAAhB;AA+ClG,CA/CE;AAgDP,OAAO,IAAI+O,qDAAqD,GAAG,UAAU3P,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAxF,CAAT,EAAyI1M,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/M,+BAA+BpB,KAAK,CAACoB;UAD0K,CAAjM,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJsG,iBAAiB,EAAE;UADf,CAAR;;UAGA,IAAIjH,KAAK,CAAC4P,iBAAN,KAA4BpO,SAAhC,EAA2C;YACvCZ,IAAI,GAAGiP,qCAAqC,CAAC7P,KAAK,CAAC4P,iBAAP,EAA0B3P,OAA1B,CAA5C;UACH;;UACD,IAAID,KAAK,CAAC4P,iBAAN,KAA4BpO,SAAhC,EAA2C;YACvCa,QAAQ,GAAGwN,qCAAqC,CAAC7P,KAAK,CAAC4P,iBAAP,EAA0B3P,OAA1B,CAAhD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7C8G,CAAhB;AA6C1F,CA7CE;AA8CP,OAAO,IAAIkP,0CAA0C,GAAG,UAAU9P,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAoC+D,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAnF,CAAT,EAAoI1M,yBAAyB,CAAClB,KAAK,CAAC+P,6BAAP,CAAzB,IAAkE;YAC7N,2CAA2C/P,KAAK,CAAC+P,6BAAN,CAAoCrN,QAApC;UADkL,CAAtM,CAAT,EAEZxB,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJwG,MAAM,EAAE;UADJ,CAAR;;UAGA,IAAInH,KAAK,CAACgQ,MAAN,KAAiBxO,SAArB,EAAgC;YAC5BZ,IAAI,GAAGZ,KAAK,CAACgQ,MAAb;UACH;;UACD,IAAIhQ,KAAK,CAACgQ,MAAN,KAAiBxO,SAArB,EAAgC;YAC5Ba,QAAQ,GAAGrC,KAAK,CAACgQ,MAAjB;YACApP,IAAI,GAAGyB,QAAP;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAI9E,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7CmG,CAAhB;AA6C/E,CA7CE;AA8CP,OAAO,IAAIqP,+CAA+C,GAAG,UAAUjQ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAxF,CAAT,EAAyI1M,yBAAyB,CAAClB,KAAK,CAACkQ,KAAP,CAAzB,IAA0C;YAAE,kCAAkClQ,KAAK,CAACkQ;UAA1C,CAAnL,CAAT,EAAkPhP,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxT,+BAA+BpB,KAAK,CAACoB;UADmR,CAA1S,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ0G,WAAW,EAAE;UADT,CAAR;;UAGA,IAAIrH,KAAK,CAACmQ,wBAAN,KAAmC3O,SAAvC,EAAkD;YAC9CZ,IAAI,GAAGwP,4CAA4C,CAACpQ,KAAK,CAACmQ,wBAAP,EAAiClQ,OAAjC,CAAnD;UACH;;UACD,IAAID,KAAK,CAACmQ,wBAAN,KAAmC3O,SAAvC,EAAkD;YAC9Ca,QAAQ,GAAG+N,4CAA4C,CAACpQ,KAAK,CAACmQ,wBAAP,EAAiClQ,OAAjC,CAAvD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7CwG,CAAhB;AA6CpF,CA7CE;AA8CP,OAAO,IAAIyP,kDAAkD,GAAG,UAAUrQ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAxF,CAAT,EAAyI1M,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/M,+BAA+BpB,KAAK,CAACoB;UAD0K,CAAjM,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJkJ,cAAc,EAAE;UADZ,CAAR;;UAGA,IAAI7J,KAAK,CAACsQ,2BAAN,KAAsC9O,SAA1C,EAAqD;YACjDZ,IAAI,GAAG2P,+CAA+C,CAACvQ,KAAK,CAACsQ,2BAAP,EAAoCrQ,OAApC,CAAtD;UACH;;UACD,IAAID,KAAK,CAACsQ,2BAAN,KAAsC9O,SAA1C,EAAqD;YACjDa,QAAQ,GAAGkO,+CAA+C,CAACvQ,KAAK,CAACsQ,2BAAP,EAAoCrQ,OAApC,CAA1D;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7C2G,CAAhB;AA6CvF,CA7CE;AA8CP,OAAO,IAAI4P,2CAA2C,GAAG,UAAUxQ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAxF,CAAT,EAAyI1M,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/M,+BAA+BpB,KAAK,CAACoB;UAD0K,CAAjM,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ4G,OAAO,EAAE;UADL,CAAR;;UAGA,IAAIvH,KAAK,CAAC2E,OAAN,KAAkBnD,SAAtB,EAAiC;YAC7BZ,IAAI,GAAG6P,2BAA2B,CAACzQ,KAAK,CAAC2E,OAAP,EAAgB1E,OAAhB,CAAlC;UACH;;UACD,IAAID,KAAK,CAAC2E,OAAN,KAAkBnD,SAAtB,EAAiC;YAC7Ba,QAAQ,GAAGoO,2BAA2B,CAACzQ,KAAK,CAAC2E,OAAP,EAAgB1E,OAAhB,CAAtC;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7CoG,CAAhB;AA6ChF,CA7CE;AA8CP,OAAO,IAAI8P,8CAA8C,GAAG,UAAU1Q,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAxF,CAAT,EAAyI1M,yBAAyB,CAAClB,KAAK,CAAC2H,GAAP,CAAzB,IAAwC;YAAE,aAAa3H,KAAK,CAAC2H;UAArB,CAAjL,CAAT,EAAyNzG,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/R,+BAA+BpB,KAAK,CAACoB;UAD0P,CAAjR,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJqJ,UAAU,EAAE;UADR,CAAR;;UAGA,IAAIhK,KAAK,CAAC2Q,uBAAN,KAAkCnP,SAAtC,EAAiD;YAC7CZ,IAAI,GAAGgQ,2CAA2C,CAAC5Q,KAAK,CAAC2Q,uBAAP,EAAgC1Q,OAAhC,CAAlD;UACH;;UACD,IAAID,KAAK,CAAC2Q,uBAAN,KAAkCnP,SAAtC,EAAiD;YAC7Ca,QAAQ,GAAGuO,2CAA2C,CAAC5Q,KAAK,CAAC2Q,uBAAP,EAAgC1Q,OAAhC,CAAtD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7CuG,CAAhB;AA6CnF,CA7CE;AA8CP,OAAO,IAAIiQ,2CAA2C,GAAG,UAAU7Q,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAxF,CAAT,EAAyI1M,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/M,+BAA+BpB,KAAK,CAACoB;UAD0K,CAAjM,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ8G,OAAO,EAAE;UADL,CAAR;;UAGA,IAAIzH,KAAK,CAAC8Q,oBAAN,KAA+BtP,SAAnC,EAA8C;YAC1CZ,IAAI,GAAGmQ,wCAAwC,CAAC/Q,KAAK,CAAC8Q,oBAAP,EAA6B7Q,OAA7B,CAA/C;UACH;;UACD,IAAID,KAAK,CAAC8Q,oBAAN,KAA+BtP,SAAnC,EAA8C;YAC1Ca,QAAQ,GAAG0O,wCAAwC,CAAC/Q,KAAK,CAAC8Q,oBAAP,EAA6B7Q,OAA7B,CAAnD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7CoG,CAAhB;AA6ChF,CA7CE;AA8CP,OAAO,IAAIoQ,oCAAoC,GAAG,UAAUhR,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/H,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4GyB,QAA5G;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAkD+D,yBAAyB,CAAClB,KAAK,CAAC4C,GAAP,CAAzB,IAAwC;YAAE,aAAa5C,KAAK,CAAC4C;UAArB,CAA1F,CAAT,EAAkI1B,yBAAyB,CAAClB,KAAK,CAAC6C,YAAP,CAAzB,IAAiD;YAAE,iBAAiB7C,KAAK,CAAC6C;UAAzB,CAAnL,CAAT,EAAwO3B,yBAAyB,CAAClB,KAAK,CAAC8C,kBAAP,CAAzB,IAAuD;YAAE,uBAAuB9C,KAAK,CAAC8C;UAA/B,CAA/R,CAAT,EAAgW5B,yBAAyB,CAAClB,KAAK,CAAC+C,eAAP,CAAzB,IAAoD;YAAE,oBAAoB/C,KAAK,CAAC+C;UAA5B,CAApZ,CAAT,EAA+c7B,yBAAyB,CAAClB,KAAK,CAACgD,eAAP,CAAzB,IAAoD;YAAE,oBAAoBhD,KAAK,CAACgD;UAA5B,CAAngB,CAAT,EAA8jB9B,yBAAyB,CAAClB,KAAK,CAACiR,aAAP,CAAzB,IAAkD;YAAE,kBAAkBjR,KAAK,CAACiR,aAAN,CAAoBvO,QAApB;UAApB,CAAhnB,CAAT,EAAkrBxB,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAjuB,CAAT,EAAkxB1M,yBAAyB,CAAClB,KAAK,CAACiD,WAAP,CAAzB,IAAgD;YAAE,gBAAgBjD,KAAK,CAACiD;UAAxB,CAAl0B,CAAT,EAAq3B/B,yBAAyB,CAAClB,KAAK,CAACuD,OAAP,CAAzB,IAA4C;YAAEC,OAAO,EAAE7F,iBAAiB,CAACqC,KAAK,CAACuD,OAAP,CAAjB,CAAiCb,QAAjC;UAAX,CAAj6B,CAAT,EAAu+BxB,yBAAyB,CAAClB,KAAK,CAACyD,gBAAP,CAAzB,IAAqD;YAAE,4BAA4BzD,KAAK,CAACyD;UAApC,CAA5hC,CAAT,EAAgmCvC,yBAAyB,CAAClB,KAAK,CAAC0D,SAAP,CAAzB,IAA8C;YAAE,oBAAoB1D,KAAK,CAAC0D;UAA5B,CAA9oC,CAAT,EAAmsCxC,yBAAyB,CAAClB,KAAK,CAAC2D,YAAP,CAAzB,IAAiD;YAAE,wBAAwB3D,KAAK,CAAC2D;UAAhC,CAApvC,CAAT,EAAgzCzC,yBAAyB,CAAClB,KAAK,CAAC4D,aAAP,CAAzB,IAAkD;YAAE,yBAAyB5D,KAAK,CAAC4D;UAAjC,CAAl2C,CAAT,EAAg6C1C,yBAAyB,CAAClB,KAAK,CAAC+D,oBAAP,CAAzB,IAAyD;YAC9mD,gCAAgC/D,KAAK,CAAC+D;UADwkD,CAAz9C,CAAT,EAE1I7C,yBAAyB,CAAClB,KAAK,CAACgE,YAAP,CAAzB,IAAiD;YAAE,uBAAuBhE,KAAK,CAACgE;UAA/B,CAFyF,CAAT,EAE9B9C,yBAAyB,CAAClB,KAAK,CAACiE,uBAAP,CAAzB,IAA4D;YACjK,mCAAmCjE,KAAK,CAACiE;UADwH,CAF9B,CAAT,EAIxH/C,yBAAyB,CAAClB,KAAK,CAACkE,oBAAP,CAAzB,IAAyD;YAC3D,mDAAmDlE,KAAK,CAACkE;UADE,CAJ+D,CAAT,EAM/GhD,yBAAyB,CAAClB,KAAK,CAACmE,cAAP,CAAzB,IAAmD;YACrD,6CAA6CnE,KAAK,CAACmE;UADE,CAN4D,CAAT,EAQtGjD,yBAAyB,CAAClB,KAAK,CAACoE,iBAAP,CAAzB,IAAsD;YACxD,iDAAiDpE,KAAK,CAACoE;UADC,CARgD,CAAT,EAU7FlD,yBAAyB,CAAClB,KAAK,CAACqE,WAAP,CAAzB,IAAgD;YAClD,+CAA+CrE,KAAK,CAACqE;UADH,CAV6C,CAAT,EAYpFnD,yBAAyB,CAAClB,KAAK,CAACsE,uBAAP,CAAzB,IAA4D;YAC9D,wCAAwCtE,KAAK,CAACsE;UADgB,CAZwB,CAAT,EAc3EpD,yBAAyB,CAAClB,KAAK,CAACuE,gBAAP,CAAzB,IAAqD;YACvD,mDAAmDvE,KAAK,CAACuE,gBAAN,CAAuB7B,QAAvB;UADI,CAdsB,CAAT,EAgBlExB,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAhBiB,CAAT,EAgB0CD,yBAAyB,CAAClB,KAAK,CAAC2E,OAAP,CAAzB,IAA4C;YAAE,iBAAiB3E,KAAK,CAAC2E;UAAzB,CAhBtF,CAAT,EAgBsIzD,yBAAyB,CAAClB,KAAK,CAAC4E,cAAP,CAAzB,IAAmD;YAAE,0BAA0B5E,KAAK,CAAC4E;UAAlC,CAhBzL,CAAT,EAgByP1D,yBAAyB,CAAClB,KAAK,CAAC6E,yBAAP,CAAzB,IAA8D;YAChW,uCAAuC,CAAC7E,KAAK,CAAC6E,yBAAN,CAAgCC,WAAhC,GAA8CjD,KAA9C,CAAoD,GAApD,EAAyD,CAAzD,IAA8D,GAA/D,EAAoEa,QAApE;UADyT,CAhBvT,CAAT,EAkB9BxB,yBAAyB,CAAClB,KAAK,CAAC+E,yBAAP,CAAzB,IAA8D;YAChE,gCAAgC/E,KAAK,CAAC+E;UAD0B,CAlBhC,CAAT,EAoBrB7D,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CApBnC,CAAT,EAsBZpB,KAAK,CAACiF,QAAN,KAAmBzD,SAAnB,IACF0D,MAAM,CAACC,IAAP,CAAYnF,KAAK,CAACiF,QAAlB,EAA4BG,MAA5B,CAAmC,UAAUC,GAAV,EAAeC,MAAf,EAAuB;YACtD,IAAIpF,EAAJ;;YACA,OAAQ/C,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKkI,GAAL,CAAT,GAAqBnF,EAAE,GAAG,EAAL,EAASA,EAAE,CAAC,gBAAgBoF,MAAM,CAACC,WAAP,EAAjB,CAAF,GAA2CvF,KAAK,CAACiF,QAAN,CAAeK,MAAf,CAApD,EAA4EpF,EAAjG,EAAhB;UACH,CAHD,EAGG,EAHH,CAvBc,CAAlB;UA2BAO,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ,QAAQ;UADJ,CAAR;;UAGA,IAAIX,KAAK,CAACkR,IAAN,KAAe1P,SAAnB,EAA8B;YAC1BZ,IAAI,GAAGZ,KAAK,CAACkR,IAAb;UACH;;UACD,IAAIlR,KAAK,CAACkR,IAAN,KAAe1P,SAAnB,EAA8B;YAC1Ba,QAAQ,GAAGrC,KAAK,CAACkR,IAAjB;YACAtQ,IAAI,GAAGyB,QAAP;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAI9E,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAjER;IA4EH,CA7EiB,CAAlB;EA8EH,CAhF6F,CAAhB;AAgFzE,CAhFE;AAiFP,OAAO,IAAIuQ,uCAAuC,GAAG,UAAUnR,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4GyB,QAA5G;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4C,GAAP,CAAzB,IAAwC;YAAE,aAAa5C,KAAK,CAAC4C;UAArB,CAAjF,CAAT,EAAyH1B,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAxK,CAAT,EAAyN1M,yBAAyB,CAAClB,KAAK,CAACyD,gBAAP,CAAzB,IAAqD;YAAE,4BAA4BzD,KAAK,CAACyD;UAApC,CAA9Q,CAAT,EAAkVvC,yBAAyB,CAAClB,KAAK,CAAC0D,SAAP,CAAzB,IAA8C;YAAE,oBAAoB1D,KAAK,CAAC0D;UAA5B,CAAhY,CAAT,EAAqbxC,yBAAyB,CAAClB,KAAK,CAAC2D,YAAP,CAAzB,IAAiD;YAAE,wBAAwB3D,KAAK,CAAC2D;UAAhC,CAAte,CAAT,EAAkiBzC,yBAAyB,CAAClB,KAAK,CAACyF,UAAP,CAAzB,IAA+C;YAAE,qBAAqBzF,KAAK,CAACyF;UAA7B,CAAjlB,CAAT,EAAwoBvE,yBAAyB,CAAClB,KAAK,CAAC4D,aAAP,CAAzB,IAAkD;YAAE,yBAAyB5D,KAAK,CAAC4D;UAAjC,CAA1rB,CAAT,EAAwvB1C,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAzyB,CAAT,EAAo2BD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC16B,+BAA+BpB,KAAK,CAACoB;UADq4B,CAA55B,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAEsL,GAAG,EAAE;UAAP,CAAD,EAAezI,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiC;YAAEsG,SAAS,EAAE9H,KAAK,CAAC6H;UAAnB,CAAhD,CAAhB;;UACA,IAAI7H,KAAK,CAAC6N,mBAAN,KAA8BrM,SAAlC,EAA6C;YACzCZ,IAAI,GAAGkN,uCAAuC,CAAC9N,KAAK,CAAC6N,mBAAP,EAA4B5N,OAA5B,CAA9C;UACH;;UACD,IAAID,KAAK,CAAC6N,mBAAN,KAA8BrM,SAAlC,EAA6C;YACzCa,QAAQ,GAAGyL,uCAAuC,CAAC9N,KAAK,CAAC6N,mBAAP,EAA4B5N,OAA5B,CAAlD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAzCR;IAoDH,CArDiB,CAAlB;EAsDH,CAxDgG,CAAhB;AAwD5E,CAxDE;AAyDP,OAAO,IAAIwQ,6CAA6C,GAAG,UAAUpR,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4GyB,QAA5G;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAA1F,CAAT,EAAqJD,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAApM,CAAT,EAAqP1M,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC3T,+BAA+BpB,KAAK,CAACoB;UADsR,CAA7S,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE,cAAc;UAAhB,CAAD,EAAwB6C,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiC;YAAEsG,SAAS,EAAE9H,KAAK,CAAC6H;UAAnB,CAAzD,CAAhB;;UACA,IAAI7H,KAAK,CAACqR,SAAN,KAAoB7P,SAAxB,EAAmC;YAC/BZ,IAAI,GAAG0Q,uCAAuC,CAACtR,KAAK,CAACqR,SAAP,EAAkBpR,OAAlB,CAA9C;UACH;;UACD,IAAID,KAAK,CAACqR,SAAN,KAAoB7P,SAAxB,EAAmC;YAC/Ba,QAAQ,GAAGiP,uCAAuC,CAACtR,KAAK,CAACqR,SAAP,EAAkBpR,OAAlB,CAAlD;YACAoC,QAAQ,GAAGA,QAAQ,CAACG,QAAT,CAAkB,WAAlB,CAAX;YACA5B,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA1CR;IAqDH,CAtDiB,CAAlB;EAuDH,CAzDsG,CAAhB;AAyDlF,CAzDE;AA0DP,OAAO,IAAI2Q,qDAAqD,GAAG,UAAUvR,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAA1F,CAAT,EAAqJD,yBAAyB,CAAClB,KAAK,CAACkQ,KAAP,CAAzB,IAA0C;YAAE,kCAAkClQ,KAAK,CAACkQ;UAA1C,CAA/L,CAAT,EAA8PhP,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAA7S,CAAT,EAA8V1M,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACpa,+BAA+BpB,KAAK,CAACoB;UAD+X,CAAtZ,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ,eAAe;UADX,CAAR;;UAGA,IAAIX,KAAK,CAACwR,uBAAN,KAAkChQ,SAAtC,EAAiD;YAC7CZ,IAAI,GAAG6Q,2CAA2C,CAACzR,KAAK,CAACwR,uBAAP,EAAgCvR,OAAhC,CAAlD;UACH;;UACD,IAAID,KAAK,CAACwR,uBAAN,KAAkChQ,SAAtC,EAAiD;YAC7Ca,QAAQ,GAAGoP,2CAA2C,CAACzR,KAAK,CAACwR,uBAAP,EAAgCvR,OAAhC,CAAtD;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7C8G,CAAhB;AA6C1F,CA7CE;AA8CP,OAAO,IAAI8Q,6CAA6C,GAAG,UAAU1R,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4GyB,QAA5G;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAA1F,CAAT,EAAqJD,yBAAyB,CAAClB,KAAK,CAAC4H,yBAAP,CAAzB,IAA8D;YACnP,qCAAqC5H,KAAK,CAAC4H,yBAAN,CAAgClF,QAAhC;UAD8M,CAAnN,CAAT,EAErBxB,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAF1B,CAAT,EAE2E1M,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACjJ,+BAA+BpB,KAAK,CAACoB;UAD4G,CAFnI,CAAlB;UAKAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAEkO,SAAS,EAAE;UAAb,CAAD,EAAqBrL,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiC;YAAEsG,SAAS,EAAE9H,KAAK,CAAC6H;UAAnB,CAAtD,CAAhB;;UACA,IAAI7H,KAAK,CAAC2R,SAAN,KAAoBnQ,SAAxB,EAAmC;YAC/BZ,IAAI,GAAGgR,uCAAuC,CAAC5R,KAAK,CAAC2R,SAAP,EAAkB1R,OAAlB,CAA9C;UACH;;UACD,IAAID,KAAK,CAAC2R,SAAN,KAAoBnQ,SAAxB,EAAmC;YAC/Ba,QAAQ,GAAGuP,uCAAuC,CAAC5R,KAAK,CAAC2R,SAAP,EAAkB1R,OAAlB,CAAlD;YACAoC,QAAQ,GAAGA,QAAQ,CAACG,QAAT,CAAkB,WAAlB,CAAX;YACA5B,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA5CR;IAuDH,CAxDiB,CAAlB;EAyDH,CA3DsG,CAAhB;AA2DlF,CA3DE;AA4DP,OAAO,IAAIiR,2CAA2C,GAAG,UAAU7R,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4GyB,QAA5G;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAxF,CAAT,EAAyI1M,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxN,+BAA+BpB,KAAK,CAACoB;UADmL,CAAjM,CAAT,EAEZF,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAFrC,CAAlB;UAGAV,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAEoK,OAAO,EAAE;UAAX,CAAD,EAAmBvH,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiC;YAAEsG,SAAS,EAAE9H,KAAK,CAAC6H;UAAnB,CAApD,CAAhB;;UACA,IAAI7H,KAAK,CAAC2E,OAAN,KAAkBnD,SAAtB,EAAiC;YAC7BZ,IAAI,GAAG6P,2BAA2B,CAACzQ,KAAK,CAAC2E,OAAP,EAAgB1E,OAAhB,CAAlC;UACH;;UACD,IAAID,KAAK,CAAC2E,OAAN,KAAkBnD,SAAtB,EAAiC;YAC7Ba,QAAQ,GAAGoO,2BAA2B,CAACzQ,KAAK,CAAC2E,OAAP,EAAgB1E,OAAhB,CAAtC;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAzCR;IAoDH,CArDiB,CAAlB;EAsDH,CAxDoG,CAAhB;AAwDhF,CAxDE;AAyDP,OAAO,IAAIkR,+CAA+C,GAAG,UAAU9R,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgGyB,QAAhG;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAAxF,CAAT,EAAyI1M,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/M,+BAA+BpB,KAAK,CAACoB;UAD0K,CAAjM,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,WAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ0H,iBAAiB,EAAE;UADf,CAAR;;UAGA,IAAIrI,KAAK,CAAC+R,8BAAN,KAAyCvQ,SAA7C,EAAwD;YACpDZ,IAAI,GAAGoR,kDAAkD,CAAChS,KAAK,CAAC+R,8BAAP,EAAuC9R,OAAvC,CAAzD;UACH;;UACD,IAAID,KAAK,CAAC+R,8BAAN,KAAyCvQ,SAA7C,EAAwD;YACpDa,QAAQ,GAAG2P,kDAAkD,CAAChS,KAAK,CAAC+R,8BAAP,EAAuC9R,OAAvC,CAA7D;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7CwG,CAAhB;AA6CpF,CA7CE;AA8CP,OAAO,IAAIqR,wCAAwC,GAAG,UAAUjS,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4GyB,QAA5G;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAA1F,CAAT,EAAqJD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC3N,+BAA+BpB,KAAK,CAACoB;UADsL,CAA7M,CAAlB;UAGAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAAC;YAAE+U,OAAO,EAAE,EAAX;YAAe,QAAQ;UAAvB,CAAD,EAA4ClS,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiC;YAAEsG,SAAS,EAAE9H,KAAK,CAAC6H;UAAnB,CAA7E,CAAhB;;UACA,IAAI7H,KAAK,CAACmS,cAAN,KAAyB3Q,SAA7B,EAAwC;YACpCZ,IAAI,GAAGwR,kCAAkC,CAACpS,KAAK,CAACmS,cAAP,EAAuBlS,OAAvB,CAAzC;UACH;;UACD,IAAID,KAAK,CAACmS,cAAN,KAAyB3Q,SAA7B,EAAwC;YACpCa,QAAQ,GAAG+P,kCAAkC,CAACpS,KAAK,CAACmS,cAAP,EAAuBlS,OAAvB,CAA7C;YACAW,IAAI,GAAG,wCAAP;YACAyB,QAAQ,CAACI,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACA7B,IAAI,IAAIyB,QAAQ,CAACK,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,MAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAzCR;IAoDH,CArDiB,CAAlB;EAsDH,CAxDiG,CAAhB;AAwD7E,CAxDE;AAyDP,OAAO,IAAIyR,8CAA8C,GAAG,UAAUrS,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4G0R,QAA5G,EAAsHC,IAAtH,EAA4HA,IAA5H,EAAkIA,IAAlI,EAAwIA,IAAxI,EAA8IA,IAA9I,EAAoJA,IAApJ;;IACA,OAAOlV,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC+D,yBAAyB,CAAClB,KAAK,CAACkE,oBAAP,CAAzB,IAAyD;YAC3I,mDAAmDlE,KAAK,CAACkE;UADkF,CAAlG,CAAT,EAE9BhD,yBAAyB,CAAClB,KAAK,CAACmE,cAAP,CAAzB,IAAmD;YACrD,6CAA6CnE,KAAK,CAACmE;UADE,CAFrB,CAAT,EAIrBjD,yBAAyB,CAAClB,KAAK,CAACoE,iBAAP,CAAzB,IAAsD;YACxD,iDAAiDpE,KAAK,CAACoE;UADC,CAJjC,CAAT,EAMZlD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAN5C,CAAlB;UASAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAG;YACJ6R,MAAM,EAAE,EADJ;YAEJ,eAAe,GAFX;YAGJ,QAAQ;UAHJ,CAAR;UAKA5R,IAAI,GAAG,wCAAP;UACA0R,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,4BAAd,CAAX;UACAiT,QAAQ,CAAC7P,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;;UACA,IAAIzC,KAAK,CAACyS,UAAN,KAAqBjR,SAAzB,EAAoC;YAChC+Q,IAAI,GAAG,IAAIlT,SAAJ,CAAc,YAAd,EAA4BqT,YAA5B,CAAyC,IAAInT,SAAJ,CAAcS,KAAK,CAACyS,UAApB,CAAzC,EAA0EjQ,QAA1E,CAAmF,YAAnF,CAAP;YACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;UACH;;UACD,IAAIvS,KAAK,CAAC2S,cAAN,KAAyBnR,SAA7B,EAAwC;YACpC+Q,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EACFqT,YADE,CACW,IAAInT,SAAJ,CAAcS,KAAK,CAAC2S,cAApB,CADX,EAEFnQ,QAFE,CAEO,gBAFP,CAAP;YAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;UACH;;UACD,IAAIvS,KAAK,CAAC4S,kBAAN,KAA6BpR,SAAjC,EAA4C;YACxC+Q,IAAI,GAAGM,sCAAsC,CAAC7S,KAAK,CAAC4S,kBAAP,EAA2B3S,OAA3B,CAAtC,CAA0EuC,QAA1E,CAAmF,oBAAnF,CAAP;YACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;UACH;;UACD,IAAIvS,KAAK,CAAC8S,mBAAN,KAA8BtR,SAAlC,EAA6C;YACzC+Q,IAAI,GAAGQ,uCAAuC,CAAC/S,KAAK,CAAC8S,mBAAP,EAA4B7S,OAA5B,CAAvC,CAA4EuC,QAA5E,CAAqF,qBAArF,CAAP;YACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;UACH;;UACD,IAAIvS,KAAK,CAACgT,eAAN,KAA0BxR,SAA9B,EAAyC;YACrC+Q,IAAI,GAAGU,mCAAmC,CAACjT,KAAK,CAACgT,eAAP,EAAwB/S,OAAxB,CAAnC,CAAoEuC,QAApE,CAA6E,iBAA7E,CAAP;YACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;UACH;;UACD,IAAIvS,KAAK,CAACkT,SAAN,KAAoB1R,SAAxB,EAAmC;YAC/B+Q,IAAI,GAAGY,6BAA6B,CAACnT,KAAK,CAACkT,SAAP,EAAkBjT,OAAlB,CAA7B,CAAwDuC,QAAxD,CAAiE,WAAjE,CAAP;YACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;UACH;;UACD3R,IAAI,IAAI0R,QAAQ,CAAC5P,QAAT,EAAR;UACA,OAAO,CAAC,CAAD,EAAI,IAAInF,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,MAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAxER;IAmFH,CApFiB,CAAlB;EAqFH,CAvFuG,CAAhB;AAuFnF,CAvFE;AAwFP,OAAO,IAAIwS,qCAAqC,GAAG,UAAUpT,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4GyB,QAA5G;;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAkD+D,yBAAyB,CAAClB,KAAK,CAACiR,aAAP,CAAzB,IAAkD;YAAE,kBAAkBjR,KAAK,CAACiR,aAAN,CAAoBvO,QAApB;UAApB,CAApG,CAAT,EAAsKxB,yBAAyB,CAAClB,KAAK,CAAC4N,UAAP,CAAzB,IAA+C;YAAE,eAAe5N,KAAK,CAAC4N;UAAvB,CAArN,CAAT,EAAsQ1M,yBAAyB,CAAClB,KAAK,CAACkE,oBAAP,CAAzB,IAAyD;YACjX,mDAAmDlE,KAAK,CAACkE;UADwT,CAA/T,CAAT,EAEvChD,yBAAyB,CAAClB,KAAK,CAACmE,cAAP,CAAzB,IAAmD;YACrD,6CAA6CnE,KAAK,CAACmE;UADE,CAFZ,CAAT,EAI9BjD,yBAAyB,CAAClB,KAAK,CAACoE,iBAAP,CAAzB,IAAsD;YACxD,iDAAiDpE,KAAK,CAACoE;UADC,CAJxB,CAAT,EAMrBlD,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAN5B,CAAT,EAMuFD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC7J,+BAA+BpB,KAAK,CAACoB;UADwH,CAN/I,CAAlB;UASAX,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAACA,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAA4B6C,KAAK,CAAC+K,UAAN,KAAqBvJ,SAArB,IAAkC;YAAEwJ,UAAU,EAAEhL,KAAK,CAAC+K,UAAN,CAAiBrI,QAAjB;UAAd,CAA9D,CAAT,EAAuH1C,KAAK,CAACiC,QAAN,KAAmBT,SAAnB,IAAgC;YAAEU,QAAQ,EAAElC,KAAK,CAACiC;UAAlB,CAAvJ,CAAhB;;UACA,IAAIjC,KAAK,CAACkR,IAAN,KAAe1P,SAAnB,EAA8B;YAC1BZ,IAAI,GAAGZ,KAAK,CAACkR,IAAb;UACH;;UACD,IAAIlR,KAAK,CAACkR,IAAN,KAAe1P,SAAnB,EAA8B;YAC1Ba,QAAQ,GAAGrC,KAAK,CAACkR,IAAjB;YACAtQ,IAAI,GAAGyB,QAAP;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAI9E,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA7CR;IAwDH,CAzDiB,CAAlB;EA0DH,CA5D8F,CAAhB;AA4D1E,CA5DE;AA6DP,OAAO,IAAIyS,yCAAyC,GAAG,UAAUrT,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOvD,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM+D,yBAAyB,CAAClB,KAAK,CAACkD,UAAP,CAAzB,IAA+C;YAAE,qBAAqBlD,KAAK,CAACkD;UAA7B,CAArD,CAAT,EAA4GhC,yBAAyB,CAAClB,KAAK,CAACmD,iBAAP,CAAzB,IAAsD;YACrS,8BAA8BnD,KAAK,CAACmD;UADiQ,CAAlK,CAAT,EAExHjC,yBAAyB,CAAClB,KAAK,CAACoD,yBAAP,CAAzB,IAA8D;YAChE,uCAAuCzF,iBAAiB,CAACqC,KAAK,CAACoD,yBAAP,CAAjB,CAAmDV,QAAnD;UADyB,CAF0D,CAAT,EAI/GxB,yBAAyB,CAAClB,KAAK,CAACqD,qBAAP,CAAzB,IAA0D;YAC5D,mCAAmCrD,KAAK,CAACqD;UADmB,CAJqD,CAAT,EAMtGnC,yBAAyB,CAAClB,KAAK,CAACsD,2BAAP,CAAzB,IAAgE;YAClE,yCAAyC3F,iBAAiB,CAACqC,KAAK,CAACsD,2BAAP,CAAjB,CAAqDZ,QAArD;UADyB,CANsC,CAAT,EAQ7FxB,yBAAyB,CAAClB,KAAK,CAACsT,eAAP,CAAzB,IAAoD;YAAE,2BAA2BtT,KAAK,CAACsT;UAAnC,CARyC,CAAT,EAQyBpS,yBAAyB,CAAClB,KAAK,CAACkE,oBAAP,CAAzB,IAAyD;YACxK,mDAAmDlE,KAAK,CAACkE;UAD+G,CARlF,CAAT,EAU3EhD,yBAAyB,CAAClB,KAAK,CAACmE,cAAP,CAAzB,IAAmD;YACrD,6CAA6CnE,KAAK,CAACmE;UADE,CAVwB,CAAT,EAYlEjD,yBAAyB,CAAClB,KAAK,CAACoE,iBAAP,CAAzB,IAAsD;YACxD,iDAAiDpE,KAAK,CAACoE;UADC,CAZY,CAAT,EAczDlD,yBAAyB,CAAClB,KAAK,CAACwE,8BAAP,CAAzB,IAAmE;YACrE,+DAA+DxE,KAAK,CAACwE;UADA,CAdV,CAAT,EAgBhDtD,yBAAyB,CAAClB,KAAK,CAACyE,wBAAP,CAAzB,IAA6D;YAC/D,yDAAyDzE,KAAK,CAACyE;UADA,CAhBb,CAAT,EAkBvCvD,yBAAyB,CAAClB,KAAK,CAAC0E,2BAAP,CAAzB,IAAgE;YAClE,6DAA6D1E,KAAK,CAAC0E;UADD,CAlBzB,CAAT,EAoB9BxD,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CApBnB,CAAT,EAoB8ED,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC7J,+BAA+BpB,KAAK,CAACoB;UADwH,CApBtI,CAAT,EAsBZF,yBAAyB,CAAClB,KAAK,CAACgF,yBAAP,CAAzB,IAA8D;YAChE,sCAAsChF,KAAK,CAACgF;UADoB,CAtBlD,CAAlB;UAyBAvE,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,kBAA9I;;UACA,IAAIP,KAAK,CAACuB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bd,UAAU,GAAGV,KAAK,CAACuB,MAAnB;;YACA,IAAIb,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCtD,4BAA4B,CAACqC,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIgB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI1B,KAAK,CAAC4B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBd,UAAU,GAAGV,KAAK,CAAC4B,GAAnB;;YACA,IAAIlB,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDjB,YAAY,GAAGA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BjB,UAAU,CACnDmB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAO1D,4BAA4B,CAAC0D,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDf,KAAK,GAAGxD,QAAQ,CAACA,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAAgC6C,KAAK,CAAC+K,UAAN,KAAqBvJ,SAArB,IAAkC;YAAEwJ,UAAU,EAAEhL,KAAK,CAAC+K,UAAN,CAAiBrI,QAAjB;UAAd,CAAlE,CAAT,EAA2H1C,KAAK,CAACiC,QAAN,KAAmBT,SAAnB,IAAgC;YAAEU,QAAQ,EAAElC,KAAK,CAACiC;UAAlB,CAA3J,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI1E,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,KAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAtDR;IAiEH,CAlEiB,CAAlB;EAmEH,CArEkG,CAAhB;AAqE9E,CArEE;AAsEP,OAAO,IAAI2S,iDAAiD,GAAG,UAAUvT,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI8C,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEE,KAAvE,EAA8EC,IAA9E,EAAoFyB,QAApF,EAA8FmR,gBAA9F;;IACA,OAAOnW,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGrD,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB,0BAAlB;YAA8C,wBAAwB;UAAtE,CAAD,EAA8F+D,yBAAyB,CAAClB,KAAK,CAACyT,YAAP,CAAzB,IAAiD;YAAE,uBAAuBzT,KAAK,CAACyT;UAA/B,CAA/I,CAAT,EAA0MvS,yBAAyB,CAAClB,KAAK,CAAC0T,YAAP,CAAzB,IAAiD;YAAE,uBAAuB1T,KAAK,CAAC0T;UAA/B,CAA3P,CAAT,EAAsTxS,yBAAyB,CAAClB,KAAK,CAAC2T,UAAP,CAAzB,IAA+C;YAAE,oBAAoB3T,KAAK,CAAC2T,UAAN,CAAiBjR,QAAjB;UAAtB,CAArW,CAAT,EAAsaxB,yBAAyB,CAAClB,KAAK,CAAC4T,SAAP,CAAzB,IAA8C;YAAE,wBAAwB5T,KAAK,CAAC4T;UAAhC,CAApd,CAAT,EAA6gB1S,yBAAyB,CAAClB,KAAK,CAAC6T,YAAP,CAAzB,IAAiD;YAAE,2BAA2B7T,KAAK,CAAC6T;UAAnC,CAA9jB,CAAT,EAA6nB3S,yBAAyB,CAAClB,KAAK,CAAC8T,YAAP,CAAzB,IAAiD;YAAE,kCAAkC9T,KAAK,CAAC8T;UAA1C,CAA9qB,CAAT,EAAovB5S,yBAAyB,CAAClB,KAAK,CAAC6C,YAAP,CAAzB,IAAiD;YAAE,kCAAkC7C,KAAK,CAAC6C;UAA1C,CAAryB,CAAT,EAA22B3B,yBAAyB,CAAClB,KAAK,CAAC8C,kBAAP,CAAzB,IAAuD;YACnqC,wCAAwC9C,KAAK,CAAC8C;UADqnC,CAAl6B,CAAT,EAEtP5B,yBAAyB,CAAClB,KAAK,CAAC+C,eAAP,CAAzB,IAAoD;YACtD,qCAAqC/C,KAAK,CAAC+C;UADW,CAFkM,CAAT,EAI7O7B,yBAAyB,CAAClB,KAAK,CAACgD,eAAP,CAAzB,IAAoD;YACtD,qCAAqChD,KAAK,CAACgD;UADW,CAJyL,CAAT,EAMpO9B,yBAAyB,CAAClB,KAAK,CAACiR,aAAP,CAAzB,IAAkD;YAAE,kBAAkBjR,KAAK,CAACiR,aAAN,CAAoBvO,QAApB;UAApB,CANkL,CAAT,EAMhHxB,yBAAyB,CAAClB,KAAK,CAAC+T,YAAP,CAAzB,IAAiD;YAAE,kCAAkC/T,KAAK,CAAC+T;UAA1C,CAN+D,CAAT,EAMO7S,yBAAyB,CAAClB,KAAK,CAACiD,WAAP,CAAzB,IAAgD;YAAE,iCAAiCjD,KAAK,CAACiD;UAAzC,CANvD,CAAT,EAM2H/B,yBAAyB,CAAClB,KAAK,CAACgU,YAAP,CAAzB,IAAiD;YACvX,wCAAwChU,KAAK,CAACgU,YAAN,CAAmBtR,QAAnB;UAD+U,CAN5K,CAAT,EAQhMxB,yBAAyB,CAAClB,KAAK,CAACiU,IAAP,CAAzB,IAAyC;YAAE,yBAAyBjU,KAAK,CAACiU;UAAjC,CARuJ,CAAT,EAQlG/S,yBAAyB,CAAClB,KAAK,CAACuD,OAAP,CAAzB,IAA4C;YACnI,4BAA4B5F,iBAAiB,CAACqC,KAAK,CAACuD,OAAP,CAAjB,CAAiCb,QAAjC;UADuG,CARsD,CAAT,EAU9KxB,yBAAyB,CAAClB,KAAK,CAACkU,UAAP,CAAzB,IAA+C;YAAE,qCAAqClU,KAAK,CAACkU;UAA7C,CAV+H,CAAT,EAUxDhT,yBAAyB,CAAClB,KAAK,CAACmU,YAAP,CAAzB,IAAiD;YAChK,kCAAkCxW,iBAAiB,CAACqC,KAAK,CAACmU,YAAP,CAAjB,CAAsCzR,QAAtC;UAD8H,CAVO,CAAT,EAY5JxB,yBAAyB,CAAClB,KAAK,CAACoU,WAAP,CAAzB,IAAgD;YAClD,uCAAuCpU,KAAK,CAACoU,WAAN,CAAkB1R,QAAlB;UADW,CAZ4G,CAAT,EAcnJxB,yBAAyB,CAAClB,KAAK,CAAC4E,cAAP,CAAzB,IAAmD;YACrD,2CAA2C5E,KAAK,CAAC4E;UADI,CAdgG,CAAT,EAgB1I1D,yBAAyB,CAAClB,KAAK,CAAC+E,yBAAP,CAAzB,IAA8D;YAChE,iDAAiD/E,KAAK,CAAC+E;UADS,CAhB4E,CAAT,EAkBjI7D,yBAAyB,CAAClB,KAAK,CAAC6E,yBAAP,CAAzB,IAA8D;YAChE,wDAAwD,CAAC7E,KAAK,CAAC6E,yBAAN,CAAgCC,WAAhC,GAA8CjD,KAA9C,CAAoD,GAApD,EAAyD,CAAzD,IAA8D,GAA/D,EAAoEa,QAApE;UADQ,CAlBmE,CAAT,EAoBxHxB,yBAAyB,CAAClB,KAAK,CAACqU,UAAP,CAAzB,IAA+C;YACjD,yCAAyCrU,KAAK,CAACqU,UAAN,CAAiB3R,QAAjB;UADQ,CApByE,CAAT,EAsB/GxB,yBAAyB,CAAClB,KAAK,CAACsU,iBAAP,CAAzB,IAAsD;YACxD,6CAA6CtU,KAAK,CAACsU;UADK,CAtByD,CAAT,EAwBtGpT,yBAAyB,CAAClB,KAAK,CAACuU,cAAP,CAAzB,IAAmD;YACrD,0CAA0CvU,KAAK,CAACuU;UADK,CAxBmD,CAAT,EA0B7FrT,yBAAyB,CAAClB,KAAK,CAACwU,OAAP,CAAzB,IAA4C;YAAE,kCAAkCxU,KAAK,CAACwU;UAA1C,CA1BiD,CAAT,EA0BgBtT,yBAAyB,CAAClB,KAAK,CAAC+D,oBAAP,CAAzB,IAAyD;YAC/J,iDAAiD/D,KAAK,CAAC+D;UADwG,CA1BzE,CAAT,EA4B3E7C,yBAAyB,CAAClB,KAAK,CAACkE,oBAAP,CAAzB,IAAyD;YAC3D,oEAAoElE,KAAK,CAACkE;UADf,CA5BkB,CAAT,EA8BlEhD,yBAAyB,CAAClB,KAAK,CAACqE,WAAP,CAAzB,IAAgD;YAClD,gEAAgErE,KAAK,CAACqE;UADpB,CA9BkB,CAAT,EAgCzDnD,yBAAyB,CAAClB,KAAK,CAACoE,iBAAP,CAAzB,IAAsD;YACxD,kEAAkEpE,KAAK,CAACoE;UADhB,CAhCG,CAAT,EAkChDlD,yBAAyB,CAAClB,KAAK,CAACgE,YAAP,CAAzB,IAAiD;YACnD,wCAAwChE,KAAK,CAACgE;UADK,CAlCD,CAAT,EAoCvC9C,yBAAyB,CAAClB,KAAK,CAACyU,QAAP,CAAzB,IAA6C;YAC/C,wCAAwCzU,KAAK,CAACyU,QAAN,CAAe/R,QAAf;UADO,CApCN,CAAT,EAsC9BxB,yBAAyB,CAAClB,KAAK,CAAC6H,SAAP,CAAzB,IAA8C;YAAE,qCAAqC7H,KAAK,CAAC6H;UAA7C,CAtChB,CAAT,EAsCsF3G,yBAAyB,CAAClB,KAAK,CAACuE,gBAAP,CAAzB,IAAqD;YAClK,oEAAoEvE,KAAK,CAACuE,gBAAN,CAAuB7B,QAAvB;UAD8F,CAtC3I,CAAT,EAwCZ1C,KAAK,CAACiF,QAAN,KAAmBzD,SAAnB,IACF0D,MAAM,CAACC,IAAP,CAAYnF,KAAK,CAACiF,QAAlB,EAA4BG,MAA5B,CAAmC,UAAUC,GAAV,EAAeC,MAAf,EAAuB;YACtD,IAAIpF,EAAJ;;YACA,OAAQ/C,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKkI,GAAL,CAAT,GAAqBnF,EAAE,GAAG,EAAL,EAASA,EAAE,CAAC,gBAAgBoF,MAAM,CAACC,WAAP,EAAjB,CAAF,GAA2CvF,KAAK,CAACiF,QAAN,CAAeK,MAAf,CAApD,EAA4EpF,EAAjG,EAAhB;UACH,CAHD,EAGG,EAHH,CAzCc,CAAlB;UA6CAO,YAAY,GAAG,MAAM,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,QAAT,CAAkB,GAAlB,CAArD,IAA+Ed,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGf,QAAQ,IAAI,EAAzH,IAA+H,yBAA9I;UACAI,KAAK,GAAG;YACJ,QAAQ;UADJ,CAAR;;UAGA,IAAIX,KAAK,CAACkR,IAAN,KAAe1P,SAAnB,EAA8B;YAC1BZ,IAAI,GAAGZ,KAAK,CAACkR,IAAb;UACH;;UACD,IAAIlR,KAAK,CAACkR,IAAN,KAAe1P,SAAnB,EAA8B;YAC1Ba,QAAQ,GAAGrC,KAAK,CAACkR,IAAjB;YACAtQ,IAAI,GAAGyB,QAAP;UACH;;UACD,OAAO,CAAC,CAAD,EAAIpC,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACJ,KAAK,CAAL;UACIyS,gBAAgB,GAAI3S,EAAE,CAACG,IAAH,EAAD,CAAYb,QAA/B;;UACA,IAAIF,OAAO,CAACyU,iBAAR,KAA8B,IAAlC,EAAwC;YACpClB,gBAAgB,GAAG,oBAAoBA,gBAAvC;;YACA,IAAIxT,KAAK,CAACyT,YAAN,KAAuBjS,SAA3B,EAAsC;cAClC,MAAM,IAAIE,KAAJ,CAAU,2DAAV,CAAN;YACH;;YACD8R,gBAAgB,GAAGA,gBAAgB,CAAC7R,OAAjB,CAAyB,gBAAzB,EAA2C3B,KAAK,CAACyT,YAAjD,CAAnB;;YACA,IAAI,CAAChW,iBAAiB,CAAC+V,gBAAD,CAAtB,EAA0C;cACtC,MAAM,IAAI9R,KAAJ,CAAU,iEAAV,CAAN;YACH;UACJ;;UACD,OAAO,CAAC,CAAD,EAAI,IAAInE,aAAJ,CAAkB;YACrB8C,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEqT,gBAFW;YAGrBlT,IAAI,EAAEA,IAHe;YAIrB6B,MAAM,EAAE,MAJa;YAKrB3B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAzER;IAoFH,CArFiB,CAAlB;EAsFH,CAxF0G,CAAhB;AAwFtF,CAxFE;AAyFP,OAAO,IAAI+T,iDAAiD,GAAG,UAAUC,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIC,sDAAsD,CAACF,MAAD,EAAS3U,OAAT,CAA1D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPL,cAAc,EAAE/S;UAFT,CAAX;;UAIA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIyU,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArB2G,CAAhB;AAqBvF,CArBE;;AAsBP,IAAIyS,sDAAsD,GAAG,UAAUF,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2ClV,EAA3C,EAA+CS,EAA/C,EAAmD0U,UAAnD,EAA+DC,OAA/D;;IACA,IAAIC,EAAJ;;IACA,OAAOpY,WAAW,CAAC,IAAD,EAAO,UAAUqY,EAAV,EAAc;MACnC,QAAQA,EAAE,CAAC5U,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAa,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIE,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEJ,EAAE,CAAC7U,IAAH,GAAU8U,EAAE,CAAC1U,IAAH,EAAV,EAAqByU,EAAvB,EAAV,CAAvB,CAAf;UACAH,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;UACAR,EAAE,GAAGkV,SAAL;;UACA,QAAQlV,EAAR;YACI,KAAK,cAAL;cAAqB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACrB,KAAK,+BAAL;cAAsC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAF1C;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIS,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC,CAAD,EAAIkV,0CAA0C,CAACX,YAAD,EAAenV,OAAf,CAA9C,CAAP;;QACJ,KAAK,CAAL;UACIoV,QAAQ,GAAGlY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB/U,EAAE,CAACgV,MAAH,CAAU,CAAEH,EAAE,CAAC1U,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgV,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIW,UAAU,GAAGH,YAAY,CAACxU,IAA1B;UACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAxI,CAA3B,CAAnB;UACAc,EAAE,CAAC5U,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACI0U,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MA9BR;IAgCH,CAjCiB,CAAlB;EAkCH,CArCyG,CAAhB;AAqCrF,CArCL;;AAsCA,OAAO,IAAIkB,oDAAoD,GAAG,UAAU3B,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI4B,yDAAyD,CAAC7B,MAAD,EAAS3U,OAAT,CAA7D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPrT,MAAM,EAAEC,SAFD;YAGP+C,gBAAgB,EAAE/C,SAHX;YAIPyS,IAAI,EAAEzS,SAJC;YAKP0S,UAAU,EAAE1S,SALL;YAMPI,GAAG,EAAEJ,SANE;YAOPkV,QAAQ,EAAElV,SAPH;YAQP+S,cAAc,EAAE/S,SART;YASP6C,WAAW,EAAE7C,SATN;YAUPuC,oBAAoB,EAAEvC,SAVf;YAWPqG,SAAS,EAAErG;UAXJ,CAAX;;UAaA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAAC6R,UAAT,GAAsBU,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAAtB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,8BAAf,MAAmDgB,SAAvD,EAAkE;YAC9Da,QAAQ,CAAC0B,oBAAT,GAAgC6Q,MAAM,CAACpU,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAACwF,SAAT,GAAqB+M,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,6CAAf,MAAkEgB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACgC,WAAT,GAAuBuQ,MAAM,CAACpU,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;YACjFa,QAAQ,CAACkC,gBAAT,GAA4B5F,cAAc,CAACiW,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACd,MAAT,GAAkBtD,cAAc,CAACuY,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,MAAD,CAAJ,KAAiBhV,SAArB,EAAgC;YAC5Ba,QAAQ,CAAC4R,IAAT,GAAgBhW,cAAc,CAACuY,IAAI,CAAC,MAAD,CAAL,CAA9B;UACH;;UACD,IAAIA,IAAI,CAAC,KAAD,CAAJ,KAAgBhV,SAApB,EAA+B;YAC3Ba,QAAQ,CAACT,GAAT,GAAe3D,cAAc,CAACuY,IAAI,CAAC,KAAD,CAAL,CAA7B;UACH;;UACD,IAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBhV,SAAzB,EAAoC;YAChCa,QAAQ,CAACqU,QAAT,GAAoBzY,cAAc,CAACuY,IAAI,CAAC,UAAD,CAAL,CAAlC;UACH;;UACD,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MArDR;IAuDH,CAxDiB,CAAlB;EAyDH,CA3D8G,CAAhB;AA2D1F,CA3DE;;AA4DP,IAAIoU,yDAAyD,GAAG,UAAU7B,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB4G,CAAhB;AAyBxF,CAzBL;;AA0BA,OAAO,IAAIsB,uCAAuC,GAAG,UAAU/B,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+B,4CAA4C,CAAChC,MAAD,EAAS3U,OAAT,CAAhD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPrQ,gBAAgB,EAAE/C,SAFX;YAGPqV,gBAAgB,EAAErV,SAHX;YAIPsV,mBAAmB,EAAEtV,SAJd;YAKP0S,UAAU,EAAE1S,SALL;YAMP+S,cAAc,EAAE/S,SANT;YAOP0C,oBAAoB,EAAE1C,SAPf;YAQP4C,iBAAiB,EAAE5C,SARZ;YASP8C,uBAAuB,EAAE9C,SATlB;YAUP6C,WAAW,EAAE7C,SAVN;YAWPuC,oBAAoB,EAAEvC,SAXf;YAYPqG,SAAS,EAAErG;UAZJ,CAAX;;UAcA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAAC6R,UAAT,GAAsBU,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAAtB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,8BAAf,MAAmDgB,SAAvD,EAAkE;YAC9Da,QAAQ,CAACyU,mBAAT,GAA+BlC,MAAM,CAACpU,OAAP,CAAe,8BAAf,CAA/B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAACwF,SAAT,GAAqB+M,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,8BAAf,MAAmDgB,SAAvD,EAAkE;YAC9Da,QAAQ,CAAC0B,oBAAT,GAAgC6Q,MAAM,CAACpU,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;YACjFa,QAAQ,CAAC6B,oBAAT,GAAgC0Q,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAhC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,+CAAf,MAAoEgB,SAAxE,EAAmF;YAC/Ea,QAAQ,CAAC+B,iBAAT,GAA6BwQ,MAAM,CAACpU,OAAP,CAAe,+CAAf,CAA7B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,6CAAf,MAAkEgB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACgC,WAAT,GAAuBuQ,MAAM,CAACpU,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,sCAAf,MAA2DgB,SAA/D,EAA0E;YACtEa,QAAQ,CAACiC,uBAAT,GAAmCsQ,MAAM,CAACpU,OAAP,CAAe,sCAAf,CAAnC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;YACjFa,QAAQ,CAACkC,gBAAT,GAA4B5F,cAAc,CAACiW,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAACwU,gBAAT,GAA4BE,sCAAsC,CAACP,IAAD,EAAOvW,OAAP,CAAlE;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAtDR;IAwDH,CAzDiB,CAAlB;EA0DH,CA5DiG,CAAhB;AA4D7E,CA5DE;;AA6DP,IAAIuU,4CAA4C,GAAG,UAAUhC,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2ClV,EAA3C,EAA+CS,EAA/C,EAAmD0U,UAAnD,EAA+DC,OAA/D;;IACA,IAAIC,EAAJ;;IACA,OAAOpY,WAAW,CAAC,IAAD,EAAO,UAAUqY,EAAV,EAAc;MACnC,QAAQA,EAAE,CAAC5U,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAa,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIE,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEJ,EAAE,CAAC7U,IAAH,GAAU8U,EAAE,CAAC1U,IAAH,EAAV,EAAqByU,EAAvB,EAAV,CAAvB,CAAf;UACAH,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;UACAR,EAAE,GAAGkV,SAAL;;UACA,QAAQlV,EAAR;YACI,KAAK,4BAAL;cAAmC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACnC,KAAK,6CAAL;cAAoD,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAFxD;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIS,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC,CAAD,EAAImW,wDAAwD,CAAC5B,YAAD,EAAenV,OAAf,CAA5D,CAAP;;QACJ,KAAK,CAAL;UACIoV,QAAQ,GAAGlY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB/U,EAAE,CAACgV,MAAH,CAAU,CAAEH,EAAE,CAAC1U,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgV,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIW,UAAU,GAAGH,YAAY,CAACxU,IAA1B;UACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAxI,CAA3B,CAAnB;UACAc,EAAE,CAAC5U,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACI0U,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MA9BR;IAgCH,CAjCiB,CAAlB;EAkCH,CArC+F,CAAhB;AAqC3E,CArCL;;AAsCA,OAAO,IAAI4B,yCAAyC,GAAG,UAAUrC,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqC,8CAA8C,CAACtC,MAAD,EAAS3U,OAAT,CAAlD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP8B,QAAQ,EAAElV;UAFH,CAAX;;UAIA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,UAAf,MAA+BgB,SAAnC,EAA8C;YAC1Ca,QAAQ,CAACqU,QAAT,GAAoB9B,MAAM,CAACpU,OAAP,CAAe,UAAf,CAApB;UACH;;UACD,OAAO,CAAC,CAAD,EAAIyU,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArBmG,CAAhB;AAqB/E,CArBE;;AAsBP,IAAI6U,8CAA8C,GAAG,UAAUtC,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2ClV,EAA3C,EAA+CS,EAA/C,EAAmD4U,EAAnD,EAAuDF,UAAvD,EAAmEC,OAAnE;;IACA,IAAIE,EAAJ;;IACA,OAAOrY,WAAW,CAAC,IAAD,EAAO,UAAU8Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrW,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAc,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIC,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEH,EAAE,CAAC9U,IAAH,GAAUuW,EAAE,CAACnW,IAAH,EAAV,EAAqB0U,EAAvB,EAAV,CAAvB,CAAf;UACAJ,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;UACAR,EAAE,GAAGkV,SAAL;;UACA,QAAQlV,EAAR;YACI,KAAK,qBAAL;cAA4B,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAC5B,KAAK,sCAAL;cAA6C,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAC7C,KAAK,yBAAL;cAAgC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAChC,KAAK,0CAAL;cAAiD,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAJrD;;UAMA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIS,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC,CAAD,EAAIuW,iDAAiD,CAAChC,YAAD,EAAenV,OAAf,CAArD,CAAP;;QACJ,KAAK,CAAL;UACIoV,QAAQ,GAAGlY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB/U,EAAE,CAACgV,MAAH,CAAU,CAAEsB,EAAE,CAACnW,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgV,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIa,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC,CAAD,EAAI4B,qDAAqD,CAACjC,YAAD,EAAenV,OAAf,CAAzD,CAAP;;QACJ,KAAK,CAAL;UACIoV,QAAQ,GAAGlY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuBH,EAAE,CAACI,MAAH,CAAU,CAAEsB,EAAE,CAACnW,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgV,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIW,UAAU,GAAGH,YAAY,CAACxU,IAA1B;UACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAxI,CAA3B,CAAnB;UACAuC,EAAE,CAACrW,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACI0U,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAtCR;IAwCH,CAzCiB,CAAlB;EA0CH,CA7CiG,CAAhB;AA6C7E,CA7CL;;AA8CA,OAAO,IAAIiC,kDAAkD,GAAG,UAAU1C,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI0C,uDAAuD,CAAC3C,MAAD,EAAS3U,OAAT,CAA3D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP4C,SAAS,EAAEhW,SAFJ;YAGPiW,WAAW,EAAEjW,SAHN;YAIPD,MAAM,EAAEC,SAJD;YAKP+C,gBAAgB,EAAE/C,SALX;YAMPI,GAAG,EAAEJ,SANE;YAOP+S,cAAc,EAAE/S,SAPT;YAQP0C,oBAAoB,EAAE1C,SARf;YASP4C,iBAAiB,EAAE5C,SATZ;YAUP8C,uBAAuB,EAAE9C,SAVlB;YAWP6C,WAAW,EAAE7C,SAXN;YAYPuC,oBAAoB,EAAEvC,SAZf;YAaPS,QAAQ,EAAET;UAbH,CAAX;;UAeA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAACmV,SAAT,GAAqB3Z,eAAe,CAACkB,sBAAsB,CAAC6V,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAAD,CAAvB,CAApC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,qBAAf,MAA0CgB,SAA9C,EAAyD;YACrDa,QAAQ,CAACoV,WAAT,GAAuB7C,MAAM,CAACpU,OAAP,CAAe,qBAAf,CAAvB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,8BAAf,MAAmDgB,SAAvD,EAAkE;YAC9Da,QAAQ,CAAC0B,oBAAT,GAAgC6Q,MAAM,CAACpU,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;YACjFa,QAAQ,CAAC6B,oBAAT,GAAgC0Q,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAhC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,+CAAf,MAAoEgB,SAAxE,EAAmF;YAC/Ea,QAAQ,CAAC+B,iBAAT,GAA6BwQ,MAAM,CAACpU,OAAP,CAAe,+CAAf,CAA7B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,6CAAf,MAAkEgB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACgC,WAAT,GAAuBuQ,MAAM,CAACpU,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,sCAAf,MAA2DgB,SAA/D,EAA0E;YACtEa,QAAQ,CAACiC,uBAAT,GAAmCsQ,MAAM,CAACpU,OAAP,CAAe,sCAAf,CAAnC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;YACjFa,QAAQ,CAACkC,gBAAT,GAA4B5F,cAAc,CAACiW,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACd,MAAT,GAAkBtD,cAAc,CAACuY,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,KAAD,CAAJ,KAAgBhV,SAApB,EAA+B;YAC3Ba,QAAQ,CAACT,GAAT,GAAe3D,cAAc,CAACuY,IAAI,CAAC,KAAD,CAAL,CAA7B;UACH;;UACD,IAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBhV,SAAzB,EAAoC;YAChCa,QAAQ,CAACJ,QAAT,GAAoBhE,cAAc,CAACuY,IAAI,CAAC,UAAD,CAAL,CAAlC;UACH;;UACD,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MA7DR;IA+DH,CAhEiB,CAAlB;EAiEH,CAnE4G,CAAhB;AAmExF,CAnEE;;AAoEP,IAAIkV,uDAAuD,GAAG,UAAU3C,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB0G,CAAhB;AAyBtF,CAzBL;;AA0BA,OAAO,IAAIqC,yCAAyC,GAAG,UAAU9C,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI8C,8CAA8C,CAAC/C,MAAD,EAAS3U,OAAT,CAAlD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBmG,CAAhB;AAiB/E,CAjBE;;AAkBP,IAAIsV,8CAA8C,GAAG,UAAU/C,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBiG,CAAhB;AAyB7E,CAzBL;;AA0BA,OAAO,IAAIuC,+DAA+D,GAAG,UAAUhD,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3J,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIgD,oEAAoE,CAACjD,MAAD,EAAS3U,OAAT,CAAxE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjByH,CAAhB;AAiBrG,CAjBE;;AAkBP,IAAIwV,oEAAoE,GAAG,UAAUjD,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBuH,CAAhB;AAyBnG,CAzBL;;AA0BA,OAAO,IAAIyC,6CAA6C,GAAG,UAAUlD,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIkD,kDAAkD,CAACnD,MAAD,EAAS3U,OAAT,CAAtD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBuG,CAAhB;AAiBnF,CAjBE;;AAkBP,IAAI0V,kDAAkD,GAAG,UAAUnD,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBqG,CAAhB;AAyBjF,CAzBL;;AA0BA,OAAO,IAAI2C,mDAAmD,GAAG,UAAUpD,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIoD,wDAAwD,CAACrD,MAAD,EAAS3U,OAAT,CAA5D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB6G,CAAhB;AAiBzF,CAjBE;;AAkBP,IAAI4V,wDAAwD,GAAG,UAAUrD,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB2G,CAAhB;AAyBvF,CAzBL;;AA0BA,OAAO,IAAI6C,wEAAwE,GAAG,UAAUtD,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpK,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIsD,6EAA6E,CAACvD,MAAD,EAAS3U,OAAT,CAAjF,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBkI,CAAhB;AAiB9G,CAjBE;;AAkBP,IAAI8V,6EAA6E,GAAG,UAAUvD,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClK,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBgI,CAAhB;AAyB5G,CAzBL;;AA0BA,OAAO,IAAI+C,+DAA+D,GAAG,UAAUxD,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3J,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIwD,oEAAoE,CAACzD,MAAD,EAAS3U,OAAT,CAAxE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjByH,CAAhB;AAiBrG,CAjBE;;AAkBP,IAAIgW,oEAAoE,GAAG,UAAUzD,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBuH,CAAhB;AAyBnG,CAzBL;;AA0BA,OAAO,IAAIiD,kDAAkD,GAAG,UAAU1D,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI0D,uDAAuD,CAAC3D,MAAD,EAAS3U,OAAT,CAA3D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB4G,CAAhB;AAiBxF,CAjBE;;AAkBP,IAAIkW,uDAAuD,GAAG,UAAU3D,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB0G,CAAhB;AAyBtF,CAzBL;;AA0BA,OAAO,IAAImD,6DAA6D,GAAG,UAAU5D,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI4D,kEAAkE,CAAC7D,MAAD,EAAS3U,OAAT,CAAtE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBuH,CAAhB;AAiBnG,CAjBE;;AAkBP,IAAIoW,kEAAkE,GAAG,UAAU7D,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBqH,CAAhB;AAyBjG,CAzBL;;AA0BA,OAAO,IAAIqD,0DAA0D,GAAG,UAAU9D,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI8D,+DAA+D,CAAC/D,MAAD,EAAS3U,OAAT,CAAnE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBoH,CAAhB;AAiBhG,CAjBE;;AAkBP,IAAIsW,+DAA+D,GAAG,UAAU/D,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBkH,CAAhB;AAyB9F,CAzBL;;AA0BA,OAAO,IAAIuD,+CAA+C,GAAG,UAAUhE,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIgE,oDAAoD,CAACjE,MAAD,EAAS3U,OAAT,CAAxD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjByG,CAAhB;AAiBrF,CAjBE;;AAkBP,IAAIwW,oDAAoD,GAAG,UAAUjE,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBuG,CAAhB;AAyBnF,CAzBL;;AA0BA,OAAO,IAAIyD,oDAAoD,GAAG,UAAUlE,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIkE,yDAAyD,CAACnE,MAAD,EAAS3U,OAAT,CAA7D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB8G,CAAhB;AAiB1F,CAjBE;;AAkBP,IAAI0W,yDAAyD,GAAG,UAAUnE,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB4G,CAAhB;AAyBxF,CAzBL;;AA0BA,OAAO,IAAI2D,gDAAgD,GAAG,UAAUpE,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIoE,qDAAqD,CAACrE,MAAD,EAAS3U,OAAT,CAAzD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB0G,CAAhB;AAiBtF,CAjBE;;AAkBP,IAAI4W,qDAAqD,GAAG,UAAUrE,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBwG,CAAhB;AAyBpF,CAzBL;;AA0BA,OAAO,IAAI6D,gDAAgD,GAAG,UAAUtE,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIsE,qDAAqD,CAACvE,MAAD,EAAS3U,OAAT,CAAzD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB0G,CAAhB;AAiBtF,CAjBE;;AAkBP,IAAI8W,qDAAqD,GAAG,UAAUvE,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBwG,CAAhB;AAyBpF,CAzBL;;AA0BA,OAAO,IAAI+D,yCAAyC,GAAG,UAAUxE,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIwE,8CAA8C,CAACzE,MAAD,EAAS3U,OAAT,CAAlD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPZ,YAAY,EAAExS,SAFP;YAGP+S,cAAc,EAAE/S,SAHT;YAIPqG,SAAS,EAAErG;UAJJ,CAAX;;UAMA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,qBAAf,MAA0CgB,SAA9C,EAAyD;YACrDa,QAAQ,CAAC2R,YAAT,GAAwBrV,cAAc,CAACiW,MAAM,CAACpU,OAAP,CAAe,qBAAf,CAAD,CAAtC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAACwF,SAAT,GAAqB+M,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIyU,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAvBR;IAyBH,CA1BiB,CAAlB;EA2BH,CA7BmG,CAAhB;AA6B/E,CA7BE;;AA8BP,IAAIgX,8CAA8C,GAAG,UAAUzE,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBiG,CAAhB;AAyB7E,CAzBL;;AA0BA,OAAO,IAAIiE,0CAA0C,GAAG,UAAU1E,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI0E,+CAA+C,CAAC3E,MAAD,EAAS3U,OAAT,CAAnD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP4E,OAAO,EAAEhY,SAFF;YAGPiY,MAAM,EAAEjY,SAHD;YAIP+S,cAAc,EAAE/S;UAJT,CAAX;;UAMA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAACgD,OAAL,KAAiB,EAArB,EAAyB;YACrBnX,QAAQ,CAACmX,OAAT,GAAmB,EAAnB;UACH;;UACD,IAAIhD,IAAI,CAAC,SAAD,CAAJ,KAAoBhV,SAAxB,EAAmC;YAC/Ba,QAAQ,CAACmX,OAAT,GAAmBE,oCAAoC,CAACnb,sBAAsB,CAACiY,IAAI,CAAC,SAAD,CAAL,CAAvB,EAA0CvW,OAA1C,CAAvD;UACH;;UACD,IAAIuW,IAAI,CAAC9U,KAAL,KAAe,EAAnB,EAAuB;YACnBW,QAAQ,CAACoX,MAAT,GAAkB,EAAlB;UACH;;UACD,IAAIjD,IAAI,CAAC,OAAD,CAAJ,KAAkBhV,SAAtB,EAAiC;YAC7Ba,QAAQ,CAACoX,MAAT,GAAkBE,4BAA4B,CAACpb,sBAAsB,CAACiY,IAAI,CAAC,OAAD,CAAL,CAAvB,EAAwCvW,OAAxC,CAA9C;UACH;;UACD,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MA/BR;IAiCH,CAlCiB,CAAlB;EAmCH,CArCoG,CAAhB;AAqChF,CArCE;;AAsCP,IAAIkX,+CAA+C,GAAG,UAAU3E,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBkG,CAAhB;AAyB9E,CAzBL;;AA0BA,OAAO,IAAIuE,gDAAgD,GAAG,UAAUhF,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIgF,qDAAqD,CAACjF,MAAD,EAAS3U,OAAT,CAAzD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP/M,SAAS,EAAErG;UAFJ,CAAX;;UAIA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAACwF,SAAT,GAAqB+M,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,OAAO,CAAC,CAAD,EAAIyU,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArB0G,CAAhB;AAqBtF,CArBE;;AAsBP,IAAIwX,qDAAqD,GAAG,UAAUjF,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBwG,CAAhB;AAyBpF,CAzBL;;AA0BA,OAAO,IAAIyE,oDAAoD,GAAG,UAAUlF,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIkF,yDAAyD,CAACnF,MAAD,EAAS3U,OAAT,CAA7D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB8G,CAAhB;AAiB1F,CAjBE;;AAkBP,IAAI0X,yDAAyD,GAAG,UAAUnF,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB4G,CAAhB;AAyBxF,CAzBL;;AA0BA,OAAO,IAAI2E,6DAA6D,GAAG,UAAUpF,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIoF,kEAAkE,CAACrF,MAAD,EAAS3U,OAAT,CAAtE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPsF,MAAM,EAAE1Y;UAFD,CAAX;UAIAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAAC6X,MAAT,GAAkBjc,cAAc,CAACuY,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAjBR;IAmBH,CApBiB,CAAlB;EAqBH,CAvBuH,CAAhB;AAuBnG,CAvBE;;AAwBP,IAAI4X,kEAAkE,GAAG,UAAUrF,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBqH,CAAhB;AAyBjG,CAzBL;;AA0BA,OAAO,IAAI8E,yCAAyC,GAAG,UAAUvF,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuF,8CAA8C,CAACxF,MAAD,EAAS3U,OAAT,CAAlD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPyF,MAAM,EAAE7Y,SAFD;YAGP8Y,KAAK,EAAE9Y;UAHA,CAAX;UAKAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC+D,iBAAL,KAA2B,EAA/B,EAAmC;YAC/BlY,QAAQ,CAACgY,MAAT,GAAkB,EAAlB;UACH;;UACD,IAAI7D,IAAI,CAAC,mBAAD,CAAJ,KAA8BhV,SAA9B,IAA2CgV,IAAI,CAAC,mBAAD,CAAJ,CAA0B,OAA1B,MAAuChV,SAAtF,EAAiG;YAC7Fa,QAAQ,CAACgY,MAAT,GAAkBG,4BAA4B,CAACjc,sBAAsB,CAACiY,IAAI,CAAC,mBAAD,CAAJ,CAA0B,OAA1B,CAAD,CAAvB,EAA6DvW,OAA7D,CAA9C;UACH;;UACD,IAAIuW,IAAI,CAAC,OAAD,CAAJ,KAAkBhV,SAAtB,EAAiC;YAC7Ba,QAAQ,CAACiY,KAAT,GAAiBG,2BAA2B,CAACjE,IAAI,CAAC,OAAD,CAAL,EAAgBvW,OAAhB,CAA5C;UACH;;UACD,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA9BmG,CAAhB;AA8B/E,CA9BE;;AA+BP,IAAI+X,8CAA8C,GAAG,UAAUxF,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBiG,CAAhB;AAyB7E,CAzBL;;AA0BA,OAAO,IAAIqF,4DAA4D,GAAG,UAAU9F,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI8F,iEAAiE,CAAC/F,MAAD,EAAS3U,OAAT,CAArE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP5G,sBAAsB,EAAExM;UAFjB,CAAX;UAIAtB,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAAC2L,sBAAT,GAAkC4M,4CAA4C,CAACpE,IAAD,EAAOvW,OAAP,CAA9E;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApBsH,CAAhB;AAoBlG,CApBE;;AAqBP,IAAIsY,iEAAiE,GAAG,UAAU/F,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBoH,CAAhB;AAyBhG,CAzBL;;AA0BA,OAAO,IAAIwF,0CAA0C,GAAG,UAAUjG,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIiG,+CAA+C,CAAClG,MAAD,EAAS3U,OAAT,CAAnD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPmG,SAAS,EAAEvZ;UAFJ,CAAX;UAIAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAACwE,QAAL,KAAkB,EAAtB,EAA0B;YACtB3Y,QAAQ,CAAC0Y,SAAT,GAAqB,EAArB;UACH;;UACD,IAAIvE,IAAI,CAAC,UAAD,CAAJ,KAAqBhV,SAAzB,EAAoC;YAChCa,QAAQ,CAAC0Y,SAAT,GAAqBE,+BAA+B,CAAC1c,sBAAsB,CAACiY,IAAI,CAAC,UAAD,CAAL,CAAvB,EAA2CvW,OAA3C,CAApD;UACH;;UACD,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MApBR;IAsBH,CAvBiB,CAAlB;EAwBH,CA1BoG,CAAhB;AA0BhF,CA1BE;;AA2BP,IAAIyY,+CAA+C,GAAG,UAAUlG,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBkG,CAAhB;AAyB9E,CAzBL;;AA0BA,OAAO,IAAI6F,gDAAgD,GAAG,UAAUtG,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIsG,qDAAqD,CAACvG,MAAD,EAAS3U,OAAT,CAAzD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPtG,iCAAiC,EAAE9M;UAF5B,CAAX;UAIAtB,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAACiM,iCAAT,GAA6C8M,uDAAuD,CAAC5E,IAAD,EAAOvW,OAAP,CAApG;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApB0G,CAAhB;AAoBtF,CApBE;;AAqBP,IAAI8Y,qDAAqD,GAAG,UAAUvG,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBwG,CAAhB;AAyBpF,CAzBL;;AA0BA,OAAO,IAAIgG,qEAAqE,GAAG,UAAUzG,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjK,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyG,0EAA0E,CAAC1G,MAAD,EAAS3U,OAAT,CAA9E,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPnG,+BAA+B,EAAEjN;UAF1B,CAAX;UAIAtB,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAACoM,+BAAT,GAA2C8M,qDAAqD,CAAC/E,IAAD,EAAOvW,OAAP,CAAhG;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApB+H,CAAhB;AAoB3G,CApBE;;AAqBP,IAAIiZ,0EAA0E,GAAG,UAAU1G,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/J,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB6H,CAAhB;AAyBzG,CAzBL;;AA0BA,OAAO,IAAImG,4DAA4D,GAAG,UAAU5G,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI4G,iEAAiE,CAAC7G,MAAD,EAAS3U,OAAT,CAArE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPhG,sBAAsB,EAAEpN;UAFjB,CAAX;UAIAtB,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAACuM,sBAAT,GAAkC8M,4CAA4C,CAAClF,IAAD,EAAOvW,OAAP,CAA9E;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApBsH,CAAhB;AAoBlG,CApBE;;AAqBP,IAAIoZ,iEAAiE,GAAG,UAAU7G,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBoH,CAAhB;AAyBhG,CAzBL;;AA0BA,OAAO,IAAIsG,4DAA4D,GAAG,UAAU/G,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+G,iEAAiE,CAAChH,MAAD,EAAS3U,OAAT,CAArE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPiH,KAAK,EAAEra;UAFA,CAAX;UAIAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAACsF,IAAL,KAAc,EAAlB,EAAsB;YAClBzZ,QAAQ,CAACwZ,KAAT,GAAiB,EAAjB;UACH;;UACD,IAAIrF,IAAI,CAAC,MAAD,CAAJ,KAAiBhV,SAArB,EAAgC;YAC5Ba,QAAQ,CAACwZ,KAAT,GAAiBE,oCAAoC,CAACxd,sBAAsB,CAACiY,IAAI,CAAC,MAAD,CAAL,CAAvB,EAAuCvW,OAAvC,CAArD;UACH;;UACD,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MApBR;IAsBH,CAvBiB,CAAlB;EAwBH,CA1BsH,CAAhB;AA0BlG,CA1BE;;AA2BP,IAAIuZ,iEAAiE,GAAG,UAAUhH,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBoH,CAAhB;AAyBhG,CAzBL;;AA0BA,OAAO,IAAI2G,8CAA8C,GAAG,UAAUpH,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIoH,mDAAmD,CAACrH,MAAD,EAAS3U,OAAT,CAAvD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPsH,kBAAkB,EAAE1a;UAFb,CAAX;UAIAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,oBAAD,CAAJ,KAA+BhV,SAAnC,EAA8C;YAC1Ca,QAAQ,CAAC6Z,kBAAT,GAA8Bje,cAAc,CAACuY,IAAI,CAAC,oBAAD,CAAL,CAA5C;UACH;;UACD,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAjBR;IAmBH,CApBiB,CAAlB;EAqBH,CAvBwG,CAAhB;AAuBpF,CAvBE;;AAwBP,IAAI4Z,mDAAmD,GAAG,UAAUrH,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBsG,CAAhB;AAyBlF,CAzBL;;AA0BA,OAAO,IAAI8G,6CAA6C,GAAG,UAAUvH,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuH,kDAAkD,CAACxH,MAAD,EAAS3U,OAAT,CAAtD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPyH,cAAc,EAAE7a;UAFT,CAAX;UAIAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,gBAAD,CAAJ,KAA2BhV,SAA/B,EAA0C;YACtCa,QAAQ,CAACga,cAAT,GAA0BC,oCAAoC,CAAC9F,IAAI,CAAC,gBAAD,CAAL,EAAyBvW,OAAzB,CAA9D;UACH;;UACD,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAjBR;IAmBH,CApBiB,CAAlB;EAqBH,CAvBuG,CAAhB;AAuBnF,CAvBE;;AAwBP,IAAI+Z,kDAAkD,GAAG,UAAUxH,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBqG,CAAhB;AAyBjF,CAzBL;;AA0BA,OAAO,IAAIkH,0DAA0D,GAAG,UAAU3H,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2H,+DAA+D,CAAC5H,MAAD,EAAS3U,OAAT,CAAnE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPvF,oBAAoB,EAAE7N;UAFf,CAAX;UAIAtB,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAACgN,oBAAT,GAAgCoN,0CAA0C,CAACjG,IAAD,EAAOvW,OAAP,CAA1E;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApBoH,CAAhB;AAoBhG,CApBE;;AAqBP,IAAIma,+DAA+D,GAAG,UAAU5H,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBkH,CAAhB;AAyB9F,CAzBL;;AA0BA,OAAO,IAAIqH,+DAA+D,GAAG,UAAU9H,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3J,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI8H,oEAAoE,CAAC/H,MAAD,EAAS3U,OAAT,CAAxE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPgI,wBAAwB,EAAEpb,SAFnB;YAGPqb,4BAA4B,EAAErb,SAHvB;YAIPsb,mBAAmB,EAAEtb,SAJd;YAKPub,mBAAmB,EAAEvb;UALd,CAAX;UAOAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,0BAAD,CAAJ,KAAqChV,SAAzC,EAAoD;YAChDa,QAAQ,CAACua,wBAAT,GAAoCI,8CAA8C,CAACxG,IAAI,CAAC,0BAAD,CAAL,EAAmCvW,OAAnC,CAAlF;UACH;;UACD,IAAIuW,IAAI,CAACyG,0BAAL,KAAoC,EAAxC,EAA4C;YACxC5a,QAAQ,CAACwa,4BAAT,GAAwC,EAAxC;UACH;;UACD,IAAIrG,IAAI,CAAC,4BAAD,CAAJ,KAAuChV,SAA3C,EAAsD;YAClDa,QAAQ,CAACwa,4BAAT,GAAwCK,qDAAqD,CAAC3e,sBAAsB,CAACiY,IAAI,CAAC,4BAAD,CAAL,CAAvB,EAA6DvW,OAA7D,CAA7F;UACH;;UACD,IAAIuW,IAAI,CAAC2G,kBAAL,KAA4B,EAAhC,EAAoC;YAChC9a,QAAQ,CAACya,mBAAT,GAA+B,EAA/B;UACH;;UACD,IAAItG,IAAI,CAAC,oBAAD,CAAJ,KAA+BhV,SAAnC,EAA8C;YAC1Ca,QAAQ,CAACya,mBAAT,GAA+BM,4CAA4C,CAAC7e,sBAAsB,CAACiY,IAAI,CAAC,oBAAD,CAAL,CAAvB,EAAqDvW,OAArD,CAA3E;UACH;;UACD,IAAIuW,IAAI,CAAC6G,kBAAL,KAA4B,EAAhC,EAAoC;YAChChb,QAAQ,CAAC0a,mBAAT,GAA+B,EAA/B;UACH;;UACD,IAAIvG,IAAI,CAAC,oBAAD,CAAJ,KAA+BhV,SAAnC,EAA8C;YAC1Ca,QAAQ,CAAC0a,mBAAT,GAA+BO,4CAA4C,CAAC/e,sBAAsB,CAACiY,IAAI,CAAC,oBAAD,CAAL,CAAvB,EAAqDvW,OAArD,CAA3E;UACH;;UACD,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAtCR;IAwCH,CAzCiB,CAAlB;EA0CH,CA5CyH,CAAhB;AA4CrG,CA5CE;;AA6CP,IAAIsa,oEAAoE,GAAG,UAAU/H,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBuH,CAAhB;AAyBnG,CAzBL;;AA0BA,OAAO,IAAIkI,uDAAuD,GAAG,UAAU3I,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2I,4DAA4D,CAAC5I,MAAD,EAAS3U,OAAT,CAAhE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPhF,iBAAiB,EAAEpO;UAFZ,CAAX;UAIAtB,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAACuN,iBAAT,GAA6B6N,uCAAuC,CAACjH,IAAD,EAAOvW,OAAP,CAApE;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApBiH,CAAhB;AAoB7F,CApBE;;AAqBP,IAAImb,4DAA4D,GAAG,UAAU5I,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB+G,CAAhB;AAyB3F,CAzBL;;AA0BA,OAAO,IAAIqI,4CAA4C,GAAG,UAAU9I,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAIiF,QAAJ,EAAcmU,IAAd;IACA,OAAOnZ,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI8I,iDAAiD,CAAC/I,MAAD,EAAS3U,OAAT,CAArD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP5E,MAAM,EAAExO;UAFD,CAAX;UAIA,OAAO,CAAC,CAAD,EAAIoc,iBAAiB,CAAChJ,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAArB,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAACc,IAAH,EAAP;UACAqB,QAAQ,CAAC2N,MAAT,GAAkB/R,cAAc,CAACuY,IAAD,CAAhC;UACA,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAbR;IAeH,CAhBiB,CAAlB;EAiBH,CAnBsG,CAAhB;AAmBlF,CAnBE;;AAoBP,IAAIsb,iDAAiD,GAAG,UAAU/I,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBoG,CAAhB;AAyBhF,CAzBL;;AA0BA,OAAO,IAAIwI,kDAAkD,GAAG,UAAUjJ,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIiJ,uDAAuD,CAAClJ,MAAD,EAAS3U,OAAT,CAA3D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPmJ,YAAY,EAAEvc;UAFP,CAAX;UAIAtB,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAAC0b,YAAT,GAAwBC,kCAAkC,CAACxH,IAAD,EAAOvW,OAAP,CAA1D;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApB4G,CAAhB;AAoBxF,CApBE;;AAqBP,IAAIyb,uDAAuD,GAAG,UAAUlJ,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB0G,CAAhB;AAyBtF,CAzBL;;AA0BA,OAAO,IAAI4I,iDAAiD,GAAG,UAAUrJ,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqJ,sDAAsD,CAACtJ,MAAD,EAAS3U,OAAT,CAA1D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPzE,wBAAwB,EAAE3O;UAFnB,CAAX;UAIAtB,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAAC8N,wBAAT,GAAoCgO,8CAA8C,CAAC3H,IAAD,EAAOvW,OAAP,CAAlF;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApB2G,CAAhB;AAoBvF,CApBE;;AAqBP,IAAI6b,sDAAsD,GAAG,UAAUtJ,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzByG,CAAhB;AAyBrF,CAzBL;;AA0BA,OAAO,IAAI+I,oDAAoD,GAAG,UAAUxJ,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIwJ,yDAAyD,CAACzJ,MAAD,EAAS3U,OAAT,CAA7D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP0J,KAAK,EAAE9c;UAFA,CAAX;UAIAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,OAAD,CAAJ,KAAkBhV,SAAtB,EAAiC;YAC7Ba,QAAQ,CAACic,KAAT,GAAiBrgB,cAAc,CAACuY,IAAI,CAAC,OAAD,CAAL,CAA/B;UACH;;UACD,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAjBR;IAmBH,CApBiB,CAAlB;EAqBH,CAvB8G,CAAhB;AAuB1F,CAvBE;;AAwBP,IAAIgc,yDAAyD,GAAG,UAAUzJ,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB4G,CAAhB;AAyBxF,CAzBL;;AA0BA,OAAO,IAAIkJ,6CAA6C,GAAG,UAAU3J,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2J,kDAAkD,CAAC5J,MAAD,EAAS3U,OAAT,CAAtD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP6J,MAAM,EAAEjd;UAFD,CAAX;UAIAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAACiI,MAAL,KAAgB,EAApB,EAAwB;YACpBpc,QAAQ,CAACoc,MAAT,GAAkB,EAAlB;UACH;;UACD,IAAIjI,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAnB,IAAgCgV,IAAI,CAAC,QAAD,CAAJ,CAAe,KAAf,MAA0BhV,SAA9D,EAAyE;YACrEa,QAAQ,CAACoc,MAAT,GAAkBC,4BAA4B,CAACngB,sBAAsB,CAACiY,IAAI,CAAC,QAAD,CAAJ,CAAe,KAAf,CAAD,CAAvB,EAAgDvW,OAAhD,CAA9C;UACH;;UACD,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MApBR;IAsBH,CAvBiB,CAAlB;EAwBH,CA1BuG,CAAhB;AA0BnF,CA1BE;;AA2BP,IAAImc,kDAAkD,GAAG,UAAU5J,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBqG,CAAhB;AAyBjF,CAzBL;;AA0BA,OAAO,IAAIsJ,gDAAgD,GAAG,UAAU/J,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+J,qDAAqD,CAAChK,MAAD,EAAS3U,OAAT,CAAzD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPiK,SAAS,EAAErd,SAFJ;YAGP0Y,MAAM,EAAE1Y;UAHD,CAAX;UAKAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,WAAD,CAAJ,KAAsBhV,SAA1B,EAAqC;YACjCa,QAAQ,CAACwc,SAAT,GAAqB5gB,cAAc,CAACuY,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAAC6X,MAAT,GAAkBjc,cAAc,CAACuY,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MArBR;IAuBH,CAxBiB,CAAlB;EAyBH,CA3B0G,CAAhB;AA2BtF,CA3BE;;AA4BP,IAAIuc,qDAAqD,GAAG,UAAUhK,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBwG,CAAhB;AAyBpF,CAzBL;;AA0BA,OAAO,IAAIyJ,6CAA6C,GAAG,UAAUlK,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIkK,kDAAkD,CAACnK,MAAD,EAAS3U,OAAT,CAAtD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPoK,aAAa,EAAExd,SAFR;YAGPyd,aAAa,EAAEzd,SAHR;YAIP0d,qBAAqB,EAAE1d,SAJhB;YAKP2d,YAAY,EAAE3d;UALP,CAAX;UAOAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,eAAD,CAAJ,KAA0BhV,SAA9B,EAAyC;YACrCa,QAAQ,CAAC2c,aAAT,GAAyBI,mCAAmC,CAAC5I,IAAI,CAAC,eAAD,CAAL,EAAwBvW,OAAxB,CAA5D;UACH;;UACD,IAAIuW,IAAI,CAAC,eAAD,CAAJ,KAA0BhV,SAA9B,EAAyC;YACrCa,QAAQ,CAAC4c,aAAT,GAAyBI,mCAAmC,CAAC7I,IAAI,CAAC,eAAD,CAAL,EAAwBvW,OAAxB,CAA5D;UACH;;UACD,IAAIuW,IAAI,CAAC,uBAAD,CAAJ,KAAkChV,SAAtC,EAAiD;YAC7Ca,QAAQ,CAAC6c,qBAAT,GAAiCI,2CAA2C,CAAC9I,IAAI,CAAC,uBAAD,CAAL,EAAgCvW,OAAhC,CAA5E;UACH;;UACD,IAAIuW,IAAI,CAAC2I,YAAL,KAAsB,EAA1B,EAA8B;YAC1B9c,QAAQ,CAAC8c,YAAT,GAAwB,EAAxB;UACH;;UACD,IAAI3I,IAAI,CAAC,cAAD,CAAJ,KAAyBhV,SAAzB,IAAsCgV,IAAI,CAAC,cAAD,CAAJ,CAAqB,aAArB,MAAwChV,SAAlF,EAA6F;YACzFa,QAAQ,CAAC8c,YAAT,GAAwBI,kCAAkC,CAAChhB,sBAAsB,CAACiY,IAAI,CAAC,cAAD,CAAJ,CAAqB,aAArB,CAAD,CAAvB,EAA8DvW,OAA9D,CAA1D;UACH;;UACD,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAhCR;IAkCH,CAnCiB,CAAlB;EAoCH,CAtCuG,CAAhB;AAsCnF,CAtCE;;AAuCP,IAAI0c,kDAAkD,GAAG,UAAUnK,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBqG,CAAhB;AAyBjF,CAzBL;;AA0BA,OAAO,IAAImK,sCAAsC,GAAG,UAAU5K,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAIiF,QAAJ,EAAcmU,IAAd;IACA,OAAOnZ,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,IAAI0U,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;QACvD,OAAO,CAAC,CAAD,EAAI4K,2CAA2C,CAAC7K,MAAD,EAAS3U,OAAT,CAA/C,CAAP;MACH;;MACDoC,QAAQ,GAAG;QACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;QAEPd,YAAY,EAAEtS,SAFP;QAGP0P,IAAI,EAAE1P,SAHC;QAIP+C,gBAAgB,EAAE/C,SAJX;QAKPqB,YAAY,EAAErB,SALP;QAMPsB,kBAAkB,EAAEtB,SANb;QAOPuB,eAAe,EAAEvB,SAPV;QAQPwB,eAAe,EAAExB,SARV;QASPyP,aAAa,EAAEzP,SATR;QAUPuS,YAAY,EAAEvS,SAVP;QAWPyB,WAAW,EAAEzB,SAXN;QAYPwS,YAAY,EAAExS,SAZP;QAaPyS,IAAI,EAAEzS,SAbC;QAcP0S,UAAU,EAAE1S,SAdL;QAeP+B,OAAO,EAAE/B,SAfF;QAgBP2S,YAAY,EAAE3S,SAhBP;QAiBPyD,QAAQ,EAAEzD,SAjBH;QAkBP4S,WAAW,EAAE5S,SAlBN;QAmBPuD,yBAAyB,EAAEvD,SAnBpB;QAoBPoD,cAAc,EAAEpD,SApBT;QAqBPqD,yBAAyB,EAAErD,SArBpB;QAsBP6S,UAAU,EAAE7S,SAtBL;QAuBP8S,iBAAiB,EAAE9S,SAvBZ;QAwBP+S,cAAc,EAAE/S,SAxBT;QAyBPgT,OAAO,EAAEhT,SAzBF;QA0BP0C,oBAAoB,EAAE1C,SA1Bf;QA2BP4C,iBAAiB,EAAE5C,SA3BZ;QA4BP6C,WAAW,EAAE7C,SA5BN;QA6BPuC,oBAAoB,EAAEvC,SA7Bf;QA8BPwC,YAAY,EAAExC,SA9BP;QA+BPiT,QAAQ,EAAEjT,SA/BH;QAgCPqG,SAAS,EAAErG,SAhCJ;QAiCPyC,uBAAuB,EAAEzC;MAjClB,CAAX;;MAmCA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,qBAAf,MAA0CgB,SAA9C,EAAyD;QACrDa,QAAQ,CAAC2R,YAAT,GAAwBrV,cAAc,CAACiW,MAAM,CAACpU,OAAP,CAAe,qBAAf,CAAD,CAAtC;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,eAAf,MAAoCgB,SAAxC,EAAmD;QAC/Ca,QAAQ,CAACyR,YAAT,GAAwBc,MAAM,CAACpU,OAAP,CAAe,eAAf,CAAxB;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;QAClDa,QAAQ,CAAC6R,UAAT,GAAsBU,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAAtB;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,eAAf,MAAoCgB,SAAxC,EAAmD;QAC/Ca,QAAQ,CAACmS,OAAT,GAAmBI,MAAM,CAACpU,OAAP,CAAe,eAAf,CAAnB;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,eAAf,MAAoCgB,SAAxC,EAAmD;QAC/Ca,QAAQ,CAAC8R,YAAT,GAAwBtW,eAAe,CAACkB,sBAAsB,CAAC6V,MAAM,CAACpU,OAAP,CAAe,eAAf,CAAD,CAAvB,CAAvC;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,gBAAf,MAAqCgB,SAAzC,EAAoD;QAChDa,QAAQ,CAAC4O,aAAT,GAAyB9R,iBAAiB,CAACyV,MAAM,CAACpU,OAAP,CAAe,gBAAf,CAAD,CAA1C;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,MAAf,MAA2BgB,SAA/B,EAA0C;QACtCa,QAAQ,CAAC4R,IAAT,GAAgBW,MAAM,CAACpU,OAAP,CAAe,MAAf,CAAhB;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,oBAAf,MAAyCgB,SAA7C,EAAwD;QACpDa,QAAQ,CAAC+R,WAAT,GAAuBnV,kBAAkB,CAAC2V,MAAM,CAACpU,OAAP,CAAe,oBAAf,CAAD,CAAzC;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;QAClDa,QAAQ,CAACwF,SAAT,GAAqB+M,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAArB;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,eAAf,MAAoCgB,SAAxC,EAAmD;QAC/Ca,QAAQ,CAACQ,YAAT,GAAwB+R,MAAM,CAACpU,OAAP,CAAe,eAAf,CAAxB;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,qBAAf,MAA0CgB,SAA9C,EAAyD;QACrDa,QAAQ,CAACS,kBAAT,GAA8B8R,MAAM,CAACpU,OAAP,CAAe,qBAAf,CAA9B;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;QAClDa,QAAQ,CAACU,eAAT,GAA2B6R,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAA3B;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;QAClDa,QAAQ,CAACW,eAAT,GAA2B4R,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAA3B;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,eAAf,MAAoCgB,SAAxC,EAAmD;QAC/Ca,QAAQ,CAAC0R,YAAT,GAAwBa,MAAM,CAACpU,OAAP,CAAe,eAAf,CAAxB;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,cAAf,MAAmCgB,SAAvC,EAAkD;QAC9Ca,QAAQ,CAACY,WAAT,GAAuB2R,MAAM,CAACpU,OAAP,CAAe,cAAf,CAAvB;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,SAAf,MAA8BgB,SAAlC,EAA6C;QACzCa,QAAQ,CAACkB,OAAT,GAAmB1F,eAAe,CAACkB,sBAAsB,CAAC6V,MAAM,CAACpU,OAAP,CAAe,SAAf,CAAD,CAAvB,CAAlC;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iCAAf,MAAsDgB,SAA1D,EAAqE;QACjEa,QAAQ,CAAC4B,uBAAT,GAAmC2Q,MAAM,CAACpU,OAAP,CAAe,iCAAf,CAAnC;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,8BAAf,MAAmDgB,SAAvD,EAAkE;QAC9Da,QAAQ,CAAC0B,oBAAT,GAAgC6Q,MAAM,CAACpU,OAAP,CAAe,8BAAf,CAAhC;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;QACjFa,QAAQ,CAAC6B,oBAAT,GAAgC0Q,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAhC;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,+CAAf,MAAoEgB,SAAxE,EAAmF;QAC/Ea,QAAQ,CAAC+B,iBAAT,GAA6BwQ,MAAM,CAACpU,OAAP,CAAe,+CAAf,CAA7B;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,6CAAf,MAAkEgB,SAAtE,EAAiF;QAC7Ea,QAAQ,CAACgC,WAAT,GAAuBuQ,MAAM,CAACpU,OAAP,CAAe,6CAAf,CAAvB;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;QACjFa,QAAQ,CAACkC,gBAAT,GAA4B5F,cAAc,CAACiW,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAD,CAA1C;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,qBAAf,MAA0CgB,SAA9C,EAAyD;QACrDa,QAAQ,CAAC2B,YAAT,GAAwB4Q,MAAM,CAACpU,OAAP,CAAe,qBAAf,CAAxB;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;QACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,0BAAf,MAA+CgB,SAAnD,EAA8D;QAC1Da,QAAQ,CAACiS,iBAAT,GAA6BM,MAAM,CAACpU,OAAP,CAAe,0BAAf,CAA7B;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,sBAAf,MAA2CgB,SAA/C,EAA0D;QACtDa,QAAQ,CAACgS,UAAT,GAAsBpV,kBAAkB,CAAC2V,MAAM,CAACpU,OAAP,CAAe,sBAAf,CAAD,CAAxC;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,qBAAf,MAA0CgB,SAA9C,EAAyD;QACrDa,QAAQ,CAACoS,QAAT,GAAoBxV,kBAAkB,CAAC2V,MAAM,CAACpU,OAAP,CAAe,qBAAf,CAAD,CAAtC;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,wBAAf,MAA6CgB,SAAjD,EAA4D;QACxDa,QAAQ,CAACuC,cAAT,GAA0BgQ,MAAM,CAACpU,OAAP,CAAe,wBAAf,CAA1B;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,qCAAf,MAA0DgB,SAA9D,EAAyE;QACrEa,QAAQ,CAACwC,yBAAT,GAAqChH,eAAe,CAACgB,sBAAsB,CAAC+V,MAAM,CAACpU,OAAP,CAAe,qCAAf,CAAD,CAAvB,CAApD;MACH;;MACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,8BAAf,MAAmDgB,SAAvD,EAAkE;QAC9Da,QAAQ,CAAC0C,yBAAT,GAAqC6P,MAAM,CAACpU,OAAP,CAAe,8BAAf,CAArC;MACH;;MACD0E,MAAM,CAACC,IAAP,CAAYyP,MAAM,CAACpU,OAAnB,EAA4Bkf,OAA5B,CAAoC,UAAUC,MAAV,EAAkB;QAClD,IAAItd,QAAQ,CAAC4C,QAAT,KAAsBzD,SAA1B,EAAqC;UACjCa,QAAQ,CAAC4C,QAAT,GAAoB,EAApB;QACH;;QACD,IAAI0a,MAAM,CAACC,UAAP,CAAkB,aAAlB,CAAJ,EAAsC;UAClCvd,QAAQ,CAAC4C,QAAT,CAAkB0a,MAAM,CAACE,SAAP,CAAiB,EAAjB,CAAlB,IAA0CjL,MAAM,CAACpU,OAAP,CAAemf,MAAf,CAA1C;QACH;MACJ,CAPD;MAQAnJ,IAAI,GAAG5B,MAAM,CAAChU,IAAd;MACAyB,QAAQ,CAAC6O,IAAT,GAAgBsF,IAAhB;MACA,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;IACH,CA5IiB,CAAlB;EA6IH,CA/IgG,CAAhB;AA+I5E,CA/IE;;AAgJP,IAAIod,2CAA2C,GAAG,UAAU7K,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2ClV,EAA3C,EAA+CS,EAA/C,EAAmD4U,EAAnD,EAAuDF,UAAvD,EAAmEC,OAAnE;;IACA,IAAIE,EAAJ;;IACA,OAAOrY,WAAW,CAAC,IAAD,EAAO,UAAU8Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrW,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAc,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIC,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEH,EAAE,CAAC9U,IAAH,GAAUuW,EAAE,CAACnW,IAAH,EAAV,EAAqB0U,EAAvB,EAAV,CAAvB,CAAf;UACAJ,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;UACAR,EAAE,GAAGkV,SAAL;;UACA,QAAQlV,EAAR;YACI,KAAK,oBAAL;cAA2B,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAC3B,KAAK,qCAAL;cAA4C,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAC5C,KAAK,WAAL;cAAkB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAClB,KAAK,4BAAL;cAAmC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAJvC;;UAMA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIS,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC,CAAD,EAAIif,gDAAgD,CAAC1K,YAAD,EAAenV,OAAf,CAApD,CAAP;;QACJ,KAAK,CAAL;UACIoV,QAAQ,GAAGlY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB/U,EAAE,CAACgV,MAAH,CAAU,CAAEsB,EAAE,CAACnW,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgV,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIa,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC,CAAD,EAAIsK,uCAAuC,CAAC3K,YAAD,EAAenV,OAAf,CAA3C,CAAP;;QACJ,KAAK,CAAL;UACIoV,QAAQ,GAAGlY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuBH,EAAE,CAACI,MAAH,CAAU,CAAEsB,EAAE,CAACnW,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgV,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIW,UAAU,GAAGH,YAAY,CAACxU,IAA1B;UACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAxI,CAA3B,CAAnB;UACAuC,EAAE,CAACrW,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACI0U,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAtCR;IAwCH,CAzCiB,CAAlB;EA0CH,CA7C8F,CAAhB;AA6C1E,CA7CL;;AA8CA,OAAO,IAAI2K,yCAAyC,GAAG,UAAUpL,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIoL,8CAA8C,CAACrL,MAAD,EAAS3U,OAAT,CAAlD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPyF,MAAM,EAAE7Y,SAFD;YAGP8Y,KAAK,EAAE9Y,SAHA;YAIP+S,cAAc,EAAE/S;UAJT,CAAX;;UAMA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC+D,iBAAL,KAA2B,EAA/B,EAAmC;YAC/BlY,QAAQ,CAACgY,MAAT,GAAkB,EAAlB;UACH;;UACD,IAAI7D,IAAI,CAAC,mBAAD,CAAJ,KAA8BhV,SAA9B,IAA2CgV,IAAI,CAAC,mBAAD,CAAJ,CAA0B,OAA1B,MAAuChV,SAAtF,EAAiG;YAC7Fa,QAAQ,CAACgY,MAAT,GAAkBG,4BAA4B,CAACjc,sBAAsB,CAACiY,IAAI,CAAC,mBAAD,CAAJ,CAA0B,OAA1B,CAAD,CAAvB,EAA6DvW,OAA7D,CAA9C;UACH;;UACD,IAAIuW,IAAI,CAAC,OAAD,CAAJ,KAAkBhV,SAAtB,EAAiC;YAC7Ba,QAAQ,CAACiY,KAAT,GAAiBG,2BAA2B,CAACjE,IAAI,CAAC,OAAD,CAAL,EAAgBvW,OAAhB,CAA5C;UACH;;UACD,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MA5BR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCmG,CAAhB;AAkC/E,CAlCE;;AAmCP,IAAI4d,8CAA8C,GAAG,UAAUrL,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2ClV,EAA3C,EAA+CS,EAA/C,EAAmD0U,UAAnD,EAA+DC,OAA/D;;IACA,IAAIC,EAAJ;;IACA,OAAOpY,WAAW,CAAC,IAAD,EAAO,UAAUqY,EAAV,EAAc;MACnC,QAAQA,EAAE,CAAC5U,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAa,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIE,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEJ,EAAE,CAAC7U,IAAH,GAAU8U,EAAE,CAAC1U,IAAH,EAAV,EAAqByU,EAAvB,EAAV,CAAvB,CAAf;UACAH,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;UACAR,EAAE,GAAGkV,SAAL;;UACA,QAAQlV,EAAR;YACI,KAAK,WAAL;cAAkB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAClB,KAAK,4BAAL;cAAmC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAFvC;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIS,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC,CAAD,EAAIkf,uCAAuC,CAAC3K,YAAD,EAAenV,OAAf,CAA3C,CAAP;;QACJ,KAAK,CAAL;UACIoV,QAAQ,GAAGlY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB/U,EAAE,CAACgV,MAAH,CAAU,CAAEH,EAAE,CAAC1U,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgV,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIW,UAAU,GAAGH,YAAY,CAACxU,IAA1B;UACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAxI,CAA3B,CAAnB;UACAc,EAAE,CAAC5U,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACI0U,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MA9BR;IAgCH,CAjCiB,CAAlB;EAkCH,CArCiG,CAAhB;AAqC7E,CArCL;;AAsCA,OAAO,IAAI6K,+CAA+C,GAAG,UAAUtL,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIsL,oDAAoD,CAACvL,MAAD,EAAS3U,OAAT,CAAxD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPvD,SAAS,EAAE7P;UAFJ,CAAX;UAIAtB,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAACgP,SAAT,GAAqB+O,yCAAyC,CAAC5J,IAAD,EAAOvW,OAAP,CAA9D;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApByG,CAAhB;AAoBrF,CApBE;;AAqBP,IAAI8d,oDAAoD,GAAG,UAAUvL,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBuG,CAAhB;AAyBnF,CAzBL;;AA0BA,OAAO,IAAIgL,uDAAuD,GAAG,UAAUzL,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyL,4DAA4D,CAAC1L,MAAD,EAAS3U,OAAT,CAAhE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPpD,uBAAuB,EAAEhQ;UAFlB,CAAX;UAIAtB,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAACmP,uBAAT,GAAmC+O,6CAA6C,CAAC/J,IAAD,EAAOvW,OAAP,CAAhF;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApBiH,CAAhB;AAoB7F,CApBE;;AAqBP,IAAIie,4DAA4D,GAAG,UAAU1L,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB+G,CAAhB;AAyB3F,CAzBL;;AA0BA,OAAO,IAAImL,+CAA+C,GAAG,UAAU5L,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI4L,oDAAoD,CAAC7L,MAAD,EAAS3U,OAAT,CAAxD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPjD,SAAS,EAAEnQ;UAFJ,CAAX;UAIAtB,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAACsP,SAAT,GAAqB+O,yCAAyC,CAAClK,IAAD,EAAOvW,OAAP,CAA9D;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApByG,CAAhB;AAoBrF,CApBE;;AAqBP,IAAIoe,oDAAoD,GAAG,UAAU7L,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBuG,CAAhB;AAyBnF,CAzBL;;AA0BA,OAAO,IAAIsL,6CAA6C,GAAG,UAAU/L,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+L,kDAAkD,CAAChM,MAAD,EAAS3U,OAAT,CAAtD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP6J,MAAM,EAAEjd,SAFD;YAGPqG,SAAS,EAAErG;UAHJ,CAAX;;UAKA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAACwF,SAAT,GAAqB+M,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAArB;UACH;;UACDN,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAACiI,MAAL,KAAgB,EAApB,EAAwB;YACpBpc,QAAQ,CAACoc,MAAT,GAAkB,EAAlB;UACH;;UACD,IAAIjI,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAnB,IAAgCgV,IAAI,CAAC,QAAD,CAAJ,CAAe,KAAf,MAA0BhV,SAA9D,EAAyE;YACrEa,QAAQ,CAACoc,MAAT,GAAkBC,4BAA4B,CAACngB,sBAAsB,CAACiY,IAAI,CAAC,QAAD,CAAJ,CAAe,KAAf,CAAD,CAAvB,EAAgDvW,OAAhD,CAA9C;UACH;;UACD,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA9BuG,CAAhB;AA8BnF,CA9BE;;AA+BP,IAAIue,kDAAkD,GAAG,UAAUhM,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBqG,CAAhB;AAyBjF,CAzBL;;AA0BA,OAAO,IAAIwL,6CAA6C,GAAG,UAAUjM,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIiF,QAAJ,EAAcmU,IAAd;IACA,OAAOnZ,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,IAAI0U,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;QACvD,OAAO,CAAC,CAAD,EAAIiM,kDAAkD,CAAClM,MAAD,EAAS3U,OAAT,CAAtD,CAAP;MACH;;MACDoC,QAAQ,GAAG;QACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;QAEP1D,IAAI,EAAE1P,SAFC;QAGP+S,cAAc,EAAE/S;MAHT,CAAX;;MAKA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;QACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;MACH;;MACDgW,IAAI,GAAG5B,MAAM,CAAChU,IAAd;MACAyB,QAAQ,CAAC6O,IAAT,GAAgBsF,IAAhB;MACA,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;IACH,CAfiB,CAAlB;EAgBH,CAlBuG,CAAhB;AAkBnF,CAlBE;;AAmBP,IAAIye,kDAAkD,GAAG,UAAUlM,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBqG,CAAhB;AAyBjF,CAzBL;;AA0BA,OAAO,IAAI0L,iDAAiD,GAAG,UAAUnM,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAImM,sDAAsD,CAACpM,MAAD,EAAS3U,OAAT,CAA1D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP7C,8BAA8B,EAAEvQ;UAFzB,CAAX;UAIAtB,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAAC0P,8BAAT,GAA0CkP,oDAAoD,CAACzK,IAAD,EAAOvW,OAAP,CAA9F;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApB2G,CAAhB;AAoBvF,CApBE;;AAqBP,IAAI2e,sDAAsD,GAAG,UAAUpM,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzByG,CAAhB;AAyBrF,CAzBL;;AA0BA,OAAO,IAAI6L,uCAAuC,GAAG,UAAUtM,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIsM,4CAA4C,CAACvM,MAAD,EAAS3U,OAAT,CAAhD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBiG,CAAhB;AAiB7E,CAjBE;;AAkBP,IAAI8e,4CAA4C,GAAG,UAAUvM,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2ClV,EAA3C,EAA+CS,EAA/C,EAAmD0U,UAAnD,EAA+DC,OAA/D;;IACA,IAAIC,EAAJ;;IACA,OAAOpY,WAAW,CAAC,IAAD,EAAO,UAAUqY,EAAV,EAAc;MACnC,QAAQA,EAAE,CAAC5U,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAa,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIE,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEJ,EAAE,CAAC7U,IAAH,GAAU8U,EAAE,CAAC1U,IAAH,EAAV,EAAqByU,EAAvB,EAAV,CAAvB,CAAf;UACAH,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;UACAR,EAAE,GAAGkV,SAAL;;UACA,QAAQlV,EAAR;YACI,KAAK,UAAL;cAAiB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACjB,KAAK,2BAAL;cAAkC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAFtC;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIS,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC,CAAD,EAAIugB,sCAAsC,CAAChM,YAAD,EAAenV,OAAf,CAA1C,CAAP;;QACJ,KAAK,CAAL;UACIoV,QAAQ,GAAGlY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB/U,EAAE,CAACgV,MAAH,CAAU,CAAEH,EAAE,CAAC1U,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgV,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIW,UAAU,GAAGH,YAAY,CAACxU,IAA1B;UACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAxI,CAA3B,CAAnB;UACAc,EAAE,CAAC5U,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACI0U,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MA9BR;IAgCH,CAjCiB,CAAlB;EAkCH,CArC+F,CAAhB;AAqC3E,CArCL;;AAsCA,OAAO,IAAIgM,uCAAuC,GAAG,UAAUzM,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyM,4CAA4C,CAAC1M,MAAD,EAAS3U,OAAT,CAAhD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPd,YAAY,EAAEtS,SAFP;YAGP+f,aAAa,EAAE/f,SAHR;YAIP+C,gBAAgB,EAAE/C,SAJX;YAKPqB,YAAY,EAAErB,SALP;YAMPsB,kBAAkB,EAAEtB,SANb;YAOPuB,eAAe,EAAEvB,SAPV;YAQPwB,eAAe,EAAExB,SARV;YASPyP,aAAa,EAAEzP,SATR;YAUPyB,WAAW,EAAEzB,SAVN;YAWPwS,YAAY,EAAExS,SAXP;YAYPyS,IAAI,EAAEzS,SAZC;YAaP0S,UAAU,EAAE1S,SAbL;YAcP+B,OAAO,EAAE/B,SAdF;YAeP2S,YAAY,EAAE3S,SAfP;YAgBPyD,QAAQ,EAAEzD,SAhBH;YAiBP4S,WAAW,EAAE5S,SAjBN;YAkBPuD,yBAAyB,EAAEvD,SAlBpB;YAmBPoD,cAAc,EAAEpD,SAnBT;YAoBPqD,yBAAyB,EAAErD,SApBpB;YAqBP6S,UAAU,EAAE7S,SArBL;YAsBP8S,iBAAiB,EAAE9S,SAtBZ;YAuBP+S,cAAc,EAAE/S,SAvBT;YAwBPgT,OAAO,EAAEhT,SAxBF;YAyBP0C,oBAAoB,EAAE1C,SAzBf;YA0BP4C,iBAAiB,EAAE5C,SA1BZ;YA2BP6C,WAAW,EAAE7C,SA3BN;YA4BPuC,oBAAoB,EAAEvC,SA5Bf;YA6BPwC,YAAY,EAAExC,SA7BP;YA8BPqG,SAAS,EAAErG,SA9BJ;YA+BPyC,uBAAuB,EAAEzC;UA/BlB,CAAX;;UAiCA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,qBAAf,MAA0CgB,SAA9C,EAAyD;YACrDa,QAAQ,CAAC2R,YAAT,GAAwBrV,cAAc,CAACiW,MAAM,CAACpU,OAAP,CAAe,qBAAf,CAAD,CAAtC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,eAAf,MAAoCgB,SAAxC,EAAmD;YAC/Ca,QAAQ,CAACyR,YAAT,GAAwBc,MAAM,CAACpU,OAAP,CAAe,eAAf,CAAxB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAAC6R,UAAT,GAAsBU,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAAtB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,eAAf,MAAoCgB,SAAxC,EAAmD;YAC/Ca,QAAQ,CAACmS,OAAT,GAAmBI,MAAM,CAACpU,OAAP,CAAe,eAAf,CAAnB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,sBAAf,MAA2CgB,SAA/C,EAA0D;YACtDa,QAAQ,CAACkf,aAAT,GAAyB3M,MAAM,CAACpU,OAAP,CAAe,sBAAf,CAAzB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,eAAf,MAAoCgB,SAAxC,EAAmD;YAC/Ca,QAAQ,CAAC8R,YAAT,GAAwBtW,eAAe,CAACkB,sBAAsB,CAAC6V,MAAM,CAACpU,OAAP,CAAe,eAAf,CAAD,CAAvB,CAAvC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,gBAAf,MAAqCgB,SAAzC,EAAoD;YAChDa,QAAQ,CAAC4O,aAAT,GAAyB9R,iBAAiB,CAACyV,MAAM,CAACpU,OAAP,CAAe,gBAAf,CAAD,CAA1C;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,MAAf,MAA2BgB,SAA/B,EAA0C;YACtCa,QAAQ,CAAC4R,IAAT,GAAgBW,MAAM,CAACpU,OAAP,CAAe,MAAf,CAAhB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,oBAAf,MAAyCgB,SAA7C,EAAwD;YACpDa,QAAQ,CAAC+R,WAAT,GAAuBnV,kBAAkB,CAAC2V,MAAM,CAACpU,OAAP,CAAe,oBAAf,CAAD,CAAzC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAACwF,SAAT,GAAqB+M,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,eAAf,MAAoCgB,SAAxC,EAAmD;YAC/Ca,QAAQ,CAACQ,YAAT,GAAwB+R,MAAM,CAACpU,OAAP,CAAe,eAAf,CAAxB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,qBAAf,MAA0CgB,SAA9C,EAAyD;YACrDa,QAAQ,CAACS,kBAAT,GAA8B8R,MAAM,CAACpU,OAAP,CAAe,qBAAf,CAA9B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAACU,eAAT,GAA2B6R,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAA3B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAACW,eAAT,GAA2B4R,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAA3B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,cAAf,MAAmCgB,SAAvC,EAAkD;YAC9Ca,QAAQ,CAACY,WAAT,GAAuB2R,MAAM,CAACpU,OAAP,CAAe,cAAf,CAAvB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,SAAf,MAA8BgB,SAAlC,EAA6C;YACzCa,QAAQ,CAACkB,OAAT,GAAmB1F,eAAe,CAACkB,sBAAsB,CAAC6V,MAAM,CAACpU,OAAP,CAAe,SAAf,CAAD,CAAvB,CAAlC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iCAAf,MAAsDgB,SAA1D,EAAqE;YACjEa,QAAQ,CAAC4B,uBAAT,GAAmC2Q,MAAM,CAACpU,OAAP,CAAe,iCAAf,CAAnC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,8BAAf,MAAmDgB,SAAvD,EAAkE;YAC9Da,QAAQ,CAAC0B,oBAAT,GAAgC6Q,MAAM,CAACpU,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;YACjFa,QAAQ,CAAC6B,oBAAT,GAAgC0Q,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAhC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,+CAAf,MAAoEgB,SAAxE,EAAmF;YAC/Ea,QAAQ,CAAC+B,iBAAT,GAA6BwQ,MAAM,CAACpU,OAAP,CAAe,+CAAf,CAA7B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,6CAAf,MAAkEgB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACgC,WAAT,GAAuBuQ,MAAM,CAACpU,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;YACjFa,QAAQ,CAACkC,gBAAT,GAA4B5F,cAAc,CAACiW,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,qBAAf,MAA0CgB,SAA9C,EAAyD;YACrDa,QAAQ,CAAC2B,YAAT,GAAwB4Q,MAAM,CAACpU,OAAP,CAAe,qBAAf,CAAxB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,0BAAf,MAA+CgB,SAAnD,EAA8D;YAC1Da,QAAQ,CAACiS,iBAAT,GAA6BM,MAAM,CAACpU,OAAP,CAAe,0BAAf,CAA7B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,sBAAf,MAA2CgB,SAA/C,EAA0D;YACtDa,QAAQ,CAACgS,UAAT,GAAsBpV,kBAAkB,CAAC2V,MAAM,CAACpU,OAAP,CAAe,sBAAf,CAAD,CAAxC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,wBAAf,MAA6CgB,SAAjD,EAA4D;YACxDa,QAAQ,CAACuC,cAAT,GAA0BgQ,MAAM,CAACpU,OAAP,CAAe,wBAAf,CAA1B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,qCAAf,MAA0DgB,SAA9D,EAAyE;YACrEa,QAAQ,CAACwC,yBAAT,GAAqChH,eAAe,CAACgB,sBAAsB,CAAC+V,MAAM,CAACpU,OAAP,CAAe,qCAAf,CAAD,CAAvB,CAApD;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,8BAAf,MAAmDgB,SAAvD,EAAkE;YAC9Da,QAAQ,CAAC0C,yBAAT,GAAqC6P,MAAM,CAACpU,OAAP,CAAe,8BAAf,CAArC;UACH;;UACD0E,MAAM,CAACC,IAAP,CAAYyP,MAAM,CAACpU,OAAnB,EAA4Bkf,OAA5B,CAAoC,UAAUC,MAAV,EAAkB;YAClD,IAAItd,QAAQ,CAAC4C,QAAT,KAAsBzD,SAA1B,EAAqC;cACjCa,QAAQ,CAAC4C,QAAT,GAAoB,EAApB;YACH;;YACD,IAAI0a,MAAM,CAACC,UAAP,CAAkB,aAAlB,CAAJ,EAAsC;cAClCvd,QAAQ,CAAC4C,QAAT,CAAkB0a,MAAM,CAACE,SAAP,CAAiB,EAAjB,CAAlB,IAA0CjL,MAAM,CAACpU,OAAP,CAAemf,MAAf,CAA1C;YACH;UACJ,CAPD;UAQA,OAAO,CAAC,CAAD,EAAI1K,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAxIR;IA0IH,CA3IiB,CAAlB;EA4IH,CA9IiG,CAAhB;AA8I7E,CA9IE;;AA+IP,IAAIif,4CAA4C,GAAG,UAAU1M,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2ClV,EAA3C,EAA+CS,EAA/C,EAAmD0U,UAAnD,EAA+DC,OAA/D;;IACA,IAAIC,EAAJ;;IACA,OAAOpY,WAAW,CAAC,IAAD,EAAO,UAAUqY,EAAV,EAAc;MACnC,QAAQA,EAAE,CAAC5U,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAa,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIE,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEJ,EAAE,CAAC7U,IAAH,GAAU8U,EAAE,CAAC1U,IAAH,EAAV,EAAqByU,EAAvB,EAAV,CAAvB,CAAf;UACAH,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;UACAR,EAAE,GAAGkV,SAAL;;UACA,QAAQlV,EAAR;YACI,KAAK,UAAL;cAAiB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACjB,KAAK,2BAAL;cAAkC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAFtC;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIS,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC,CAAD,EAAIugB,sCAAsC,CAAChM,YAAD,EAAenV,OAAf,CAA1C,CAAP;;QACJ,KAAK,CAAL;UACIoV,QAAQ,GAAGlY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB/U,EAAE,CAACgV,MAAH,CAAU,CAAEH,EAAE,CAAC1U,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgV,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIW,UAAU,GAAGH,YAAY,CAACxU,IAA1B;UACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAxI,CAA3B,CAAnB;UACAc,EAAE,CAAC5U,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACI0U,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MA9BR;IAgCH,CAjCiB,CAAlB;EAkCH,CArC+F,CAAhB;AAqC3E,CArCL;;AAsCA,OAAO,IAAImM,8DAA8D,GAAG,UAAU5M,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1J,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI4M,mEAAmE,CAAC7M,MAAD,EAAS3U,OAAT,CAAvE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP8M,0BAA0B,EAAElgB,SAFrB;YAGPqK,iBAAiB,EAAErK,SAHZ;YAIPmgB,WAAW,EAAEngB,SAJN;YAKPogB,qBAAqB,EAAEpgB;UALhB,CAAX;UAOAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAACxI,sBAAL,KAAgC,EAApC,EAAwC;YACpC3L,QAAQ,CAACqf,0BAAT,GAAsC,EAAtC;UACH;;UACD,IAAIlL,IAAI,CAAC,wBAAD,CAAJ,KAAmChV,SAAvC,EAAkD;YAC9Ca,QAAQ,CAACqf,0BAAT,GAAsCG,gDAAgD,CAACtjB,sBAAsB,CAACiY,IAAI,CAAC,wBAAD,CAAL,CAAvB,EAAyDvW,OAAzD,CAAtF;UACH;;UACD,IAAIuW,IAAI,CAAC,mBAAD,CAAJ,KAA8BhV,SAAlC,EAA6C;YACzCa,QAAQ,CAACwJ,iBAAT,GAA6B5N,cAAc,CAACuY,IAAI,CAAC,mBAAD,CAAL,CAA3C;UACH;;UACD,IAAIA,IAAI,CAAC,aAAD,CAAJ,KAAwBhV,SAA5B,EAAuC;YACnCa,QAAQ,CAACsf,WAAT,GAAuBhjB,cAAc,CAAC6X,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,uBAAD,CAAJ,KAAkChV,SAAtC,EAAiD;YAC7Ca,QAAQ,CAACuf,qBAAT,GAAiC3jB,cAAc,CAACuY,IAAI,CAAC,uBAAD,CAAL,CAA/C;UACH;;UACD,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAhCR;IAkCH,CAnCiB,CAAlB;EAoCH,CAtCwH,CAAhB;AAsCpG,CAtCE;;AAuCP,IAAIof,mEAAmE,GAAG,UAAU7M,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBsH,CAAhB;AAyBlG,CAzBL;;AA0BA,OAAO,IAAIyM,uEAAuE,GAAG,UAAUlN,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnK,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIkN,4EAA4E,CAACnN,MAAD,EAAS3U,OAAT,CAAhF,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP/I,iBAAiB,EAAErK,SAFZ;YAGPwgB,mCAAmC,EAAExgB,SAH9B;YAIPmgB,WAAW,EAAEngB,SAJN;YAKPogB,qBAAqB,EAAEpgB;UALhB,CAAX;UAOAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,mBAAD,CAAJ,KAA8BhV,SAAlC,EAA6C;YACzCa,QAAQ,CAACwJ,iBAAT,GAA6B5N,cAAc,CAACuY,IAAI,CAAC,mBAAD,CAAL,CAA3C;UACH;;UACD,IAAIA,IAAI,CAAC/H,+BAAL,KAAyC,EAA7C,EAAiD;YAC7CpM,QAAQ,CAAC2f,mCAAT,GAA+C,EAA/C;UACH;;UACD,IAAIxL,IAAI,CAAC,iCAAD,CAAJ,KAA4ChV,SAAhD,EAA2D;YACvDa,QAAQ,CAAC2f,mCAAT,GAA+CC,yDAAyD,CAAC1jB,sBAAsB,CAACiY,IAAI,CAAC,iCAAD,CAAL,CAAvB,EAAkEvW,OAAlE,CAAxG;UACH;;UACD,IAAIuW,IAAI,CAAC,aAAD,CAAJ,KAAwBhV,SAA5B,EAAuC;YACnCa,QAAQ,CAACsf,WAAT,GAAuBhjB,cAAc,CAAC6X,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,uBAAD,CAAJ,KAAkChV,SAAtC,EAAiD;YAC7Ca,QAAQ,CAACuf,qBAAT,GAAiC3jB,cAAc,CAACuY,IAAI,CAAC,uBAAD,CAAL,CAA/C;UACH;;UACD,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAhCR;IAkCH,CAnCiB,CAAlB;EAoCH,CAtCiI,CAAhB;AAsC7G,CAtCE;;AAuCP,IAAI0f,4EAA4E,GAAG,UAAUnN,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjK,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB+H,CAAhB;AAyB3G,CAzBL;;AA0BA,OAAO,IAAI6M,8DAA8D,GAAG,UAAUtN,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1J,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIsN,mEAAmE,CAACvN,MAAD,EAAS3U,OAAT,CAAvE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP/I,iBAAiB,EAAErK,SAFZ;YAGP4gB,0BAA0B,EAAE5gB,SAHrB;YAIPmgB,WAAW,EAAEngB,SAJN;YAKPogB,qBAAqB,EAAEpgB;UALhB,CAAX;UAOAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,mBAAD,CAAJ,KAA8BhV,SAAlC,EAA6C;YACzCa,QAAQ,CAACwJ,iBAAT,GAA6B5N,cAAc,CAACuY,IAAI,CAAC,mBAAD,CAAL,CAA3C;UACH;;UACD,IAAIA,IAAI,CAAC5H,sBAAL,KAAgC,EAApC,EAAwC;YACpCvM,QAAQ,CAAC+f,0BAAT,GAAsC,EAAtC;UACH;;UACD,IAAI5L,IAAI,CAAC,wBAAD,CAAJ,KAAmChV,SAAvC,EAAkD;YAC9Ca,QAAQ,CAAC+f,0BAAT,GAAsCC,gDAAgD,CAAC9jB,sBAAsB,CAACiY,IAAI,CAAC,wBAAD,CAAL,CAAvB,EAAyDvW,OAAzD,CAAtF;UACH;;UACD,IAAIuW,IAAI,CAAC,aAAD,CAAJ,KAAwBhV,SAA5B,EAAuC;YACnCa,QAAQ,CAACsf,WAAT,GAAuBhjB,cAAc,CAAC6X,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,uBAAD,CAAJ,KAAkChV,SAAtC,EAAiD;YAC7Ca,QAAQ,CAACuf,qBAAT,GAAiC3jB,cAAc,CAACuY,IAAI,CAAC,uBAAD,CAAL,CAA/C;UACH;;UACD,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAhCR;IAkCH,CAnCiB,CAAlB;EAoCH,CAtCwH,CAAhB;AAsCpG,CAtCE;;AAuCP,IAAI8f,mEAAmE,GAAG,UAAUvN,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBsH,CAAhB;AAyBlG,CAzBL;;AA0BA,OAAO,IAAIiN,4DAA4D,GAAG,UAAU1N,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI0N,iEAAiE,CAAC3N,MAAD,EAAS3U,OAAT,CAArE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP/I,iBAAiB,EAAErK,SAFZ;YAGPmgB,WAAW,EAAEngB,SAHN;YAIPghB,wBAAwB,EAAEhhB,SAJnB;YAKPogB,qBAAqB,EAAEpgB;UALhB,CAAX;UAOAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,mBAAD,CAAJ,KAA8BhV,SAAlC,EAA6C;YACzCa,QAAQ,CAACwJ,iBAAT,GAA6B5N,cAAc,CAACuY,IAAI,CAAC,mBAAD,CAAL,CAA3C;UACH;;UACD,IAAIA,IAAI,CAAC,aAAD,CAAJ,KAAwBhV,SAA5B,EAAuC;YACnCa,QAAQ,CAACsf,WAAT,GAAuBhjB,cAAc,CAAC6X,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAACnH,oBAAL,KAA8B,EAAlC,EAAsC;YAClChN,QAAQ,CAACmgB,wBAAT,GAAoC,EAApC;UACH;;UACD,IAAIhM,IAAI,CAAC,sBAAD,CAAJ,KAAiChV,SAArC,EAAgD;YAC5Ca,QAAQ,CAACmgB,wBAAT,GAAoCC,8CAA8C,CAAClkB,sBAAsB,CAACiY,IAAI,CAAC,sBAAD,CAAL,CAAvB,EAAuDvW,OAAvD,CAAlF;UACH;;UACD,IAAIuW,IAAI,CAAC,uBAAD,CAAJ,KAAkChV,SAAtC,EAAiD;YAC7Ca,QAAQ,CAACuf,qBAAT,GAAiC3jB,cAAc,CAACuY,IAAI,CAAC,uBAAD,CAAL,CAA/C;UACH;;UACD,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAhCR;IAkCH,CAnCiB,CAAlB;EAoCH,CAtCsH,CAAhB;AAsClG,CAtCE;;AAuCP,IAAIkgB,iEAAiE,GAAG,UAAU3N,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBoH,CAAhB;AAyBhG,CAzBL;;AA0BA,OAAO,IAAIqN,wCAAwC,GAAG,UAAU9N,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI8N,6CAA6C,CAAC/N,MAAD,EAAS3U,OAAT,CAAjD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPgO,OAAO,EAAEphB,SAFF;YAGP8Y,KAAK,EAAE9Y;UAHA,CAAX;UAKAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAACoM,OAAL,KAAiB,EAArB,EAAyB;YACrBvgB,QAAQ,CAACugB,OAAT,GAAmB,EAAnB;UACH;;UACD,IAAIpM,IAAI,CAAC,SAAD,CAAJ,KAAoBhV,SAApB,IAAiCgV,IAAI,CAAC,SAAD,CAAJ,CAAgB,QAAhB,MAA8BhV,SAAnE,EAA8E;YAC1Ea,QAAQ,CAACugB,OAAT,GAAmBC,6BAA6B,CAACtkB,sBAAsB,CAACiY,IAAI,CAAC,SAAD,CAAJ,CAAgB,QAAhB,CAAD,CAAvB,EAAoDvW,OAApD,CAAhD;UACH;;UACD,IAAIuW,IAAI,CAAC,OAAD,CAAJ,KAAkBhV,SAAtB,EAAiC;YAC7Ba,QAAQ,CAACiY,KAAT,GAAiBG,2BAA2B,CAACjE,IAAI,CAAC,OAAD,CAAL,EAAgBvW,OAAhB,CAA5C;UACH;;UACD,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA9BkG,CAAhB;AA8B9E,CA9BE;;AA+BP,IAAIsgB,6CAA6C,GAAG,UAAU/N,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBgG,CAAhB;AAyB5E,CAzBL;;AA0BA,OAAO,IAAIyN,iDAAiD,GAAG,UAAUlO,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIkO,sDAAsD,CAACnO,MAAD,EAAS3U,OAAT,CAA1D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPrT,MAAM,EAAEC,SAFD;YAGPwhB,cAAc,EAAExhB,SAHT;YAIP2K,SAAS,EAAE3K,SAJJ;YAKP6K,YAAY,EAAE7K,SALP;YAMPmgB,WAAW,EAAEngB,SANN;YAOP8K,SAAS,EAAE9K,SAPJ;YAQP+K,UAAU,EAAE/K,SARL;YASPyhB,aAAa,EAAEzhB,SATR;YAUP0hB,kBAAkB,EAAE1hB,SAVb;YAWPgL,MAAM,EAAEhL,SAXD;YAYPkL,cAAc,EAAElL,SAZT;YAaP2hB,OAAO,EAAE3hB;UAbF,CAAX;UAeAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACd,MAAT,GAAkBtD,cAAc,CAACuY,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAACwM,cAAL,KAAwB,EAA5B,EAAgC;YAC5B3gB,QAAQ,CAAC2gB,cAAT,GAA0B,EAA1B;UACH;;UACD,IAAIxM,IAAI,CAAC,gBAAD,CAAJ,KAA2BhV,SAA/B,EAA0C;YACtCa,QAAQ,CAAC2gB,cAAT,GAA0BI,sCAAsC,CAAC7kB,sBAAsB,CAACiY,IAAI,CAAC,gBAAD,CAAL,CAAvB,EAAiDvW,OAAjD,CAAhE;UACH;;UACD,IAAIuW,IAAI,CAAC,WAAD,CAAJ,KAAsBhV,SAA1B,EAAqC;YACjCa,QAAQ,CAAC8J,SAAT,GAAqBlO,cAAc,CAACuY,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,cAAD,CAAJ,KAAyBhV,SAA7B,EAAwC;YACpCa,QAAQ,CAACgK,YAAT,GAAwBpO,cAAc,CAACuY,IAAI,CAAC,cAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,aAAD,CAAJ,KAAwBhV,SAA5B,EAAuC;YACnCa,QAAQ,CAACsf,WAAT,GAAuBhjB,cAAc,CAAC6X,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,WAAD,CAAJ,KAAsBhV,SAA1B,EAAqC;YACjCa,QAAQ,CAACiK,SAAT,GAAqBrO,cAAc,CAACuY,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,YAAD,CAAJ,KAAuBhV,SAA3B,EAAsC;YAClCa,QAAQ,CAACkK,UAAT,GAAsBtN,kBAAkB,CAACuX,IAAI,CAAC,YAAD,CAAL,CAAxC;UACH;;UACD,IAAIA,IAAI,CAAC,eAAD,CAAJ,KAA0BhV,SAA9B,EAAyC;YACrCa,QAAQ,CAAC4gB,aAAT,GAAyBhlB,cAAc,CAACuY,IAAI,CAAC,eAAD,CAAL,CAAvC;UACH;;UACD,IAAIA,IAAI,CAAC,oBAAD,CAAJ,KAA+BhV,SAAnC,EAA8C;YAC1Ca,QAAQ,CAAC6gB,kBAAT,GAA8BjlB,cAAc,CAACuY,IAAI,CAAC,oBAAD,CAAL,CAA5C;UACH;;UACD,IAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAACuY,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,gBAAD,CAAJ,KAA2BhV,SAA/B,EAA0C;YACtCa,QAAQ,CAACqK,cAAT,GAA0BzO,cAAc,CAACuY,IAAI,CAAC,gBAAD,CAAL,CAAxC;UACH;;UACD,IAAIA,IAAI,CAAC6M,MAAL,KAAgB,EAApB,EAAwB;YACpBhhB,QAAQ,CAAC8gB,OAAT,GAAmB,EAAnB;UACH;;UACD,IAAI3M,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAAC8gB,OAAT,GAAmBG,yCAAyC,CAAC/kB,sBAAsB,CAACiY,IAAI,CAAC,QAAD,CAAL,CAAvB,EAAyCvW,OAAzC,CAA5D;UACH;;UACD,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAnER;IAqEH,CAtEiB,CAAlB;EAuEH,CAzE2G,CAAhB;AAyEvF,CAzEE;;AA0EP,IAAI0gB,sDAAsD,GAAG,UAAUnO,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzByG,CAAhB;AAyBrF,CAzBL;;AA0BA,OAAO,IAAIkO,wCAAwC,GAAG,UAAU3O,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2O,6CAA6C,CAAC5O,MAAD,EAAS3U,OAAT,CAAjD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPoO,cAAc,EAAExhB,SAFT;YAGPiiB,QAAQ,EAAEjiB,SAHH;YAIP2K,SAAS,EAAE3K,SAJJ;YAKP6K,YAAY,EAAE7K,SALP;YAMPmgB,WAAW,EAAEngB,SANN;YAOPoL,MAAM,EAAEpL,SAPD;YAQPsL,OAAO,EAAEtL,SARF;YASPkiB,IAAI,EAAEliB,SATC;YAUPmiB,UAAU,EAAEniB,SAVL;YAWPgL,MAAM,EAAEhL;UAXD,CAAX;UAaAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAACwM,cAAL,KAAwB,EAA5B,EAAgC;YAC5B3gB,QAAQ,CAAC2gB,cAAT,GAA0B,EAA1B;UACH;;UACD,IAAIxM,IAAI,CAAC,gBAAD,CAAJ,KAA2BhV,SAA/B,EAA0C;YACtCa,QAAQ,CAAC2gB,cAAT,GAA0BI,sCAAsC,CAAC7kB,sBAAsB,CAACiY,IAAI,CAAC,gBAAD,CAAL,CAAvB,EAAiDvW,OAAjD,CAAhE;UACH;;UACD,IAAIuW,IAAI,CAACiN,QAAL,KAAkB,EAAtB,EAA0B;YACtBphB,QAAQ,CAACohB,QAAT,GAAoB,EAApB;UACH;;UACD,IAAIjN,IAAI,CAAC,UAAD,CAAJ,KAAqBhV,SAAzB,EAAoC;YAChCa,QAAQ,CAACohB,QAAT,GAAoBG,gCAAgC,CAACrlB,sBAAsB,CAACiY,IAAI,CAAC,UAAD,CAAL,CAAvB,EAA2CvW,OAA3C,CAApD;UACH;;UACD,IAAIuW,IAAI,CAAC,WAAD,CAAJ,KAAsBhV,SAA1B,EAAqC;YACjCa,QAAQ,CAAC8J,SAAT,GAAqBlO,cAAc,CAACuY,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,cAAD,CAAJ,KAAyBhV,SAA7B,EAAwC;YACpCa,QAAQ,CAACgK,YAAT,GAAwBpO,cAAc,CAACuY,IAAI,CAAC,cAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,aAAD,CAAJ,KAAwBhV,SAA5B,EAAuC;YACnCa,QAAQ,CAACsf,WAAT,GAAuBhjB,cAAc,CAAC6X,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACuK,MAAT,GAAkB3O,cAAc,CAACuY,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoBhV,SAAxB,EAAmC;YAC/Ba,QAAQ,CAACyK,OAAT,GAAmB7N,kBAAkB,CAACuX,IAAI,CAAC,SAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,MAAD,CAAJ,KAAiBhV,SAArB,EAAgC;YAC5Ba,QAAQ,CAACqhB,IAAT,GAAgBzlB,cAAc,CAACuY,IAAI,CAAC,MAAD,CAAL,CAA9B;UACH;;UACD,IAAIA,IAAI,CAAC,YAAD,CAAJ,KAAuBhV,SAA3B,EAAsC;YAClCa,QAAQ,CAACshB,UAAT,GAAsB1lB,cAAc,CAACuY,IAAI,CAAC,YAAD,CAAL,CAApC;UACH;;UACD,IAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAACuY,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MA3DR;IA6DH,CA9DiB,CAAlB;EA+DH,CAjEkG,CAAhB;AAiE9E,CAjEE;;AAkEP,IAAImhB,6CAA6C,GAAG,UAAU5O,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2ClV,EAA3C,EAA+CS,EAA/C,EAAmD0U,UAAnD,EAA+DC,OAA/D;;IACA,IAAIC,EAAJ;;IACA,OAAOpY,WAAW,CAAC,IAAD,EAAO,UAAUqY,EAAV,EAAc;MACnC,QAAQA,EAAE,CAAC5U,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAa,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIE,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEJ,EAAE,CAAC7U,IAAH,GAAU8U,EAAE,CAAC1U,IAAH,EAAV,EAAqByU,EAAvB,EAAV,CAAvB,CAAf;UACAH,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;UACAR,EAAE,GAAGkV,SAAL;;UACA,QAAQlV,EAAR;YACI,KAAK,cAAL;cAAqB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACrB,KAAK,+BAAL;cAAsC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAF1C;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIS,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC,CAAD,EAAIgjB,0CAA0C,CAACzO,YAAD,EAAenV,OAAf,CAA9C,CAAP;;QACJ,KAAK,CAAL;UACIoV,QAAQ,GAAGlY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB/U,EAAE,CAACgV,MAAH,CAAU,CAAEH,EAAE,CAAC1U,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgV,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIW,UAAU,GAAGH,YAAY,CAACxU,IAA1B;UACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAxI,CAA3B,CAAnB;UACAc,EAAE,CAAC5U,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACI0U,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MA9BR;IAgCH,CAjCiB,CAAlB;EAkCH,CArCgG,CAAhB;AAqC5E,CArCL;;AAsCA,OAAO,IAAIyO,0CAA0C,GAAG,UAAUlP,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIkP,+CAA+C,CAACnP,MAAD,EAAS3U,OAAT,CAAnD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPoO,cAAc,EAAExhB,SAFT;YAGPiiB,QAAQ,EAAEjiB,SAHH;YAIPqK,iBAAiB,EAAErK,SAJZ;YAKP2K,SAAS,EAAE3K,SALJ;YAMP6K,YAAY,EAAE7K,SANP;YAOPmgB,WAAW,EAAEngB,SAPN;YAQPwiB,QAAQ,EAAExiB,SARH;YASPsL,OAAO,EAAEtL,SATF;YAUPkiB,IAAI,EAAEliB,SAVC;YAWPogB,qBAAqB,EAAEpgB,SAXhB;YAYPgL,MAAM,EAAEhL,SAZD;YAaPyL,UAAU,EAAEzL;UAbL,CAAX;UAeAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAACwM,cAAL,KAAwB,EAA5B,EAAgC;YAC5B3gB,QAAQ,CAAC2gB,cAAT,GAA0B,EAA1B;UACH;;UACD,IAAIxM,IAAI,CAAC,gBAAD,CAAJ,KAA2BhV,SAA/B,EAA0C;YACtCa,QAAQ,CAAC2gB,cAAT,GAA0BI,sCAAsC,CAAC7kB,sBAAsB,CAACiY,IAAI,CAAC,gBAAD,CAAL,CAAvB,EAAiDvW,OAAjD,CAAhE;UACH;;UACD,IAAIuW,IAAI,CAACiN,QAAL,KAAkB,EAAtB,EAA0B;YACtBphB,QAAQ,CAACohB,QAAT,GAAoB,EAApB;UACH;;UACD,IAAIjN,IAAI,CAAC,UAAD,CAAJ,KAAqBhV,SAAzB,EAAoC;YAChCa,QAAQ,CAACohB,QAAT,GAAoBG,gCAAgC,CAACrlB,sBAAsB,CAACiY,IAAI,CAAC,UAAD,CAAL,CAAvB,EAA2CvW,OAA3C,CAApD;UACH;;UACD,IAAIuW,IAAI,CAAC,mBAAD,CAAJ,KAA8BhV,SAAlC,EAA6C;YACzCa,QAAQ,CAACwJ,iBAAT,GAA6B5N,cAAc,CAACuY,IAAI,CAAC,mBAAD,CAAL,CAA3C;UACH;;UACD,IAAIA,IAAI,CAAC,WAAD,CAAJ,KAAsBhV,SAA1B,EAAqC;YACjCa,QAAQ,CAAC8J,SAAT,GAAqBlO,cAAc,CAACuY,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,cAAD,CAAJ,KAAyBhV,SAA7B,EAAwC;YACpCa,QAAQ,CAACgK,YAAT,GAAwBpO,cAAc,CAACuY,IAAI,CAAC,cAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,aAAD,CAAJ,KAAwBhV,SAA5B,EAAuC;YACnCa,QAAQ,CAACsf,WAAT,GAAuBhjB,cAAc,CAAC6X,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBhV,SAAzB,EAAoC;YAChCa,QAAQ,CAAC2hB,QAAT,GAAoB/kB,kBAAkB,CAACuX,IAAI,CAAC,UAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoBhV,SAAxB,EAAmC;YAC/Ba,QAAQ,CAACyK,OAAT,GAAmB7N,kBAAkB,CAACuX,IAAI,CAAC,SAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,MAAD,CAAJ,KAAiBhV,SAArB,EAAgC;YAC5Ba,QAAQ,CAACqhB,IAAT,GAAgBzlB,cAAc,CAACuY,IAAI,CAAC,MAAD,CAAL,CAA9B;UACH;;UACD,IAAIA,IAAI,CAAC,uBAAD,CAAJ,KAAkChV,SAAtC,EAAiD;YAC7Ca,QAAQ,CAACuf,qBAAT,GAAiC3jB,cAAc,CAACuY,IAAI,CAAC,uBAAD,CAAL,CAA/C;UACH;;UACD,IAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAACuY,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,YAAD,CAAJ,KAAuBhV,SAA3B,EAAsC;YAClCa,QAAQ,CAAC4K,UAAT,GAAsBhP,cAAc,CAACuY,IAAI,CAAC,YAAD,CAAL,CAApC;UACH;;UACD,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAnER;IAqEH,CAtEiB,CAAlB;EAuEH,CAzEoG,CAAhB;AAyEhF,CAzEE;;AA0EP,IAAI0hB,+CAA+C,GAAG,UAAUnP,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2ClV,EAA3C,EAA+CS,EAA/C,EAAmD0U,UAAnD,EAA+DC,OAA/D;;IACA,IAAIC,EAAJ;;IACA,OAAOpY,WAAW,CAAC,IAAD,EAAO,UAAUqY,EAAV,EAAc;MACnC,QAAQA,EAAE,CAAC5U,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAa,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIE,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEJ,EAAE,CAAC7U,IAAH,GAAU8U,EAAE,CAAC1U,IAAH,EAAV,EAAqByU,EAAvB,EAAV,CAAvB,CAAf;UACAH,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;UACAR,EAAE,GAAGkV,SAAL;;UACA,QAAQlV,EAAR;YACI,KAAK,cAAL;cAAqB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACrB,KAAK,+BAAL;cAAsC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAF1C;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIS,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC,CAAD,EAAIgjB,0CAA0C,CAACzO,YAAD,EAAenV,OAAf,CAA9C,CAAP;;QACJ,KAAK,CAAL;UACIoV,QAAQ,GAAGlY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB/U,EAAE,CAACgV,MAAH,CAAU,CAAEH,EAAE,CAAC1U,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgV,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIW,UAAU,GAAGH,YAAY,CAACxU,IAA1B;UACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAxI,CAA3B,CAAnB;UACAc,EAAE,CAAC5U,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACI0U,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MA9BR;IAgCH,CAjCiB,CAAlB;EAkCH,CArCkG,CAAhB;AAqC9E,CArCL;;AAsCA,OAAO,IAAI4O,+CAA+C,GAAG,UAAUrP,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqP,oDAAoD,CAACtP,MAAD,EAAS3U,OAAT,CAAxD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPoO,cAAc,EAAExhB,SAFT;YAGP2iB,aAAa,EAAE3iB,SAHR;YAIP2K,SAAS,EAAE3K,SAJJ;YAKP6K,YAAY,EAAE7K,SALP;YAMPmgB,WAAW,EAAEngB,SANN;YAOP8K,SAAS,EAAE9K,SAPJ;YAQPsL,OAAO,EAAEtL,SARF;YASPkiB,IAAI,EAAEliB,SATC;YAUPyhB,aAAa,EAAEzhB,SAVR;YAWP4iB,mBAAmB,EAAE5iB,SAXd;YAYPgL,MAAM,EAAEhL,SAZD;YAaP4L,eAAe,EAAE5L,SAbV;YAcP6iB,QAAQ,EAAE7iB;UAdH,CAAX;UAgBAtB,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAACwM,cAAL,KAAwB,EAA5B,EAAgC;YAC5B3gB,QAAQ,CAAC2gB,cAAT,GAA0B,EAA1B;UACH;;UACD,IAAIxM,IAAI,CAAC,gBAAD,CAAJ,KAA2BhV,SAA/B,EAA0C;YACtCa,QAAQ,CAAC2gB,cAAT,GAA0BI,sCAAsC,CAAC7kB,sBAAsB,CAACiY,IAAI,CAAC,gBAAD,CAAL,CAAvB,EAAiDvW,OAAjD,CAAhE;UACH;;UACD,IAAIuW,IAAI,CAACxC,YAAL,KAAsB,EAA1B,EAA8B;YAC1B3R,QAAQ,CAAC8hB,aAAT,GAAyB,EAAzB;UACH;;UACD,IAAI3N,IAAI,CAAC,cAAD,CAAJ,KAAyBhV,SAA7B,EAAwC;YACpCa,QAAQ,CAAC8hB,aAAT,GAAyBG,mCAAmC,CAAC/lB,sBAAsB,CAACiY,IAAI,CAAC,cAAD,CAAL,CAAvB,EAA+CvW,OAA/C,CAA5D;UACH;;UACD,IAAIuW,IAAI,CAAC,WAAD,CAAJ,KAAsBhV,SAA1B,EAAqC;YACjCa,QAAQ,CAAC8J,SAAT,GAAqBlO,cAAc,CAACuY,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,cAAD,CAAJ,KAAyBhV,SAA7B,EAAwC;YACpCa,QAAQ,CAACgK,YAAT,GAAwBpO,cAAc,CAACuY,IAAI,CAAC,cAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,aAAD,CAAJ,KAAwBhV,SAA5B,EAAuC;YACnCa,QAAQ,CAACsf,WAAT,GAAuBhjB,cAAc,CAAC6X,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,WAAD,CAAJ,KAAsBhV,SAA1B,EAAqC;YACjCa,QAAQ,CAACiK,SAAT,GAAqBrO,cAAc,CAACuY,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoBhV,SAAxB,EAAmC;YAC/Ba,QAAQ,CAACyK,OAAT,GAAmB7N,kBAAkB,CAACuX,IAAI,CAAC,SAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,MAAD,CAAJ,KAAiBhV,SAArB,EAAgC;YAC5Ba,QAAQ,CAACqhB,IAAT,GAAgBzlB,cAAc,CAACuY,IAAI,CAAC,MAAD,CAAL,CAA9B;UACH;;UACD,IAAIA,IAAI,CAAC,eAAD,CAAJ,KAA0BhV,SAA9B,EAAyC;YACrCa,QAAQ,CAAC4gB,aAAT,GAAyBhlB,cAAc,CAACuY,IAAI,CAAC,eAAD,CAAL,CAAvC;UACH;;UACD,IAAIA,IAAI,CAAC,qBAAD,CAAJ,KAAgChV,SAApC,EAA+C;YAC3Ca,QAAQ,CAAC+hB,mBAAT,GAA+BnmB,cAAc,CAACuY,IAAI,CAAC,qBAAD,CAAL,CAA7C;UACH;;UACD,IAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAACuY,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,iBAAD,CAAJ,KAA4BhV,SAAhC,EAA2C;YACvCa,QAAQ,CAAC+K,eAAT,GAA2BnP,cAAc,CAACuY,IAAI,CAAC,iBAAD,CAAL,CAAzC;UACH;;UACD,IAAIA,IAAI,CAAC+N,OAAL,KAAiB,EAArB,EAAyB;YACrBliB,QAAQ,CAACgiB,QAAT,GAAoB,EAApB;UACH;;UACD,IAAI7N,IAAI,CAAC,SAAD,CAAJ,KAAoBhV,SAAxB,EAAmC;YAC/Ba,QAAQ,CAACgiB,QAAT,GAAoBG,uCAAuC,CAACjmB,sBAAsB,CAACiY,IAAI,CAAC,SAAD,CAAL,CAAvB,EAA0CvW,OAA1C,CAA3D;UACH;;UACD,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MA1ER;IA4EH,CA7EiB,CAAlB;EA8EH,CAhFyG,CAAhB;AAgFrF,CAhFE;;AAiFP,IAAI6hB,oDAAoD,GAAG,UAAUtP,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBuG,CAAhB;AAyBnF,CAzBL;;AA0BA,OAAO,IAAIoP,sCAAsC,GAAG,UAAU7P,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB,EAAwBE,EAAxB;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI6P,2CAA2C,CAAC9P,MAAD,EAAS3U,OAAT,CAA/C,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP4C,SAAS,EAAEhW,SAFJ;YAGPiW,WAAW,EAAEjW,SAHN;YAIPD,MAAM,EAAEC,SAJD;YAKPmjB,SAAS,EAAEnjB,SALJ;YAMPmgB,WAAW,EAAEngB,SANN;YAOPI,GAAG,EAAEJ,SAPE;YAQP8L,QAAQ,EAAE9L,SARH;YASPojB,oBAAoB,EAAEpjB,SATf;YAUP8Y,KAAK,EAAE9Y,SAVA;YAWP+L,gBAAgB,EAAE/L,SAXX;YAYPqjB,KAAK,EAAErjB,SAZA;YAaP+S,cAAc,EAAE/S,SAbT;YAcPwC,YAAY,EAAExC,SAdP;YAePS,QAAQ,EAAET;UAfH,CAAX;;UAiBA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAACmV,SAAT,GAAqB3Z,eAAe,CAACkB,sBAAsB,CAAC6V,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAAD,CAAvB,CAApC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,qBAAf,MAA0CgB,SAA9C,EAAyD;YACrDa,QAAQ,CAACoV,WAAT,GAAuB7C,MAAM,CAACpU,OAAP,CAAe,qBAAf,CAAvB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAGrC,eAAL;UACAuC,EAAE,GAAGrC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACwV,KAAH,CAAS,KAAK,CAAd,EAAiB,CAAC/U,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAIwV,IAAI,CAAC,QAAD,CAAJ,KAAmBhV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACd,MAAT,GAAkBtD,cAAc,CAACuY,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,WAAD,CAAJ,KAAsBhV,SAA1B,EAAqC;YACjCa,QAAQ,CAACsiB,SAAT,GAAqBG,+BAA+B,CAACtO,IAAI,CAAC,WAAD,CAAL,EAAoBvW,OAApB,CAApD;UACH;;UACD,IAAIuW,IAAI,CAAC,aAAD,CAAJ,KAAwBhV,SAA5B,EAAuC;YACnCa,QAAQ,CAACsf,WAAT,GAAuBhjB,cAAc,CAAC6X,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,KAAD,CAAJ,KAAgBhV,SAApB,EAA+B;YAC3Ba,QAAQ,CAACT,GAAT,GAAe3D,cAAc,CAACuY,IAAI,CAAC,KAAD,CAAL,CAA7B;UACH;;UACD,IAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBhV,SAAzB,EAAoC;YAChCa,QAAQ,CAACiL,QAAT,GAAoBrO,kBAAkB,CAACuX,IAAI,CAAC,UAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,sBAAD,CAAJ,KAAiChV,SAArC,EAAgD;YAC5Ca,QAAQ,CAACuiB,oBAAT,GAAgC3mB,cAAc,CAACuY,IAAI,CAAC,sBAAD,CAAL,CAA9C;UACH;;UACD,IAAIA,IAAI,CAAC,OAAD,CAAJ,KAAkBhV,SAAtB,EAAiC;YAC7Ba,QAAQ,CAACiY,KAAT,GAAiBG,2BAA2B,CAACjE,IAAI,CAAC,OAAD,CAAL,EAAgBvW,OAAhB,CAA5C;UACH;;UACD,IAAIuW,IAAI,CAAC,kBAAD,CAAJ,KAA6BhV,SAAjC,EAA4C;YACxCa,QAAQ,CAACkL,gBAAT,GAA4BtP,cAAc,CAACuY,IAAI,CAAC,kBAAD,CAAL,CAA1C;UACH;;UACD,IAAIA,IAAI,CAACuO,IAAL,KAAc,EAAlB,EAAsB;YAClB1iB,QAAQ,CAACwiB,KAAT,GAAiB,EAAjB;UACH;;UACD,IAAIrO,IAAI,CAAC,MAAD,CAAJ,KAAiBhV,SAArB,EAAgC;YAC5Ba,QAAQ,CAACwiB,KAAT,GAAiBG,2BAA2B,CAACzmB,sBAAsB,CAACiY,IAAI,CAAC,MAAD,CAAL,CAAvB,EAAuCvW,OAAvC,CAA5C;UACH;;UACD,IAAIuW,IAAI,CAAC,cAAD,CAAJ,KAAyBhV,SAA7B,EAAwC;YACpCa,QAAQ,CAAC2B,YAAT,GAAwB/F,cAAc,CAACuY,IAAI,CAAC,cAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBhV,SAAzB,EAAoC;YAChCa,QAAQ,CAACJ,QAAT,GAAoBhE,cAAc,CAACuY,IAAI,CAAC,UAAD,CAAL,CAAlC;UACH;;UACD,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAxER;IA0EH,CA3EiB,CAAlB;EA4EH,CA9EgG,CAAhB;AA8E5E,CA9EE;;AA+EP,IAAIqiB,2CAA2C,GAAG,UAAU9P,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB8F,CAAhB;AAyB1E,CAzBL;;AA0BA,OAAO,IAAI4P,6DAA6D,GAAG,UAAUrQ,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqQ,kEAAkE,CAACtQ,MAAD,EAAS3U,OAAT,CAAtE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBuH,CAAhB;AAiBnG,CAjBE;;AAkBP,IAAI6iB,kEAAkE,GAAG,UAAUtQ,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBqH,CAAhB;AAyBjG,CAzBL;;AA0BA,OAAO,IAAI8P,yCAAyC,GAAG,UAAUvQ,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuQ,8CAA8C,CAACxQ,MAAD,EAAS3U,OAAT,CAAlD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBmG,CAAhB;AAiB/E,CAjBE;;AAkBP,IAAI+iB,8CAA8C,GAAG,UAAUxQ,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBiG,CAAhB;AAyB7E,CAzBL;;AA0BA,OAAO,IAAIgQ,4DAA4D,GAAG,UAAUzQ,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyQ,iEAAiE,CAAC1Q,MAAD,EAAS3U,OAAT,CAArE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBsH,CAAhB;AAiBlG,CAjBE;;AAkBP,IAAIijB,iEAAiE,GAAG,UAAU1Q,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBoH,CAAhB;AAyBhG,CAzBL;;AA0BA,OAAO,IAAIkQ,0CAA0C,GAAG,UAAU3Q,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2Q,+CAA+C,CAAC5Q,MAAD,EAAS3U,OAAT,CAAnD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBoG,CAAhB;AAiBhF,CAjBE;;AAkBP,IAAImjB,+CAA+C,GAAG,UAAU5Q,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBkG,CAAhB;AAyB9E,CAzBL;;AA0BA,OAAO,IAAIoQ,gDAAgD,GAAG,UAAU7Q,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI6Q,qDAAqD,CAAC9Q,MAAD,EAAS3U,OAAT,CAAzD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB0G,CAAhB;AAiBtF,CAjBE;;AAkBP,IAAIqjB,qDAAqD,GAAG,UAAU9Q,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBwG,CAAhB;AAyBpF,CAzBL;;AA0BA,OAAO,IAAIsQ,qEAAqE,GAAG,UAAU/Q,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjK,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+Q,0EAA0E,CAAChR,MAAD,EAAS3U,OAAT,CAA9E,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB+H,CAAhB;AAiB3G,CAjBE;;AAkBP,IAAIujB,0EAA0E,GAAG,UAAUhR,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/J,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB6H,CAAhB;AAyBzG,CAzBL;;AA0BA,OAAO,IAAIwQ,4DAA4D,GAAG,UAAUjR,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIiR,iEAAiE,CAAClR,MAAD,EAAS3U,OAAT,CAArE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBsH,CAAhB;AAiBlG,CAjBE;;AAkBP,IAAIyjB,iEAAiE,GAAG,UAAUlR,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBoH,CAAhB;AAyBhG,CAzBL;;AA0BA,OAAO,IAAI0Q,4DAA4D,GAAG,UAAUnR,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAImR,iEAAiE,CAACpR,MAAD,EAAS3U,OAAT,CAArE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBsH,CAAhB;AAiBlG,CAjBE;;AAkBP,IAAI2jB,iEAAiE,GAAG,UAAUpR,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBoH,CAAhB;AAyBhG,CAzBL;;AA0BA,OAAO,IAAI4Q,6CAA6C,GAAG,UAAUrR,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqR,kDAAkD,CAACtR,MAAD,EAAS3U,OAAT,CAAtD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBuG,CAAhB;AAiBnF,CAjBE;;AAkBP,IAAI6jB,kDAAkD,GAAG,UAAUtR,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBqG,CAAhB;AAyBjF,CAzBL;;AA0BA,OAAO,IAAI8Q,0DAA0D,GAAG,UAAUvR,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuR,+DAA+D,CAACxR,MAAD,EAAS3U,OAAT,CAAnE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBoH,CAAhB;AAiBhG,CAjBE;;AAkBP,IAAI+jB,+DAA+D,GAAG,UAAUxR,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBkH,CAAhB;AAyB9F,CAzBL;;AA0BA,OAAO,IAAIgR,+DAA+D,GAAG,UAAUzR,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3J,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyR,oEAAoE,CAAC1R,MAAD,EAAS3U,OAAT,CAAxE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjByH,CAAhB;AAiBrG,CAjBE;;AAkBP,IAAIikB,oEAAoE,GAAG,UAAU1R,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBuH,CAAhB;AAyBnG,CAzBL;;AA0BA,OAAO,IAAIkR,uDAAuD,GAAG,UAAU3R,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2R,4DAA4D,CAAC5R,MAAD,EAAS3U,OAAT,CAAhE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBiH,CAAhB;AAiB7F,CAjBE;;AAkBP,IAAImkB,4DAA4D,GAAG,UAAU5R,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB+G,CAAhB;AAyB3F,CAzBL;;AA0BA,OAAO,IAAIoR,4CAA4C,GAAG,UAAU7R,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI6R,iDAAiD,CAAC9R,MAAD,EAAS3U,OAAT,CAArD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBsG,CAAhB;AAiBlF,CAjBE;;AAkBP,IAAIqkB,iDAAiD,GAAG,UAAU9R,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBoG,CAAhB;AAyBhF,CAzBL;;AA0BA,OAAO,IAAIsR,iDAAiD,GAAG,UAAU/R,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+R,sDAAsD,CAAChS,MAAD,EAAS3U,OAAT,CAA1D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB2G,CAAhB;AAiBvF,CAjBE;;AAkBP,IAAIukB,sDAAsD,GAAG,UAAUhS,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzByG,CAAhB;AAyBrF,CAzBL;;AA0BA,OAAO,IAAIwR,oDAAoD,GAAG,UAAUjS,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIiS,yDAAyD,CAAClS,MAAD,EAAS3U,OAAT,CAA7D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB8G,CAAhB;AAiB1F,CAjBE;;AAkBP,IAAIykB,yDAAyD,GAAG,UAAUlS,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB4G,CAAhB;AAyBxF,CAzBL;;AA0BA,OAAO,IAAI0R,6CAA6C,GAAG,UAAUnS,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAImS,kDAAkD,CAACpS,MAAD,EAAS3U,OAAT,CAAtD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBuG,CAAhB;AAiBnF,CAjBE;;AAkBP,IAAI2kB,kDAAkD,GAAG,UAAUpS,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBqG,CAAhB;AAyBjF,CAzBL;;AA0BA,OAAO,IAAI4R,gDAAgD,GAAG,UAAUrS,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqS,qDAAqD,CAACtS,MAAD,EAAS3U,OAAT,CAAzD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB0G,CAAhB;AAiBtF,CAjBE;;AAkBP,IAAI6kB,qDAAqD,GAAG,UAAUtS,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBwG,CAAhB;AAyBpF,CAzBL;;AA0BA,OAAO,IAAI8R,6CAA6C,GAAG,UAAUvS,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuS,kDAAkD,CAACxS,MAAD,EAAS3U,OAAT,CAAtD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBuG,CAAhB;AAiBnF,CAjBE;;AAkBP,IAAI+kB,kDAAkD,GAAG,UAAUxS,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBqG,CAAhB;AAyBjF,CAzBL;;AA0BA,OAAO,IAAIgS,sCAAsC,GAAG,UAAUzS,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyS,2CAA2C,CAAC1S,MAAD,EAAS3U,OAAT,CAA/C,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPrQ,gBAAgB,EAAE/C,SAFX;YAGPyS,IAAI,EAAEzS,SAHC;YAIP0S,UAAU,EAAE1S,SAJL;YAKP+S,cAAc,EAAE/S,SALT;YAMP0C,oBAAoB,EAAE1C,SANf;YAOP4C,iBAAiB,EAAE5C,SAPZ;YAQP8C,uBAAuB,EAAE9C,SARlB;YASP6C,WAAW,EAAE7C,SATN;YAUPuC,oBAAoB,EAAEvC,SAVf;YAWPqG,SAAS,EAAErG;UAXJ,CAAX;;UAaA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAAC6R,UAAT,GAAsBU,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAAtB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,MAAf,MAA2BgB,SAA/B,EAA0C;YACtCa,QAAQ,CAAC4R,IAAT,GAAgBW,MAAM,CAACpU,OAAP,CAAe,MAAf,CAAhB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,8BAAf,MAAmDgB,SAAvD,EAAkE;YAC9Da,QAAQ,CAAC0B,oBAAT,GAAgC6Q,MAAM,CAACpU,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAACwF,SAAT,GAAqB+M,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;YACjFa,QAAQ,CAAC6B,oBAAT,GAAgC0Q,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAhC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,+CAAf,MAAoEgB,SAAxE,EAAmF;YAC/Ea,QAAQ,CAAC+B,iBAAT,GAA6BwQ,MAAM,CAACpU,OAAP,CAAe,+CAAf,CAA7B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,6CAAf,MAAkEgB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACgC,WAAT,GAAuBuQ,MAAM,CAACpU,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,sCAAf,MAA2DgB,SAA/D,EAA0E;YACtEa,QAAQ,CAACiC,uBAAT,GAAmCsQ,MAAM,CAACpU,OAAP,CAAe,sCAAf,CAAnC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;YACjFa,QAAQ,CAACkC,gBAAT,GAA4B5F,cAAc,CAACiW,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIyU,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAnDR;IAqDH,CAtDiB,CAAlB;EAuDH,CAzDgG,CAAhB;AAyD5E,CAzDE;;AA0DP,IAAIilB,2CAA2C,GAAG,UAAU1S,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB8F,CAAhB;AAyB1E,CAzBL;;AA0BA,OAAO,IAAIkS,yCAAyC,GAAG,UAAU3S,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2S,8CAA8C,CAAC5S,MAAD,EAAS3U,OAAT,CAAlD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPL,cAAc,EAAE/S;UAFT,CAAX;;UAIA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIyU,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArBmG,CAAhB;AAqB/E,CArBE;;AAsBP,IAAImlB,8CAA8C,GAAG,UAAU5S,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2ClV,EAA3C,EAA+CS,EAA/C,EAAmD0U,UAAnD,EAA+DC,OAA/D;;IACA,IAAIC,EAAJ;;IACA,OAAOpY,WAAW,CAAC,IAAD,EAAO,UAAUqY,EAAV,EAAc;MACnC,QAAQA,EAAE,CAAC5U,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAa,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIE,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEJ,EAAE,CAAC7U,IAAH,GAAU8U,EAAE,CAAC1U,IAAH,EAAV,EAAqByU,EAAvB,EAAV,CAAvB,CAAf;UACAH,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;UACAR,EAAE,GAAGkV,SAAL;;UACA,QAAQlV,EAAR;YACI,KAAK,WAAL;cAAkB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAClB,KAAK,4BAAL;cAAmC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAFvC;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIS,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC,CAAD,EAAIkf,uCAAuC,CAAC3K,YAAD,EAAenV,OAAf,CAA3C,CAAP;;QACJ,KAAK,CAAL;UACIoV,QAAQ,GAAGlY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB/U,EAAE,CAACgV,MAAH,CAAU,CAAEH,EAAE,CAAC1U,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgV,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIW,UAAU,GAAGH,YAAY,CAACxU,IAA1B;UACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAxI,CAA3B,CAAnB;UACAc,EAAE,CAAC5U,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACI0U,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MA9BR;IAgCH,CAjCiB,CAAlB;EAkCH,CArCiG,CAAhB;AAqC7E,CArCL;;AAsCA,OAAO,IAAIoS,+CAA+C,GAAG,UAAU7S,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI6S,oDAAoD,CAAC9S,MAAD,EAAS3U,OAAT,CAAxD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPL,cAAc,EAAE/S;UAFT,CAAX;;UAIA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIyU,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArByG,CAAhB;AAqBrF,CArBE;;AAsBP,IAAIqlB,oDAAoD,GAAG,UAAU9S,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBuG,CAAhB;AAyBnF,CAzBL;;AA0BA,OAAO,IAAIsS,uDAAuD,GAAG,UAAU/S,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+S,4DAA4D,CAAChT,MAAD,EAAS3U,OAAT,CAAhE,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPL,cAAc,EAAE/S;UAFT,CAAX;;UAIA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIyU,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArBiH,CAAhB;AAqB7F,CArBE;;AAsBP,IAAIulB,4DAA4D,GAAG,UAAUhT,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjJ,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB+G,CAAhB;AAyB3F,CAzBL;;AA0BA,OAAO,IAAIwS,+CAA+C,GAAG,UAAUjT,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIiT,oDAAoD,CAAClT,MAAD,EAAS3U,OAAT,CAAxD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPL,cAAc,EAAE/S;UAFT,CAAX;;UAIA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIyU,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArByG,CAAhB;AAqBrF,CArBE;;AAsBP,IAAIylB,oDAAoD,GAAG,UAAUlT,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBuG,CAAhB;AAyBnF,CAzBL;;AA0BA,OAAO,IAAI0S,6CAA6C,GAAG,UAAUnT,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAImT,kDAAkD,CAACpT,MAAD,EAAS3U,OAAT,CAAtD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP/M,SAAS,EAAErG;UAFJ,CAAX;;UAIA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,kBAAf,MAAuCgB,SAA3C,EAAsD;YAClDa,QAAQ,CAACwF,SAAT,GAAqB+M,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,OAAO,CAAC,CAAD,EAAIyU,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArBuG,CAAhB;AAqBnF,CArBE;;AAsBP,IAAI2lB,kDAAkD,GAAG,UAAUpT,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBqG,CAAhB;AAyBjF,CAzBL;;AA0BA,OAAO,IAAI4S,iDAAiD,GAAG,UAAUrT,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqT,sDAAsD,CAACtT,MAAD,EAAS3U,OAAT,CAA1D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB2G,CAAhB;AAiBvF,CAjBE;;AAkBP,IAAI6lB,sDAAsD,GAAG,UAAUtT,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzByG,CAAhB;AAyBrF,CAzBL;;AA0BA,OAAO,IAAI8S,0CAA0C,GAAG,UAAUvT,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuT,+CAA+C,CAACxT,MAAD,EAAS3U,OAAT,CAAnD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPL,cAAc,EAAE/S,SAFT;YAGP6mB,iBAAiB,EAAE7mB;UAHZ,CAAX;;UAKA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,2BAAf,MAAgDgB,SAApD,EAA+D;YAC3Da,QAAQ,CAACgmB,iBAAT,GAA6BzT,MAAM,CAACpU,OAAP,CAAe,2BAAf,CAA7B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIyU,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CAzBoG,CAAhB;AAyBhF,CAzBE;;AA0BP,IAAI+lB,+CAA+C,GAAG,UAAUxT,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2ClV,EAA3C,EAA+CS,EAA/C,EAAmD0U,UAAnD,EAA+DC,OAA/D;;IACA,IAAIC,EAAJ;;IACA,OAAOpY,WAAW,CAAC,IAAD,EAAO,UAAUqY,EAAV,EAAc;MACnC,QAAQA,EAAE,CAAC5U,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAa,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIE,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEJ,EAAE,CAAC7U,IAAH,GAAU8U,EAAE,CAAC1U,IAAH,EAAV,EAAqByU,EAAvB,EAAV,CAAvB,CAAf;UACAH,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;UACAR,EAAE,GAAGkV,SAAL;;UACA,QAAQlV,EAAR;YACI,KAAK,gCAAL;cAAuC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACvC,KAAK,iDAAL;cAAwD,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAF5D;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIS,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC,CAAD,EAAIynB,4DAA4D,CAAClT,YAAD,EAAenV,OAAf,CAAhE,CAAP;;QACJ,KAAK,CAAL;UACIoV,QAAQ,GAAGlY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB/U,EAAE,CAACgV,MAAH,CAAU,CAAEH,EAAE,CAAC1U,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgV,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIW,UAAU,GAAGH,YAAY,CAACxU,IAA1B;UACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAAxI,CAA3B,CAAnB;UACAc,EAAE,CAAC5U,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACI0U,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MA9BR;IAgCH,CAjCiB,CAAlB;EAkCH,CArCkG,CAAhB;AAqC9E,CArCL;;AAsCA,OAAO,IAAIkT,gDAAgD,GAAG,UAAU3T,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIiF,QAAJ,EAAcmU,IAAd;IACA,OAAOnZ,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,IAAI0U,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;QACvD,OAAO,CAAC,CAAD,EAAI2T,qDAAqD,CAAC5T,MAAD,EAAS3U,OAAT,CAAzD,CAAP;MACH;;MACDoC,QAAQ,GAAG;QACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;QAEP6T,OAAO,EAAEjnB;MAFF,CAAX;MAIAgV,IAAI,GAAGvW,OAAO,CAACyoB,qBAAR,CAA8BC,WAA9B,CAA0C/T,MAAM,CAAChU,IAAjD,EAAuD,UAAUgoB,KAAV,EAAiB;QAAE,OAAOxrB,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;UAClI,IAAIyrB,SAAJ,EAAeC,YAAf,EAA6BC,YAA7B,EAA2CC,WAA3C;;UACA,IAAI9oB,EAAJ;;UACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;YACnC,QAAQA,EAAE,CAACU,KAAX;cACI,KAAK,CAAL;gBACI+nB,SAAS,GAAG3jB,MAAM,CAACC,IAAP,CAAYyjB,KAAZ,EAAmB,CAAnB,CAAZ;gBACAE,YAAY,GAAG5jB,MAAM,CAAC+jB,OAAP,CAAeL,KAAK,CAACC,SAAD,CAAL,CAAiBroB,OAAhC,EAAyC4E,MAAzC,CAAgD,UAAU8jB,YAAV,EAAwBC,IAAxB,EAA8B;kBACzFD,YAAY,CAACC,IAAI,CAAC,CAAD,CAAL,CAAZ,GAAwBA,IAAI,CAAC,CAAD,CAAJ,CAAQC,KAAhC;kBACA,OAAOF,YAAP;gBACH,CAHc,EAGZ,EAHY,CAAf;gBAIAH,YAAY,GAAG;kBACXvoB,OAAO,EAAEsoB,YADE;kBAEXloB,IAAI,EAAEgoB,KAAK,CAACC,SAAD,CAAL,CAAiBjoB;gBAFZ,CAAf;gBAIAooB,WAAW,IAAI9oB,EAAE,GAAG,EAAL,EACXA,EAAE,CAAC2oB,SAAD,CAAF,GAAgBE,YADL,EAEX7oB,EAFO,CAAX;gBAGA,OAAO,CAAC,CAAD,EAAImpB,0DAA0D,CAACL,WAAD,EAAc/oB,OAAd,CAA9D,CAAP;;cACJ,KAAK,CAAL;gBAAQ,OAAO,CAAC,CAAD,EAAIG,EAAE,CAACY,IAAH,EAAJ,CAAP;YAfZ;UAiBH,CAlBiB,CAAlB;QAmBH,CAtBgG,CAAhB;MAsB5E,CAtBE,CAAP;MAuBAqB,QAAQ,CAAComB,OAAT,GAAmBjS,IAAnB;MACA,OAAO,CAAC,CAAD,EAAItB,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;IACH,CAjCiB,CAAlB;EAkCH,CApC0G,CAAhB;AAoCtF,CApCE;;AAqCP,IAAImmB,qDAAqD,GAAG,UAAU5T,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBwG,CAAhB;AAyBpF,CAzBL;;AA0BA,OAAO,IAAIiU,uCAAuC,GAAG,UAAU1U,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI0U,4CAA4C,CAAC3U,MAAD,EAAS3U,OAAT,CAAhD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPrQ,gBAAgB,EAAE/C,SAFX;YAGPyS,IAAI,EAAEzS,SAHC;YAIP+S,cAAc,EAAE/S,SAJT;YAKP0C,oBAAoB,EAAE1C,SALf;YAMP4C,iBAAiB,EAAE5C,SANZ;YAOP6C,WAAW,EAAE7C,SAPN;YAQPuC,oBAAoB,EAAEvC;UARf,CAAX;;UAUA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,8BAAf,MAAmDgB,SAAvD,EAAkE;YAC9Da,QAAQ,CAAC0B,oBAAT,GAAgC6Q,MAAM,CAACpU,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,MAAf,MAA2BgB,SAA/B,EAA0C;YACtCa,QAAQ,CAAC4R,IAAT,GAAgBW,MAAM,CAACpU,OAAP,CAAe,MAAf,CAAhB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;YACjFa,QAAQ,CAAC6B,oBAAT,GAAgC0Q,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAhC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,+CAAf,MAAoEgB,SAAxE,EAAmF;YAC/Ea,QAAQ,CAAC+B,iBAAT,GAA6BwQ,MAAM,CAACpU,OAAP,CAAe,+CAAf,CAA7B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,6CAAf,MAAkEgB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACgC,WAAT,GAAuBuQ,MAAM,CAACpU,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;YACjFa,QAAQ,CAACkC,gBAAT,GAA4B5F,cAAc,CAACiW,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIyU,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAvCR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7CiG,CAAhB;AA6C7E,CA7CE;;AA8CP,IAAIknB,4CAA4C,GAAG,UAAU3U,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB+F,CAAhB;AAyB3E,CAzBL;;AA0BA,OAAO,IAAImU,2CAA2C,GAAG,UAAU5U,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIiF,QAAJ,EAAcmU,IAAd,EAAoBtW,EAApB;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI4U,gDAAgD,CAAC7U,MAAD,EAAS3U,OAAT,CAApD,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPrQ,gBAAgB,EAAE/C,SAFX;YAGPkoB,cAAc,EAAEloB,SAHT;YAIPsV,mBAAmB,EAAEtV,SAJd;YAKP+S,cAAc,EAAE/S,SALT;YAMP0C,oBAAoB,EAAE1C,SANf;YAOP4C,iBAAiB,EAAE5C,SAPZ;YAQP6C,WAAW,EAAE7C,SARN;YASPuC,oBAAoB,EAAEvC;UATf,CAAX;;UAWA,IAAIoT,MAAM,CAACpU,OAAP,CAAe,8BAAf,MAAmDgB,SAAvD,EAAkE;YAC9Da,QAAQ,CAACyU,mBAAT,GAA+BlC,MAAM,CAACpU,OAAP,CAAe,8BAAf,CAA/B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,8BAAf,MAAmDgB,SAAvD,EAAkE;YAC9Da,QAAQ,CAAC0B,oBAAT,GAAgC6Q,MAAM,CAACpU,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;YACjFa,QAAQ,CAAC6B,oBAAT,GAAgC0Q,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAhC;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,+CAAf,MAAoEgB,SAAxE,EAAmF;YAC/Ea,QAAQ,CAAC+B,iBAAT,GAA6BwQ,MAAM,CAACpU,OAAP,CAAe,+CAAf,CAA7B;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,6CAAf,MAAkEgB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACgC,WAAT,GAAuBuQ,MAAM,CAACpU,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,iDAAf,MAAsEgB,SAA1E,EAAqF;YACjFa,QAAQ,CAACkC,gBAAT,GAA4B5F,cAAc,CAACiW,MAAM,CAACpU,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAIoU,MAAM,CAACpU,OAAP,CAAe,uBAAf,MAA4CgB,SAAhD,EAA2D;YACvDa,QAAQ,CAACkS,cAAT,GAA0BK,MAAM,CAACpU,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAGnC,cAAL;UACA,OAAO,CAAC,CAAD,EAAI4X,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIuW,IAAI,GAAGtW,EAAE,CAAC0V,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAqB,QAAQ,CAACqnB,cAAT,GAA0BC,oCAAoC,CAACnT,IAAD,EAAOvW,OAAP,CAA9D;UACA,OAAO,CAAC,CAAD,EAAIiV,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MA1CR;IA4CH,CA7CiB,CAAlB;EA8CH,CAhDqG,CAAhB;AAgDjF,CAhDE;;AAiDP,IAAIonB,gDAAgD,GAAG,UAAU7U,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzBmG,CAAhB;AAyB/E,CAzBL;;AA0BA,OAAO,IAAIuU,mDAAmD,GAAG,UAAUhV,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/I,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAI8T,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIgV,wDAAwD,CAACjV,MAAD,EAAS3U,OAAT,CAA5D,CAAP;UACH;;UACDoC,QAAQ,GAAG;YACP0S,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAIkU,OAAO,CAACC,OAAR,CAAgB9S,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB6G,CAAhB;AAiBzF,CAjBE;;AAkBP,IAAIwnB,wDAAwD,GAAG,UAAUjV,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAIgY,YAAJ,EAAkBlV,EAAlB,EAAsBmV,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,OAAvD;;IACA,IAAIpV,EAAJ;;IACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC/C,QAAQ,CAAC,EAAD,EAAKyX,MAAL,CAAT,CAAL;UACAxU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACImV,YAAY,GAAGjY,QAAQ,CAACyY,KAAT,CAAe,KAAK,CAApB,EAAuB1V,EAAE,CAAC2V,MAAH,CAAU,EAAEzV,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACAkV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,oBAAoB,CAAClB,MAAD,EAASQ,YAAY,CAACxU,IAAtB,CAAhC;;UACA,QAAQ0U,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACxU,IAA1B;cACA0U,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;cACAD,QAAQ,GAAGlY,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoY,UAAL,CAAT,EAA2B;gBAAES,IAAI,EAAE,KAAKV,SAAb;gBAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;gBAAwFc,MAAM,EAAE,QAAhG;gBAA0GrB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAAxI,CAA3B,CAAnB;UAJR;;UAMAY,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC,CAAD,EAAIjB,OAAO,CAACmB,MAAR,CAAenR,MAAM,CAACoR,MAAP,CAAc,IAAI5U,KAAJ,CAAU8T,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAJ,CAAP;MAlBR;IAoBH,CArBiB,CAAlB;EAsBH,CAzB2G,CAAhB;AAyBvF,CAzBL;;AA0BA,IAAIgU,0DAA0D,GAAG,UAAUzU,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/I,IAAI8C,EAAJ,EAAQE,EAAR,EAAYS,EAAZ,EAAgB4U,EAAhB,EAAoBC,EAApB;;IACA,OAAOrY,WAAW,CAAC,IAAD,EAAO,UAAU8Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrW,KAAX;QACI,KAAK,CAAL;UACI,IAAI,EAAE8T,MAAM,CAAC,SAAD,CAAN,KAAsBpT,SAAxB,CAAJ,EAAwC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UACxCtB,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAI4pB,wCAAwC,CAAClV,MAAM,CAAC,SAAD,CAAP,EAAoB3U,OAApB,CAA5C,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,GAAKC,EAAE,CAAC6pB,OAAH,GAAa5S,EAAE,CAACnW,IAAH,EAAb,EACZd,EADO,EAAP;;QAER,KAAK,CAAL;UACI,IAAI,EAAE0U,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAtB,CAAJ,EAAsC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UACtCpB,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAI4pB,sCAAsC,CAACpV,MAAM,CAAC,OAAD,CAAP,EAAkB3U,OAAlB,CAA1C,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,GAAKG,EAAE,CAAC6pB,KAAH,GAAW9S,EAAE,CAACnW,IAAH,EAAX,EACZZ,EADO,EAAP;;QAER,KAAK,CAAL;UACI,IAAI,EAAEwU,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAAzB,CAAJ,EAAyC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UACzCX,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIqpB,yCAAyC,CAACtV,MAAM,CAAC,UAAD,CAAP,EAAqB3U,OAArB,CAA7C,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,GAAKY,EAAE,CAACspB,QAAH,GAAchT,EAAE,CAACnW,IAAH,EAAd,EACZH,EADO,EAAP;;QAER,KAAK,CAAL;UACI,IAAI,EAAE+T,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAArB,CAAJ,EAAqC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UACrCiU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAI2U,6CAA6C,CAACxV,MAAM,CAAC,MAAD,CAAP,EAAiB3U,OAAjB,CAAjD,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,GAAKwV,EAAE,CAAC4U,IAAH,GAAUlT,EAAE,CAACnW,IAAH,EAAV,EACZyU,EADO,EAAP;;QAER,KAAK,CAAL;UACI,IAAI,EAAEb,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAApB,CAAJ,EAAoC,OAAO,CAAC,CAAD,EAAI,EAAJ,CAAP;UACpCkU,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAI4U,oCAAoC,CAAC1V,MAAM,CAAC,KAAD,CAAP,EAAgB3U,OAAhB,CAAxC,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,GAAKyV,EAAE,CAAC6U,GAAH,GAASpT,EAAE,CAACnW,IAAH,EAAT,EACZ0U,EADO,EAAP;;QAER,KAAK,EAAL;UAAS,OAAO,CAAC,CAAD,EAAI;YAAE8U,QAAQ,EAAE5V;UAAZ,CAAJ,CAAP;MA/Bb;IAiCH,CAlCiB,CAAlB;EAmCH,CArC6G,CAAhB;AAqCzF,CArCL;;AAsCA,IAAIwV,6CAA6C,GAAG,UAAUxV,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnCmC,QAAQ,GAAG,EAAX;MACA,OAAO,CAAC,CAAD,EAAIA,QAAJ,CAAP;IACH,CAHiB,CAAlB;EAIH,CANgG,CAAhB;AAM5E,CANL;;AAOA,IAAIioB,oCAAoC,GAAG,UAAU1V,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzH,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnCmC,QAAQ,GAAG,EAAX;MACA,OAAO,CAAC,CAAD,EAAIA,QAAJ,CAAP;IACH,CAHiB,CAAlB;EAIH,CANuF,CAAhB;AAMnE,CANL;;AAOA,IAAI6nB,yCAAyC,GAAG,UAAUtV,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9H,IAAIiF,QAAJ,EAAcnC,EAAd;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACIuB,QAAQ,GAAG,EAAX;UACAnC,EAAE,GAAGmC,QAAL;UACA,OAAO,CAAC,CAAD,EAAIsT,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACuqB,OAAH,GAAarqB,EAAE,CAACY,IAAH,EAAb;UACA,OAAO,CAAC,CAAD,EAAIqB,QAAJ,CAAP;MAPR;IASH,CAViB,CAAlB;EAWH,CAb4F,CAAhB;AAaxE,CAbL;;AAcA,IAAIynB,wCAAwC,GAAG,UAAUlV,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7H,IAAIiF,QAAJ;IACA,OAAOhF,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnCmC,QAAQ,GAAG,EAAX;MACAA,QAAQ,CAAComB,OAAT,GAAmB7T,MAAM,CAAChU,IAA1B;MACA,OAAO,CAAC,CAAD,EAAIyB,QAAJ,CAAP;IACH,CAJiB,CAAlB;EAKH,CAP2F,CAAhB;AAOvE,CAPL;;AAQA,IAAI2nB,sCAAsC,GAAG,UAAUpV,MAAV,EAAkB3U,OAAlB,EAA2B;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3H,IAAIiF,QAAJ,EAAcnC,EAAd;;IACA,OAAO7C,WAAW,CAAC,IAAD,EAAO,UAAU+C,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACIuB,QAAQ,GAAG,EAAX;UACAnC,EAAE,GAAGmC,QAAL;UACA,OAAO,CAAC,CAAD,EAAIsT,SAAS,CAACf,MAAM,CAAChU,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACuqB,OAAH,GAAarqB,EAAE,CAACY,IAAH,EAAb;UACA,OAAO,CAAC,CAAD,EAAIqB,QAAJ,CAAP;MAPR;IASH,CAViB,CAAlB;EAWH,CAbyF,CAAhB;AAarE,CAbL;;AAcA,IAAI+U,iDAAiD,GAAG,UAAUhC,YAAV,EAAwBnV,OAAxB,EAAiC;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIiF,QAAJ,EAAcmU,IAAd;IACA,OAAOnZ,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnCmC,QAAQ,GAAG;QACP2T,IAAI,EAAE,qBADC;QAEPI,MAAM,EAAE,QAFD;QAGPrB,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAHvB,CAAX;MAKAoB,IAAI,GAAGpB,YAAY,CAACxU,IAApB;MACA,OAAO,CAAC,CAAD,EAAIyB,QAAJ,CAAP;IACH,CARiB,CAAlB;EASH,CAX0G,CAAhB;AAWtF,CAXL;;AAYA,IAAIgV,qDAAqD,GAAG,UAAUjC,YAAV,EAAwBnV,OAAxB,EAAiC;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAIiF,QAAJ,EAAcmU,IAAd;IACA,OAAOnZ,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnCmC,QAAQ,GAAG;QACP2T,IAAI,EAAE,yBADC;QAEPI,MAAM,EAAE,QAFD;QAGPrB,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAHvB,CAAX;MAKAoB,IAAI,GAAGpB,YAAY,CAACxU,IAApB;MACA,OAAO,CAAC,CAAD,EAAIyB,QAAJ,CAAP;IACH,CARiB,CAAlB;EASH,CAX8G,CAAhB;AAW1F,CAXL;;AAYA,IAAIyd,gDAAgD,GAAG,UAAU1K,YAAV,EAAwBnV,OAAxB,EAAiC;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIiF,QAAJ,EAAcmU,IAAd;IACA,OAAOnZ,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnCmC,QAAQ,GAAG;QACP2T,IAAI,EAAE,oBADC;QAEPI,MAAM,EAAE,QAFD;QAGPrB,SAAS,EAAEC,mBAAmB,CAACI,YAAD,CAHvB;QAIPsV,UAAU,EAAElpB,SAJL;QAKPwC,YAAY,EAAExC;MALP,CAAX;MAOAgV,IAAI,GAAGpB,YAAY,CAACxU,IAApB;;MACA,IAAI4V,IAAI,CAAC,YAAD,CAAJ,KAAuBhV,SAA3B,EAAsC;QAClCa,QAAQ,CAACqoB,UAAT,GAAsBzsB,cAAc,CAACuY,IAAI,CAAC,YAAD,CAAL,CAApC;MACH;;MACD,IAAIA,IAAI,CAAC,cAAD,CAAJ,KAAyBhV,SAA7B,EAAwC;QACpCa,QAAQ,CAAC2B,YAAT,GAAwB/F,cAAc,CAACuY,IAAI,CAAC,cAAD,CAAL,CAAtC;MACH;;MACD,OAAO,CAAC,CAAD,EAAInU,QAAJ,CAAP;IACH,CAhBiB,CAAlB;EAiBH,CAnByG,CAAhB;AAmBrF,CAnBL;;AAoBA,IAAIwhB,0CAA0C,GAAG,UAAUzO,YAAV,EAAwBnV,OAAxB,EAAiC;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAIiF,QAAJ,EAAcmU,IAAd;IACA,OAAOnZ,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnCmC,QAAQ,GAAG;QACP2T,IAAI,EAAE,cADC;QAEPI,MAAM,EAAE,QAFD;QAGPrB,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAHvB,CAAX;MAKAoB,IAAI,GAAGpB,YAAY,CAACxU,IAApB;MACA,OAAO,CAAC,CAAD,EAAIyB,QAAJ,CAAP;IACH,CARiB,CAAlB;EASH,CAXmG,CAAhB;AAW/E,CAXL;;AAYA,IAAI0d,uCAAuC,GAAG,UAAU3K,YAAV,EAAwBnV,OAAxB,EAAiC;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAIiF,QAAJ,EAAcmU,IAAd;IACA,OAAOnZ,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnCmC,QAAQ,GAAG;QACP2T,IAAI,EAAE,WADC;QAEPI,MAAM,EAAE,QAFD;QAGPrB,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAHvB,CAAX;MAKAoB,IAAI,GAAGpB,YAAY,CAACxU,IAApB;MACA,OAAO,CAAC,CAAD,EAAIyB,QAAJ,CAAP;IACH,CARiB,CAAlB;EASH,CAXgG,CAAhB;AAW5E,CAXL;;AAYA,IAAI0T,0CAA0C,GAAG,UAAUX,YAAV,EAAwBnV,OAAxB,EAAiC;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAIiF,QAAJ,EAAcmU,IAAd;IACA,OAAOnZ,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnCmC,QAAQ,GAAG;QACP2T,IAAI,EAAE,cADC;QAEPI,MAAM,EAAE,QAFD;QAGPrB,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAHvB,CAAX;MAKAoB,IAAI,GAAGpB,YAAY,CAACxU,IAApB;MACA,OAAO,CAAC,CAAD,EAAIyB,QAAJ,CAAP;IACH,CARiB,CAAlB;EASH,CAXmG,CAAhB;AAW/E,CAXL;;AAYA,IAAI+e,sCAAsC,GAAG,UAAUhM,YAAV,EAAwBnV,OAAxB,EAAiC;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAIiF,QAAJ,EAAcmU,IAAd;IACA,OAAOnZ,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnCmC,QAAQ,GAAG;QACP2T,IAAI,EAAE,UADC;QAEPI,MAAM,EAAE,QAFD;QAGPrB,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAHvB,CAAX;MAKAoB,IAAI,GAAGpB,YAAY,CAACxU,IAApB;MACA,OAAO,CAAC,CAAD,EAAIyB,QAAJ,CAAP;IACH,CARiB,CAAlB;EASH,CAX+F,CAAhB;AAW3E,CAXL;;AAYA,IAAIimB,4DAA4D,GAAG,UAAUlT,YAAV,EAAwBnV,OAAxB,EAAiC;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvJ,IAAIiF,QAAJ,EAAcmU,IAAd;IACA,OAAOnZ,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnCmC,QAAQ,GAAG;QACP2T,IAAI,EAAE,gCADC;QAEPI,MAAM,EAAE,QAFD;QAGPrB,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAHvB,CAAX;MAKAoB,IAAI,GAAGpB,YAAY,CAACxU,IAApB;MACA,OAAO,CAAC,CAAD,EAAIyB,QAAJ,CAAP;IACH,CARiB,CAAlB;EASH,CAXqH,CAAhB;AAWjG,CAXL;;AAYA,IAAI2U,wDAAwD,GAAG,UAAU5B,YAAV,EAAwBnV,OAAxB,EAAiC;EAAE,OAAO7C,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAIiF,QAAJ,EAAcmU,IAAd;IACA,OAAOnZ,WAAW,CAAC,IAAD,EAAO,UAAU6C,EAAV,EAAc;MACnCmC,QAAQ,GAAG;QACP2T,IAAI,EAAE,4BADC;QAEPI,MAAM,EAAE,QAFD;QAGPrB,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAHvB,CAAX;MAKAoB,IAAI,GAAGpB,YAAY,CAACxU,IAApB;MACA,OAAO,CAAC,CAAD,EAAIyB,QAAJ,CAAP;IACH,CARiB,CAAlB;EASH,CAXiH,CAAhB;AAW7F,CAXL;;AAYA,IAAIsoB,kDAAkD,GAAG,UAAU3qB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,gCAAd,CAAf;;EACA,IAAIW,KAAK,CAAC4qB,mBAAN,KAA8BppB,SAA9B,IAA2CxB,KAAK,CAAC4qB,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAIrY,IAAI,GAAG,IAAIlT,SAAJ,CAAc,qBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC4qB,mBAAP,CAApB,CADP,EAENpoB,QAFM,CAEG,qBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAI5E,2CAA2C,GAAG,UAAU1N,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,yBAAd,CAAf;;EACA,IAAIW,KAAK,CAACka,MAAN,KAAiB1Y,SAAjB,IAA8BxB,KAAK,CAACka,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI3H,IAAI,GAAG,IAAIlT,SAAJ,CAAc,wBAAd,EAAwCqT,YAAxC,CAAqD,IAAInT,SAAJ,CAAcS,KAAK,CAACka,MAApB,CAArD,EAAkF1X,QAAlF,CAA2F,QAA3F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIxE,uCAAuC,GAAG,UAAU9N,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIW,KAAK,CAACqa,MAAN,KAAiB7Y,SAAjB,IAA8BxB,KAAK,CAACqa,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIyQ,KAAK,GAAGC,0BAA0B,CAAC/qB,KAAK,CAACqa,MAAP,EAAepa,OAAf,CAAtC;IACA,IAAI+qB,eAAe,GAAG,IAAI3rB,SAAJ,CAAc,mBAAd,CAAtB;IACAyrB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtByY,eAAe,CAACtY,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsBsY,eAAtB;EACH;;EACD,IAAIhrB,KAAK,CAACsa,KAAN,KAAgB9Y,SAAhB,IAA6BxB,KAAK,CAACsa,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI/H,IAAI,GAAG0Y,yBAAyB,CAACjrB,KAAK,CAACsa,KAAP,EAAcra,OAAd,CAAzB,CAAgDuC,QAAhD,CAAyD,OAAzD,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAI4Y,4CAA4C,GAAG,UAAUlrB,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,0BAAd,CAAf;;EACA,IAAIW,KAAK,CAACsa,KAAN,KAAgB9Y,SAAhB,IAA6BxB,KAAK,CAACsa,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI/H,IAAI,GAAG,IAAIlT,SAAJ,CAAc,eAAd,EAA+BqT,YAA/B,CAA4C,IAAInT,SAAJ,CAAcS,KAAK,CAACsa,KAApB,CAA5C,EAAwE9X,QAAxE,CAAiF,OAAjF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI6Y,kCAAkC,GAAG,UAAUnrB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG,IAAIlT,SAAJ,CAAc,eAAd,EAA+BqT,YAA/B,CAA4C,IAAInT,SAAJ,CAAc+rB,KAAd,CAA5C,CAAX;IACA,OAAO/Y,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI+oB,kCAAkC,GAAG,UAAUvrB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG,IAAIlT,SAAJ,CAAc,eAAd,EAA+BqT,YAA/B,CAA4C,IAAInT,SAAJ,CAAc+rB,KAAd,CAA5C,CAAX;IACA,OAAO/Y,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIgpB,kCAAkC,GAAG,UAAUxrB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG,IAAIlT,SAAJ,CAAc,eAAd,EAA+BqT,YAA/B,CAA4C,IAAInT,SAAJ,CAAc+rB,KAAd,CAA5C,CAAX;IACA,OAAO/Y,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIipB,wCAAwC,GAAG,UAAUzrB,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIW,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8BxB,KAAK,CAACwM,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI+F,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAcS,KAAK,CAACwM,MAApB,CAArC,EAAkEhK,QAAlE,CAA2E,QAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC0rB,IAAN,KAAelqB,SAAf,IAA4BxB,KAAK,CAAC0rB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIZ,KAAK,GAAGa,0BAA0B,CAAC3rB,KAAK,CAAC0rB,IAAP,EAAazrB,OAAb,CAAtC;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,KAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAdD;;AAeA,IAAIrE,0CAA0C,GAAG,UAAUjO,KAAV,EAAiBC,OAAjB,EAA0B;EACvE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,wBAAd,CAAf;;EACA,IAAIW,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0BxB,KAAK,CAACmG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIoM,IAAI,GAAG,IAAIlT,SAAJ,CAAc,aAAd,EAA6BqT,YAA7B,CAA0C,IAAInT,SAAJ,CAAcS,KAAK,CAACmG,EAApB,CAA1C,EAAmE3D,QAAnE,CAA4E,IAA5E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC4rB,MAAN,KAAiBpqB,SAAjB,IAA8BxB,KAAK,CAAC4rB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIrZ,IAAI,GAAGsZ,mCAAmC,CAAC7rB,KAAK,CAAC4rB,MAAP,EAAe3rB,OAAf,CAAnC,CAA2DuC,QAA3D,CAAoE,QAApE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC8rB,oBAAN,KAA+BtqB,SAA/B,IAA4CxB,KAAK,CAAC8rB,oBAAN,KAA+B,IAA/E,EAAqF;IACjF,IAAIvZ,IAAI,GAAGwZ,wCAAwC,CAAC/rB,KAAK,CAAC8rB,oBAAP,EAA6B7rB,OAA7B,CAAxC,CAA8EuC,QAA9E,CAAuF,sBAAvF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAI0Z,8CAA8C,GAAG,UAAUhsB,KAAV,EAAiBC,OAAjB,EAA0B;EAC3E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,4BAAd,CAAf;;EACA,IAAIW,KAAK,CAACisB,mBAAN,KAA8BzqB,SAA9B,IAA2CxB,KAAK,CAACisB,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAI1Z,IAAI,GAAG2Z,gDAAgD,CAAClsB,KAAK,CAACisB,mBAAP,EAA4BhsB,OAA5B,CAAhD,CAAqFuC,QAArF,CAA8F,qBAA9F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIuZ,mCAAmC,GAAG,UAAU7rB,KAAV,EAAiBC,OAAjB,EAA0B;EAChE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,iBAAd,CAAf;EACAM,eAAe,CAACwsB,KAAhB,CAAsBnsB,KAAtB,EAA6B;IACzBwM,MAAM,EAAE,UAAU4c,KAAV,EAAiB;MACrB,IAAI7W,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAc6pB,KAAd,CAArC,EAA2D5mB,QAA3D,CAAoE,QAApE,CAAX;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAJwB;IAKzB6Z,GAAG,EAAE,UAAUhD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAG8Z,uBAAuB,CAACjD,KAAD,EAAQnpB,OAAR,CAAvB,CAAwCuC,QAAxC,CAAiD,KAAjD,CAAX;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CARwB;IASzB+Z,GAAG,EAAE,UAAUlD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAGkZ,wCAAwC,CAACrC,KAAD,EAAQnpB,OAAR,CAAxC,CAAyDuC,QAAzD,CAAkE,KAAlE,CAAX;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAZwB;IAazBga,CAAC,EAAE,UAAUvW,IAAV,EAAgBoT,KAAhB,EAAuB;MACtB,IAAI,EAAEA,KAAK,YAAY/pB,SAAjB,IAA8B+pB,KAAK,YAAY7pB,SAAjD,CAAJ,EAAiE;QAC7D,MAAM,IAAImC,KAAJ,CAAU,mDAAV,CAAN;MACH;;MACD4Q,QAAQ,CAACI,YAAT,CAAsB,IAAIrT,SAAJ,CAAc2W,IAAd,EAAoBtD,YAApB,CAAiC0W,KAAjC,CAAtB;IACH;EAlBwB,CAA7B;EAoBA,OAAO9W,QAAP;AACH,CAvBD;;AAwBA,IAAI4Z,gDAAgD,GAAG,UAAUlsB,KAAV,EAAiBC,OAAjB,EAA0B;EAC7E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,8BAAd,CAAf;;EACA,IAAIW,KAAK,CAACwsB,MAAN,KAAiBhrB,SAAjB,IAA8BxB,KAAK,CAACwsB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIja,IAAI,GAAG,IAAIlT,SAAJ,CAAc,6BAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACwsB,MAApB,CADP,EAENhqB,QAFM,CAEG,QAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACysB,eAAN,KAA0BjrB,SAA1B,IAAuCxB,KAAK,CAACysB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAIla,IAAI,GAAG,IAAIlT,SAAJ,CAAc,WAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACysB,eAApB,CADP,EAENjqB,QAFM,CAEG,iBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACuB,MAAN,KAAiBC,SAAjB,IAA8BxB,KAAK,CAACuB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIgR,IAAI,GAAG,IAAIlT,SAAJ,CAAc,YAAd,EAA4BqT,YAA5B,CAAyC,IAAInT,SAAJ,CAAcS,KAAK,CAACuB,MAApB,CAAzC,EAAsEiB,QAAtE,CAA+E,QAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8BxB,KAAK,CAACwM,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI+F,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAcS,KAAK,CAACwM,MAApB,CAArC,EAAkEhK,QAAlE,CAA2E,QAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAvBD;;AAwBA,IAAItD,gDAAgD,GAAG,UAAUhP,KAAV,EAAiBC,OAAjB,EAA0B;EAC7E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,8BAAd,CAAf;;EACA,IAAIW,KAAK,CAAC6b,KAAN,KAAgBra,SAAhB,IAA6BxB,KAAK,CAAC6b,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIiP,KAAK,GAAG4B,kCAAkC,CAAC1sB,KAAK,CAAC6b,KAAP,EAAc5b,OAAd,CAA9C;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,MAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAVD;;AAWA,IAAInD,uCAAuC,GAAG,UAAUnP,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIW,KAAK,CAACqc,cAAN,KAAyB7a,SAAzB,IAAsCxB,KAAK,CAACqc,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAI9J,IAAI,GAAGoa,kCAAkC,CAAC3sB,KAAK,CAACqc,cAAP,EAAuBpc,OAAvB,CAAlC,CAAkEuC,QAAlE,CAA2E,gBAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI/P,4CAA4C,GAAG,UAAUvC,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,0BAAd,CAAf;;EACA,IAAIW,KAAK,CAAC6kB,KAAN,KAAgBrjB,SAAhB,IAA6BxB,KAAK,CAAC6kB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIiG,KAAK,GAAG8B,qCAAqC,CAAC5sB,KAAK,CAAC6kB,KAAP,EAAc5kB,OAAd,CAAjD;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,MAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAVD;;AAWA,IAAIua,iCAAiC,GAAG,UAAU7sB,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,eAAd,CAAf;;EACA,IAAIW,KAAK,CAACiU,IAAN,KAAezS,SAAf,IAA4BxB,KAAK,CAACiU,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI1B,IAAI,GAAG,IAAIlT,SAAJ,CAAc,MAAd,EAAsBqT,YAAtB,CAAmC,IAAInT,SAAJ,CAAcS,KAAK,CAACiU,IAApB,CAAnC,EAA8DzR,QAA9D,CAAuE,MAAvE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC+K,UAAN,KAAqBvJ,SAArB,IAAkCxB,KAAK,CAAC+K,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAIwH,IAAI,GAAG,IAAIlT,SAAJ,CAAc,YAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC+K,UAAP,CAApB,CADP,EAENvI,QAFM,CAEG,YAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAbD;;AAcA,IAAIsa,qCAAqC,GAAG,UAAU5sB,KAAV,EAAiBC,OAAjB,EAA0B;EAClE,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAGsa,iCAAiC,CAACvB,KAAD,EAAQrrB,OAAR,CAA5C;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIsqB,6BAA6B,GAAG,UAAU9sB,KAAV,EAAiBC,OAAjB,EAA0B;EAC1D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,WAAd,CAAf;;EACA,IAAIW,KAAK,CAAC+sB,2BAAN,KAAsCvrB,SAAtC,IAAmDxB,KAAK,CAAC+sB,2BAAN,KAAsC,IAA7F,EAAmG;IAC/F,IAAIxa,IAAI,GAAG,IAAIlT,SAAJ,CAAc,6BAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC+sB,2BAApB,CADP,EAENvqB,QAFM,CAEG,6BAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACgtB,eAAN,KAA0BxrB,SAA1B,IAAuCxB,KAAK,CAACgtB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAIza,IAAI,GAAG,IAAIlT,SAAJ,CAAc,iBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACgtB,eAApB,CADP,EAENxqB,QAFM,CAEG,iBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAIlE,qCAAqC,GAAG,UAAUpO,KAAV,EAAiBC,OAAjB,EAA0B;EAClE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,mBAAd,CAAf;;EACA,IAAIW,KAAK,CAAC+a,SAAN,KAAoBvZ,SAApB,IAAiCxB,KAAK,CAAC+a,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAI+P,KAAK,GAAGmC,6BAA6B,CAACjtB,KAAK,CAAC+a,SAAP,EAAkB9a,OAAlB,CAAzC;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,UAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAVD;;AAWA,IAAI4a,4BAA4B,GAAG,UAAUltB,KAAV,EAAiBC,OAAjB,EAA0B;EACzD,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,UAAd,CAAf;;EACA,IAAIW,KAAK,CAACmtB,EAAN,KAAa3rB,SAAb,IAA0BxB,KAAK,CAACmtB,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAI5a,IAAI,GAAG,IAAIlT,SAAJ,CAAc,IAAd,EAAoBqT,YAApB,CAAiC,IAAInT,SAAJ,CAAcS,KAAK,CAACmtB,EAApB,CAAjC,EAA0D3qB,QAA1D,CAAmE,IAAnE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACotB,cAAN,KAAyB5rB,SAAzB,IAAsCxB,KAAK,CAACotB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAItC,KAAK,GAAGK,kCAAkC,CAACnrB,KAAK,CAACotB,cAAP,EAAuBntB,OAAvB,CAA9C;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,eAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAACqtB,cAAN,KAAyB7rB,SAAzB,IAAsCxB,KAAK,CAACqtB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIvC,KAAK,GAAGS,kCAAkC,CAACvrB,KAAK,CAACqtB,cAAP,EAAuBptB,OAAvB,CAA9C;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,eAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAACstB,cAAN,KAAyB9rB,SAAzB,IAAsCxB,KAAK,CAACstB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIxC,KAAK,GAAGU,kCAAkC,CAACxrB,KAAK,CAACstB,cAAP,EAAuBrtB,OAAvB,CAA9C;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,eAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAACutB,aAAN,KAAwB/rB,SAAxB,IAAqCxB,KAAK,CAACutB,aAAN,KAAwB,IAAjE,EAAuE;IACnE,IAAIzC,KAAK,GAAG0C,iCAAiC,CAACxtB,KAAK,CAACutB,aAAP,EAAsBttB,OAAtB,CAA7C;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,cAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAACytB,aAAN,KAAwBjsB,SAAxB,IAAqCxB,KAAK,CAACytB,aAAN,KAAwB,IAAjE,EAAuE;IACnE,IAAIlb,IAAI,GAAG,IAAIlT,SAAJ,CAAc,eAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACytB,aAAP,CAApB,CADP,EAENjrB,QAFM,CAEG,eAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAzCD;;AA0CA,IAAI2a,6BAA6B,GAAG,UAAUjtB,KAAV,EAAiBC,OAAjB,EAA0B;EAC1D,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG2a,4BAA4B,CAAC5B,KAAD,EAAQrrB,OAAR,CAAvC;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIqD,6CAA6C,GAAG,UAAU7F,KAAV,EAAiBC,OAAjB,EAA0B;EAC1E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,2BAAd,CAAf;;EACA,IAAIW,KAAK,CAACkc,kBAAN,KAA6B1a,SAA7B,IAA0CxB,KAAK,CAACkc,kBAAN,KAA6B,IAA3E,EAAiF;IAC7E,IAAI3J,IAAI,GAAG,IAAIlT,SAAJ,CAAc,0BAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACkc,kBAApB,CADP,EAEN1Z,QAFM,CAEG,oBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIob,4BAA4B,GAAG,UAAU1tB,KAAV,EAAiBC,OAAjB,EAA0B;EACzD,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,UAAd,CAAf;;EACA,IAAIW,KAAK,CAAC2tB,cAAN,KAAyBnsB,SAAzB,IAAsCxB,KAAK,CAAC2tB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIpb,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC2tB,cAApB,CADP,EAENnrB,QAFM,CAEG,gBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC4tB,QAAN,KAAmBpsB,SAAnB,IAAgCxB,KAAK,CAAC4tB,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAIrb,IAAI,GAAG,IAAIlT,SAAJ,CAAc,UAAd,EAA0BqT,YAA1B,CAAuC,IAAInT,SAAJ,CAAcS,KAAK,CAAC4tB,QAApB,CAAvC,EAAsEprB,QAAtE,CAA+E,UAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC6tB,oBAAN,KAA+BrsB,SAA/B,IAA4CxB,KAAK,CAAC6tB,oBAAN,KAA+B,IAA/E,EAAqF;IACjF,IAAItb,IAAI,GAAG,IAAIlT,SAAJ,CAAc,sBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC6tB,oBAApB,CADP,EAENrrB,QAFM,CAEG,sBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC8tB,eAAN,KAA0BtsB,SAA1B,IAAuCxB,KAAK,CAAC8tB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAIvb,IAAI,GAAG,IAAIlT,SAAJ,CAAc,iBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC8tB,eAApB,CADP,EAENtrB,QAFM,CAEG,iBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC+tB,cAAN,KAAyBvsB,SAAzB,IAAsCxB,KAAK,CAAC+tB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIxb,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC+tB,cAApB,CADP,EAENvrB,QAFM,CAEG,gBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACguB,cAAN,KAAyBxsB,SAAzB,IAAsCxB,KAAK,CAACguB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIzb,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACguB,cAApB,CADP,EAENxrB,QAFM,CAEG,gBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACiuB,0BAAN,KAAqCzsB,SAArC,IAAkDxB,KAAK,CAACiuB,0BAAN,KAAqC,IAA3F,EAAiG;IAC7F,IAAI1b,IAAI,GAAG,IAAIlT,SAAJ,CAAc,4BAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACiuB,0BAAP,CAApB,CADP,EAENzrB,QAFM,CAEG,4BAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA3CD;;AA4CA,IAAI4b,6BAA6B,GAAG,UAAUluB,KAAV,EAAiBC,OAAjB,EAA0B;EAC1D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,WAAd,CAAf;;EACA,IAAIW,KAAK,CAACmuB,WAAN,KAAsB3sB,SAAtB,IAAmCxB,KAAK,CAACmuB,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAI5b,IAAI,GAAG,IAAIlT,SAAJ,CAAc,aAAd,EAA6BqT,YAA7B,CAA0C,IAAInT,SAAJ,CAAcS,KAAK,CAACmuB,WAApB,CAA1C,EAA4E3rB,QAA5E,CAAqF,aAArF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC6tB,oBAAN,KAA+BrsB,SAA/B,IAA4CxB,KAAK,CAAC6tB,oBAAN,KAA+B,IAA/E,EAAqF;IACjF,IAAItb,IAAI,GAAG,IAAIlT,SAAJ,CAAc,sBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC6tB,oBAApB,CADP,EAENrrB,QAFM,CAEG,sBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC8tB,eAAN,KAA0BtsB,SAA1B,IAAuCxB,KAAK,CAAC8tB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAIvb,IAAI,GAAG,IAAIlT,SAAJ,CAAc,iBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC8tB,eAApB,CADP,EAENtrB,QAFM,CAEG,iBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC+tB,cAAN,KAAyBvsB,SAAzB,IAAsCxB,KAAK,CAAC+tB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIxb,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC+tB,cAApB,CADP,EAENvrB,QAFM,CAEG,gBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACguB,cAAN,KAAyBxsB,SAAzB,IAAsCxB,KAAK,CAACguB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIzb,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACguB,cAApB,CADP,EAENxrB,QAFM,CAEG,gBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA/BD;;AAgCA,IAAI8b,oCAAoC,GAAG,UAAUpuB,KAAV,EAAiBC,OAAjB,EAA0B;EACjE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,kBAAd,CAAf;;EACA,IAAIW,KAAK,CAACquB,IAAN,KAAe7sB,SAAf,IAA4BxB,KAAK,CAACquB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI9b,IAAI,GAAG,IAAIlT,SAAJ,CAAc,yBAAd,EAAyCqT,YAAzC,CAAsD,IAAInT,SAAJ,CAAcS,KAAK,CAACquB,IAApB,CAAtD,EAAiF7rB,QAAjF,CAA0F,MAA1F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACsuB,IAAN,KAAe9sB,SAAf,IAA4BxB,KAAK,CAACsuB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI/b,IAAI,GAAG,IAAIlT,SAAJ,CAAc,MAAd,EAAsBqT,YAAtB,CAAmC,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACsuB,IAAP,CAApB,CAAnC,EAAsE9rB,QAAtE,CAA+E,MAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACuuB,KAAN,KAAgB/sB,SAAhB,IAA6BxB,KAAK,CAACuuB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIhc,IAAI,GAAG,IAAIlT,SAAJ,CAAc,OAAd,EAAuBqT,YAAvB,CAAoC,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACuuB,KAAP,CAApB,CAApC,EAAwE/rB,QAAxE,CAAiF,OAAjF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAIpK,0BAA0B,GAAG,UAAUlI,KAAV,EAAiBC,OAAjB,EAA0B;EACvD,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,QAAd,CAAf;;EACA,IAAIW,KAAK,CAACwuB,OAAN,KAAkBhtB,SAAlB,IAA+BxB,KAAK,CAACwuB,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAI1D,KAAK,GAAG2D,wCAAwC,CAACzuB,KAAK,CAACwuB,OAAP,EAAgBvuB,OAAhB,CAApD;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAAC0uB,KAAN,KAAgBltB,SAAhB,IAA6BxB,KAAK,CAAC0uB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAInc,IAAI,GAAG,IAAIlT,SAAJ,CAAc,OAAd,EAAuBqT,YAAvB,CAAoC,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC0uB,KAAP,CAApB,CAApC,EAAwElsB,QAAxE,CAAiF,OAAjF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAdD;;AAeA,IAAIqc,2CAA2C,GAAG,UAAU3uB,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,yBAAd,CAAf;;EACA,IAAIW,KAAK,CAACka,MAAN,KAAiB1Y,SAAjB,IAA8BxB,KAAK,CAACka,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI3H,IAAI,GAAG,IAAIlT,SAAJ,CAAc,+BAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACka,MAApB,CADP,EAEN1X,QAFM,CAEG,QAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIsc,+BAA+B,GAAG,UAAU5uB,KAAV,EAAiBC,OAAjB,EAA0B;EAC5D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,aAAd,CAAf;;EACA,IAAIW,KAAK,CAACuB,MAAN,KAAiBC,SAAjB,IAA8BxB,KAAK,CAACuB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIgR,IAAI,GAAG,IAAIlT,SAAJ,CAAc,YAAd,EAA4BqT,YAA5B,CAAyC,IAAInT,SAAJ,CAAcS,KAAK,CAACuB,MAApB,CAAzC,EAAsEiB,QAAtE,CAA+E,QAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC6uB,OAAN,KAAkBrtB,SAAlB,IAA+BxB,KAAK,CAAC6uB,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAItc,IAAI,GAAG,IAAIlT,SAAJ,CAAc,WAAd,EAA2BqT,YAA3B,CAAwC,IAAInT,SAAJ,CAAcS,KAAK,CAAC6uB,OAApB,CAAxC,EAAsErsB,QAAtE,CAA+E,SAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACgE,YAAN,KAAuBxC,SAAvB,IAAoCxB,KAAK,CAACgE,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIuO,IAAI,GAAG,IAAIlT,SAAJ,CAAc,cAAd,EAA8BqT,YAA9B,CAA2C,IAAInT,SAAJ,CAAcS,KAAK,CAACgE,YAApB,CAA3C,EAA8ExB,QAA9E,CAAuF,cAAvF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC8uB,wBAAN,KAAmCttB,SAAnC,IAAgDxB,KAAK,CAAC8uB,wBAAN,KAAmC,IAAvF,EAA6F;IACzF,IAAIvc,IAAI,GAAG2Y,4CAA4C,CAAClrB,KAAK,CAAC8uB,wBAAP,EAAiC7uB,OAAjC,CAA5C,CAAsFuC,QAAtF,CAA+F,0BAA/F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC+uB,uBAAN,KAAkCvtB,SAAlC,IAA+CxB,KAAK,CAAC+uB,uBAAN,KAAkC,IAArF,EAA2F;IACvF,IAAIxc,IAAI,GAAGyc,2CAA2C,CAAChvB,KAAK,CAAC+uB,uBAAP,EAAgC9uB,OAAhC,CAA3C,CAAoFuC,QAApF,CAA6F,yBAA7F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACivB,eAAN,KAA0BztB,SAA1B,IAAuCxB,KAAK,CAACivB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAI1c,IAAI,GAAG2c,mCAAmC,CAAClvB,KAAK,CAACivB,eAAP,EAAwBhvB,OAAxB,CAAnC,CAAoEuC,QAApE,CAA6E,iBAA7E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACmvB,OAAN,KAAkB3tB,SAAlB,IAA+BxB,KAAK,CAACmvB,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAI5c,IAAI,GAAG6c,2BAA2B,CAACpvB,KAAK,CAACmvB,OAAP,EAAgBlvB,OAAhB,CAA3B,CAAoDuC,QAApD,CAA6D,SAA7D,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA/BD;;AAgCA,IAAI+c,8BAA8B,GAAG,UAAUrvB,KAAV,EAAiBC,OAAjB,EAA0B;EAC3D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,YAAd,CAAf;;EACA,IAAIW,KAAK,CAACsvB,cAAN,KAAyB9tB,SAAzB,IAAsCxB,KAAK,CAACsvB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAI/c,IAAI,GAAG,IAAIlT,SAAJ,CAAc,sBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACsvB,cAApB,CADP,EAEN9sB,QAFM,CAEG,gBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACuvB,QAAN,KAAmB/tB,SAAnB,IAAgCxB,KAAK,CAACuvB,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAIhd,IAAI,GAAG,IAAIlT,SAAJ,CAAc,aAAd,EAA6BqT,YAA7B,CAA0C,IAAInT,SAAJ,CAAcS,KAAK,CAACuvB,QAApB,CAA1C,EAAyE/sB,QAAzE,CAAkF,UAAlF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACwvB,UAAN,KAAqBhuB,SAArB,IAAkCxB,KAAK,CAACwvB,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAIjd,IAAI,GAAG,IAAIlT,SAAJ,CAAc,YAAd,EAA4BqT,YAA5B,CAAyC,IAAInT,SAAJ,CAAcS,KAAK,CAACwvB,UAApB,CAAzC,EAA0EhtB,QAA1E,CAAmF,YAAnF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAjBD;;AAkBA,IAAI0c,2CAA2C,GAAG,UAAUhvB,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,yBAAd,CAAf;;EACA,IAAIW,KAAK,CAACyvB,eAAN,KAA0BjuB,SAA1B,IAAuCxB,KAAK,CAACyvB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAIld,IAAI,GAAG,IAAIlT,SAAJ,CAAc,iBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACyvB,eAApB,CADP,EAENjtB,QAFM,CAEG,iBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIod,iCAAiC,GAAG,UAAU1vB,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,eAAd,CAAf;;EACA,IAAIW,KAAK,CAAC4B,GAAN,KAAcJ,SAAd,IAA2BxB,KAAK,CAAC4B,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAI2Q,IAAI,GAAG,IAAIlT,SAAJ,CAAc,WAAd,EAA2BqT,YAA3B,CAAwC,IAAInT,SAAJ,CAAcS,KAAK,CAAC4B,GAApB,CAAxC,EAAkEY,QAAlE,CAA2E,KAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIqd,4CAA4C,GAAG,UAAU3vB,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,0BAAd,CAAf;EACA,OAAOiT,QAAP;AACH,CAHD;;AAIA,IAAIsd,6BAA6B,GAAG,UAAU5vB,KAAV,EAAiBC,OAAjB,EAA0B;EAC1D,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG,IAAIlT,SAAJ,CAAc,OAAd,EAAuBqT,YAAvB,CAAoC,IAAInT,SAAJ,CAAc+rB,KAAd,CAApC,CAAX;IACA,OAAO/Y,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIqtB,6CAA6C,GAAG,UAAU7vB,KAAV,EAAiBC,OAAjB,EAA0B;EAC1E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,2BAAd,CAAf;;EACA,IAAIW,KAAK,CAACka,MAAN,KAAiB1Y,SAAjB,IAA8BxB,KAAK,CAACka,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI3H,IAAI,GAAG,IAAIlT,SAAJ,CAAc,iCAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACka,MAApB,CADP,EAEN1X,QAFM,CAEG,QAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIkb,iCAAiC,GAAG,UAAUxtB,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG,IAAIlT,SAAJ,CAAc,cAAd,EAA8BqT,YAA9B,CAA2C,IAAInT,SAAJ,CAAc+rB,KAAd,CAA3C,CAAX;IACA,OAAO/Y,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIstB,8BAA8B,GAAG,UAAU9vB,KAAV,EAAiBC,OAAjB,EAA0B;EAC3D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,YAAd,CAAf;;EACA,IAAIW,KAAK,CAAC0jB,IAAN,KAAeliB,SAAf,IAA4BxB,KAAK,CAAC0jB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAInR,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EAAgCqT,YAAhC,CAA6C,IAAInT,SAAJ,CAAcS,KAAK,CAAC0jB,IAApB,CAA7C,EAAwElhB,QAAxE,CAAiF,MAAjF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC+vB,KAAN,KAAgBvuB,SAAhB,IAA6BxB,KAAK,CAAC+vB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIxd,IAAI,GAAG,IAAIlT,SAAJ,CAAc,iBAAd,EAAiCqT,YAAjC,CAA8C,IAAInT,SAAJ,CAAcS,KAAK,CAAC+vB,KAApB,CAA9C,EAA0EvtB,QAA1E,CAAmF,OAAnF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAI0d,kCAAkC,GAAG,UAAUhwB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAGud,8BAA8B,CAACxE,KAAD,EAAQrrB,OAAR,CAAzC;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIytB,wCAAwC,GAAG,UAAUjwB,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIW,KAAK,CAACkwB,IAAN,KAAe1uB,SAAf,IAA4BxB,KAAK,CAACkwB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI3d,IAAI,GAAG,IAAIlT,SAAJ,CAAc,MAAd,EAAsBqT,YAAtB,CAAmC,IAAInT,SAAJ,CAAcS,KAAK,CAACkwB,IAApB,CAAnC,EAA8D1tB,QAA9D,CAAuE,MAAvE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI6d,yBAAyB,GAAG,UAAUnwB,KAAV,EAAiBC,OAAjB,EAA0B;EACtD,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,OAAd,CAAf;;EACA,IAAIW,KAAK,CAACowB,OAAN,KAAkB5uB,SAAlB,IAA+BxB,KAAK,CAACowB,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAI7d,IAAI,GAAG8d,2BAA2B,CAACrwB,KAAK,CAACowB,OAAP,EAAgBnwB,OAAhB,CAA3B,CAAoDuC,QAApD,CAA6D,SAA7D,CAAX;IACA+P,IAAI,CAAC9P,YAAL,CAAkB,WAAlB,EAA+B,2CAA/B;IACA6P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACswB,UAAN,KAAqB9uB,SAArB,IAAkCxB,KAAK,CAACswB,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAI/d,IAAI,GAAG,IAAIlT,SAAJ,CAAc,YAAd,EAA4BqT,YAA5B,CAAyC,IAAInT,SAAJ,CAAcS,KAAK,CAACswB,UAApB,CAAzC,EAA0E9tB,QAA1E,CAAmF,YAAnF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAZD;;AAaA,IAAI+d,2BAA2B,GAAG,UAAUrwB,KAAV,EAAiBC,OAAjB,EAA0B;EACxD,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,SAAd,CAAf;;EACA,IAAIW,KAAK,CAACuwB,WAAN,KAAsB/uB,SAAtB,IAAmCxB,KAAK,CAACuwB,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAIhe,IAAI,GAAG,IAAIlT,SAAJ,CAAc,aAAd,EAA6BqT,YAA7B,CAA0C,IAAInT,SAAJ,CAAcS,KAAK,CAACuwB,WAApB,CAA1C,EAA4E/tB,QAA5E,CAAqF,aAArF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACwwB,YAAN,KAAuBhvB,SAAvB,IAAoCxB,KAAK,CAACwwB,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIje,IAAI,GAAG,IAAIlT,SAAJ,CAAc,cAAd,EAA8BqT,YAA9B,CAA2C,IAAInT,SAAJ,CAAcS,KAAK,CAACwwB,YAApB,CAA3C,EAA8EhuB,QAA9E,CAAuF,cAAvF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACmtB,EAAN,KAAa3rB,SAAb,IAA0BxB,KAAK,CAACmtB,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAI5a,IAAI,GAAG,IAAIlT,SAAJ,CAAc,IAAd,EAAoBqT,YAApB,CAAiC,IAAInT,SAAJ,CAAcS,KAAK,CAACmtB,EAApB,CAAjC,EAA0D3qB,QAA1D,CAAmE,IAAnE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACywB,GAAN,KAAcjvB,SAAd,IAA2BxB,KAAK,CAACywB,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIle,IAAI,GAAG,IAAIlT,SAAJ,CAAc,KAAd,EAAqBqT,YAArB,CAAkC,IAAInT,SAAJ,CAAcS,KAAK,CAACywB,GAApB,CAAlC,EAA4DjuB,QAA5D,CAAqE,KAArE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC0wB,IAAN,KAAelvB,SAAf,IAA4BxB,KAAK,CAAC0wB,IAAN,KAAe,IAA/C,EAAqD;IACjDpe,QAAQ,CAAC7P,YAAT,CAAsB,UAAtB,EAAkCzC,KAAK,CAAC0wB,IAAxC;EACH;;EACD,OAAOpe,QAAP;AACH,CAtBD;;AAuBA,IAAIyY,0BAA0B,GAAG,UAAU/qB,KAAV,EAAiBC,OAAjB,EAA0B;EACvD,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG4d,yBAAyB,CAAC7E,KAAD,EAAQrrB,OAAR,CAApC;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,OAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAImuB,iCAAiC,GAAG,UAAU3wB,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,eAAd,CAAf;;EACA,IAAIW,KAAK,CAAC4wB,MAAN,KAAiBpvB,SAAjB,IAA8BxB,KAAK,CAAC4wB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIre,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAcS,KAAK,CAAC4wB,MAApB,CAArC,EAAkEpuB,QAAlE,CAA2E,QAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIO,sCAAsC,GAAG,UAAU7S,KAAV,EAAiBC,OAAjB,EAA0B;EACnE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,oBAAd,CAAf;;EACA,IAAIW,KAAK,CAAC6wB,GAAN,KAAcrvB,SAAd,IAA2BxB,KAAK,CAAC6wB,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIte,IAAI,GAAGmb,4BAA4B,CAAC1tB,KAAK,CAAC6wB,GAAP,EAAY5wB,OAAZ,CAA5B,CAAiDuC,QAAjD,CAA0D,KAA1D,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC8wB,eAAN,KAA0BtvB,SAA1B,IAAuCxB,KAAK,CAAC8wB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAIve,IAAI,GAAG,IAAIlT,SAAJ,CAAc,iBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC8wB,eAApB,CADP,EAENtuB,QAFM,CAEG,iBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC+wB,IAAN,KAAevvB,SAAf,IAA4BxB,KAAK,CAAC+wB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIxe,IAAI,GAAGye,6BAA6B,CAAChxB,KAAK,CAAC+wB,IAAP,EAAa9wB,OAAb,CAA7B,CAAmDuC,QAAnD,CAA4D,MAA5D,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACixB,OAAN,KAAkBzvB,SAAlB,IAA+BxB,KAAK,CAACixB,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAI1e,IAAI,GAAG2e,gCAAgC,CAAClxB,KAAK,CAACixB,OAAP,EAAgBhxB,OAAhB,CAAhC,CAAyDuC,QAAzD,CAAkE,SAAlE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CArBD;;AAsBA,IAAI6e,iDAAiD,GAAG,UAAUnxB,KAAV,EAAiBC,OAAjB,EAA0B;EAC9E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,+BAAd,CAAf;;EACA,IAAIW,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8BxB,KAAK,CAACwM,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI+F,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAcS,KAAK,CAACwM,MAApB,CAArC,EAAkEhK,QAAlE,CAA2E,QAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC0rB,IAAN,KAAelqB,SAAf,IAA4BxB,KAAK,CAAC0rB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIZ,KAAK,GAAGa,0BAA0B,CAAC3rB,KAAK,CAAC0rB,IAAP,EAAazrB,OAAb,CAAtC;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,KAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAdD;;AAeA,IAAI5D,mDAAmD,GAAG,UAAU1O,KAAV,EAAiBC,OAAjB,EAA0B;EAChF,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,iCAAd,CAAf;;EACA,IAAIW,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0BxB,KAAK,CAACmG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIoM,IAAI,GAAG,IAAIlT,SAAJ,CAAc,sBAAd,EAAsCqT,YAAtC,CAAmD,IAAInT,SAAJ,CAAcS,KAAK,CAACmG,EAApB,CAAnD,EAA4E3D,QAA5E,CAAqF,IAArF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC4rB,MAAN,KAAiBpqB,SAAjB,IAA8BxB,KAAK,CAAC4rB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIrZ,IAAI,GAAG6e,4CAA4C,CAACpxB,KAAK,CAAC4rB,MAAP,EAAe3rB,OAAf,CAA5C,CAAoEuC,QAApE,CAA6E,QAA7E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACka,MAAN,KAAiB1Y,SAAjB,IAA8BxB,KAAK,CAACka,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI3H,IAAI,GAAG,IAAIlT,SAAJ,CAAc,0BAAd,EAA0CqT,YAA1C,CAAuD,IAAInT,SAAJ,CAAcS,KAAK,CAACka,MAApB,CAAvD,EAAoF1X,QAApF,CAA6F,QAA7F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACqxB,QAAN,KAAmB7vB,SAAnB,IAAgCxB,KAAK,CAACqxB,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAIvG,KAAK,GAAGwG,+BAA+B,CAACtxB,KAAK,CAACqxB,QAAP,EAAiBpxB,OAAjB,CAA3C;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,SAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAtBD;;AAuBA,IAAI8e,4CAA4C,GAAG,UAAUpxB,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,0BAAd,CAAf;;EACA,IAAIW,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8BxB,KAAK,CAACwM,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI+F,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAcS,KAAK,CAACwM,MAApB,CAArC,EAAkEhK,QAAlE,CAA2E,QAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACosB,GAAN,KAAc5qB,SAAd,IAA2BxB,KAAK,CAACosB,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAI7Z,IAAI,GAAG8Z,uBAAuB,CAACrsB,KAAK,CAACosB,GAAP,EAAYnsB,OAAZ,CAAvB,CAA4CuC,QAA5C,CAAqD,KAArD,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACssB,GAAN,KAAc9qB,SAAd,IAA2BxB,KAAK,CAACssB,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAI/Z,IAAI,GAAG4e,iDAAiD,CAACnxB,KAAK,CAACssB,GAAP,EAAYrsB,OAAZ,CAAjD,CAAsEuC,QAAtE,CAA+E,KAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAIzD,0CAA0C,GAAG,UAAU7O,KAAV,EAAiBC,OAAjB,EAA0B;EACvE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,wBAAd,CAAf;;EACA,IAAIW,KAAK,CAACuxB,WAAN,KAAsB/vB,SAAtB,IAAmCxB,KAAK,CAACuxB,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAIhf,IAAI,GAAGif,wCAAwC,CAACxxB,KAAK,CAACuxB,WAAP,EAAoBtxB,OAApB,CAAxC,CAAqEuC,QAArE,CAA8E,aAA9E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACyxB,SAAN,KAAoBjwB,SAApB,IAAiCxB,KAAK,CAACyxB,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAIlf,IAAI,GAAG,IAAIlT,SAAJ,CAAc,WAAd,EAA2BqT,YAA3B,CAAwC,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACyxB,SAAP,CAApB,CAAxC,EAAgFjvB,QAAhF,CAAyF,WAAzF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC4rB,MAAN,KAAiBpqB,SAAjB,IAA8BxB,KAAK,CAAC4rB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIrZ,IAAI,GAAGmf,mCAAmC,CAAC1xB,KAAK,CAAC4rB,MAAP,EAAe3rB,OAAf,CAAnC,CAA2DuC,QAA3D,CAAoE,QAApE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0BxB,KAAK,CAACmG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIoM,IAAI,GAAG,IAAIlT,SAAJ,CAAc,aAAd,EAA6BqT,YAA7B,CAA0C,IAAInT,SAAJ,CAAcS,KAAK,CAACmG,EAApB,CAA1C,EAAmE3D,QAAnE,CAA4E,IAA5E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC2xB,sBAAN,KAAiCnwB,SAAjC,IAA8CxB,KAAK,CAAC2xB,sBAAN,KAAiC,IAAnF,EAAyF;IACrF,IAAIpf,IAAI,GAAG,IAAIlT,SAAJ,CAAc,iCAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC2xB,sBAApB,CADP,EAENnvB,QAFM,CAEG,wBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC4xB,cAAN,KAAyBpwB,SAAzB,IAAsCxB,KAAK,CAAC4xB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAI9G,KAAK,GAAG+G,2CAA2C,CAAC7xB,KAAK,CAAC4xB,cAAP,EAAuB3xB,OAAvB,CAAvD;IACA,IAAI6xB,eAAe,GAAG,IAAIzyB,SAAJ,CAAc,gBAAd,CAAtB;IACAyrB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBuf,eAAe,CAACpf,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsBof,eAAtB;EACH;;EACD,IAAI9xB,KAAK,CAAC+xB,QAAN,KAAmBvwB,SAAnB,IAAgCxB,KAAK,CAAC+xB,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAIxf,IAAI,GAAGyf,qCAAqC,CAAChyB,KAAK,CAAC+xB,QAAP,EAAiB9xB,OAAjB,CAArC,CAA+DuC,QAA/D,CAAwE,UAAxE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CArCD;;AAsCA,IAAIkf,wCAAwC,GAAG,UAAUxxB,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIW,KAAK,CAACisB,mBAAN,KAA8BzqB,SAA9B,IAA2CxB,KAAK,CAACisB,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAI1Z,IAAI,GAAG0f,gDAAgD,CAACjyB,KAAK,CAACisB,mBAAP,EAA4BhsB,OAA5B,CAAhD,CAAqFuC,QAArF,CAA8F,qBAA9F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI4f,uCAAuC,GAAG,UAAUlyB,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIW,KAAK,CAACmyB,KAAN,KAAgB3wB,SAAhB,IAA6BxB,KAAK,CAACmyB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI5f,IAAI,GAAG6f,yBAAyB,CAACpyB,KAAK,CAACmyB,KAAP,EAAclyB,OAAd,CAAzB,CAAgDuC,QAAhD,CAAyD,QAAzD,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACqyB,MAAN,KAAiB7wB,SAAjB,IAA8BxB,KAAK,CAACqyB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI9f,IAAI,GAAG+f,0BAA0B,CAACtyB,KAAK,CAACqyB,MAAP,EAAepyB,OAAf,CAA1B,CAAkDuC,QAAlD,CAA2D,SAA3D,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIof,mCAAmC,GAAG,UAAU1xB,KAAV,EAAiBC,OAAjB,EAA0B;EAChE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,iBAAd,CAAf;;EACA,IAAIW,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8BxB,KAAK,CAACwM,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI+F,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAcS,KAAK,CAACwM,MAApB,CAArC,EAAkEhK,QAAlE,CAA2E,QAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIuf,2CAA2C,GAAG,UAAU7xB,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG,IAAIlT,SAAJ,CAAc,wBAAd,EAAwCqT,YAAxC,CAAqD,IAAInT,SAAJ,CAAc+rB,KAAd,CAArD,CAAX;IACA,OAAO/Y,IAAI,CAAC/P,QAAL,CAAc,OAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIyvB,gDAAgD,GAAG,UAAUjyB,KAAV,EAAiBC,OAAjB,EAA0B;EAC7E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,8BAAd,CAAf;;EACA,IAAIW,KAAK,CAACuyB,SAAN,KAAoB/wB,SAApB,IAAiCxB,KAAK,CAACuyB,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAIhgB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,WAAd,EAA2BqT,YAA3B,CAAwC,IAAInT,SAAJ,CAAcS,KAAK,CAACuyB,SAApB,CAAxC,EAAwE/vB,QAAxE,CAAiF,WAAjF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACuB,MAAN,KAAiBC,SAAjB,IAA8BxB,KAAK,CAACuB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIgR,IAAI,GAAG,IAAIlT,SAAJ,CAAc,YAAd,EAA4BqT,YAA5B,CAAyC,IAAInT,SAAJ,CAAcS,KAAK,CAACuB,MAApB,CAAzC,EAAsEiB,QAAtE,CAA+E,QAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACwsB,MAAN,KAAiBhrB,SAAjB,IAA8BxB,KAAK,CAACwsB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIja,IAAI,GAAG,IAAIlT,SAAJ,CAAc,iBAAd,EAAiCqT,YAAjC,CAA8C,IAAInT,SAAJ,CAAcS,KAAK,CAACwsB,MAApB,CAA9C,EAA2EhqB,QAA3E,CAAoF,QAApF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8BxB,KAAK,CAACwM,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI+F,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAcS,KAAK,CAACwM,MAApB,CAArC,EAAkEhK,QAAlE,CAA2E,QAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACwyB,UAAN,KAAqBhxB,SAArB,IAAkCxB,KAAK,CAACwyB,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAIjgB,IAAI,GAAG2f,uCAAuC,CAAClyB,KAAK,CAACwyB,UAAP,EAAmBvyB,OAAnB,CAAvC,CAAmEuC,QAAnE,CAA4E,YAA5E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAvBD;;AAwBA,IAAI0f,qCAAqC,GAAG,UAAUhyB,KAAV,EAAiBC,OAAjB,EAA0B;EAClE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,mBAAd,CAAf;;EACA,IAAIW,KAAK,CAACyyB,SAAN,KAAoBjxB,SAApB,IAAiCxB,KAAK,CAACyyB,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAIlgB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,oBAAd,EAAoCqT,YAApC,CAAiD,IAAInT,SAAJ,CAAcS,KAAK,CAACyyB,SAApB,CAAjD,EAAiFjwB,QAAjF,CAA0F,WAA1F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI0e,6BAA6B,GAAG,UAAUhxB,KAAV,EAAiBC,OAAjB,EAA0B;EAC1D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,WAAd,CAAf;;EACA,IAAIW,KAAK,CAAC0wB,IAAN,KAAelvB,SAAf,IAA4BxB,KAAK,CAAC0wB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIne,IAAI,GAAG,IAAIlT,SAAJ,CAAc,UAAd,EAA0BqT,YAA1B,CAAuC,IAAInT,SAAJ,CAAcS,KAAK,CAAC0wB,IAApB,CAAvC,EAAkEluB,QAAlE,CAA2E,MAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIogB,8BAA8B,GAAG,UAAU1yB,KAAV,EAAiBC,OAAjB,EAA0B;EAC3D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,YAAd,CAAf;;EACA,IAAIW,KAAK,CAAC8tB,eAAN,KAA0BtsB,SAA1B,IAAuCxB,KAAK,CAAC8tB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAIvb,IAAI,GAAG,IAAIlT,SAAJ,CAAc,iBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC8tB,eAApB,CADP,EAENtrB,QAFM,CAEG,iBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIqgB,+CAA+C,GAAG,UAAU3yB,KAAV,EAAiBC,OAAjB,EAA0B;EAC5E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,6BAAd,CAAf;;EACA,IAAIW,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0BxB,KAAK,CAACmG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIoM,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EAAgCqT,YAAhC,CAA6C,IAAInT,SAAJ,CAAcS,KAAK,CAACmG,EAApB,CAA7C,EAAsE3D,QAAtE,CAA+E,IAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC4yB,iBAAN,KAA4BpxB,SAA5B,IAAyCxB,KAAK,CAAC4yB,iBAAN,KAA4B,IAAzE,EAA+E;IAC3E,IAAIrgB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,mBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC4yB,iBAApB,CADP,EAENpwB,QAFM,CAEG,eAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC6yB,MAAN,KAAiBrxB,SAAjB,IAA8BxB,KAAK,CAAC6yB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI/H,KAAK,GAAG8E,6BAA6B,CAAC5vB,KAAK,CAAC6yB,MAAP,EAAe5yB,OAAf,CAAzC;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,OAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAAC4rB,MAAN,KAAiBpqB,SAAjB,IAA8BxB,KAAK,CAAC4rB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIrZ,IAAI,GAAGugB,mDAAmD,CAAC9yB,KAAK,CAAC4rB,MAAP,EAAe3rB,OAAf,CAAnD,CAA2EuC,QAA3E,CAAoF,QAApF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAxBD;;AAyBA,IAAIygB,mDAAmD,GAAG,UAAU/yB,KAAV,EAAiBC,OAAjB,EAA0B;EAChF,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAGogB,+CAA+C,CAACrH,KAAD,EAAQrrB,OAAR,CAA1D;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIwwB,uCAAuC,GAAG,UAAUhzB,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIW,KAAK,CAACizB,IAAN,KAAezxB,SAAf,IAA4BxB,KAAK,CAACizB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI1gB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,MAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACizB,IAAN,CAAWnuB,WAAX,GAAyBjD,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,IAAyC,GAAvD,CADP,EAENW,QAFM,CAEG,MAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACsuB,IAAN,KAAe9sB,SAAf,IAA4BxB,KAAK,CAACsuB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI/b,IAAI,GAAG,IAAIlT,SAAJ,CAAc,MAAd,EAAsBqT,YAAtB,CAAmC,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACsuB,IAAP,CAApB,CAAnC,EAAsE9rB,QAAtE,CAA+E,MAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACkzB,yBAAN,KAAoC1xB,SAApC,IAAiDxB,KAAK,CAACkzB,yBAAN,KAAoC,IAAzF,EAA+F;IAC3F,IAAI3gB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,2BAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACkzB,yBAAP,CAApB,CADP,EAEN1wB,QAFM,CAEG,2BAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAnBD;;AAoBA,IAAI6gB,iCAAiC,GAAG,UAAUnzB,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,eAAd,CAAf;;EACA,IAAIW,KAAK,CAACkU,UAAN,KAAqB1S,SAArB,IAAkCxB,KAAK,CAACkU,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAI3B,IAAI,GAAGygB,uCAAuC,CAAChzB,KAAK,CAACkU,UAAP,EAAmBjU,OAAnB,CAAvC,CAAmEuC,QAAnE,CAA4E,YAA5E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACmtB,EAAN,KAAa3rB,SAAb,IAA0BxB,KAAK,CAACmtB,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAI5a,IAAI,GAAG,IAAIlT,SAAJ,CAAc,IAAd,EAAoBqT,YAApB,CAAiC,IAAInT,SAAJ,CAAcS,KAAK,CAACmtB,EAApB,CAAjC,EAA0D3qB,QAA1D,CAAmE,IAAnE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8BxB,KAAK,CAACwM,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI+F,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAcS,KAAK,CAACwM,MAApB,CAArC,EAAkEhK,QAAlE,CAA2E,QAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC4rB,MAAN,KAAiBpqB,SAAjB,IAA8BxB,KAAK,CAAC4rB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIrZ,IAAI,GAAG6gB,uCAAuC,CAACpzB,KAAK,CAAC4rB,MAAP,EAAe3rB,OAAf,CAAvC,CAA+DuC,QAA/D,CAAwE,QAAxE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACka,MAAN,KAAiB1Y,SAAjB,IAA8BxB,KAAK,CAACka,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI3H,IAAI,GAAG,IAAIlT,SAAJ,CAAc,kBAAd,EAAkCqT,YAAlC,CAA+C,IAAInT,SAAJ,CAAcS,KAAK,CAACka,MAApB,CAA/C,EAA4E1X,QAA5E,CAAqF,QAArF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACqzB,WAAN,KAAsB7xB,SAAtB,IAAmCxB,KAAK,CAACqzB,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAIvI,KAAK,GAAGwI,kCAAkC,CAACtzB,KAAK,CAACqzB,WAAP,EAAoBpzB,OAApB,CAA9C;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,YAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAACuzB,4BAAN,KAAuC/xB,SAAvC,IAAoDxB,KAAK,CAACuzB,4BAAN,KAAuC,IAA/F,EAAqG;IACjG,IAAIzI,KAAK,GAAG0I,mDAAmD,CAACxzB,KAAK,CAACuzB,4BAAP,EAAqCtzB,OAArC,CAA/D;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,6BAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAACyzB,2BAAN,KAAsCjyB,SAAtC,IAAmDxB,KAAK,CAACyzB,2BAAN,KAAsC,IAA7F,EAAmG;IAC/F,IAAIlhB,IAAI,GAAGmhB,+CAA+C,CAAC1zB,KAAK,CAACyzB,2BAAP,EAAoCxzB,OAApC,CAA/C,CAA4FuC,QAA5F,CAAqG,6BAArG,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC2zB,8BAAN,KAAyCnyB,SAAzC,IAAsDxB,KAAK,CAAC2zB,8BAAN,KAAyC,IAAnG,EAAyG;IACrG,IAAIphB,IAAI,GAAGoY,kDAAkD,CAAC3qB,KAAK,CAAC2zB,8BAAP,EAAuC1zB,OAAvC,CAAlD,CAAkGuC,QAAlG,CAA2G,gCAA3G,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA7CD;;AA8CA,IAAIshB,4CAA4C,GAAG,UAAU5zB,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,0BAAd,CAAf;;EACA,IAAIW,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8BxB,KAAK,CAACwM,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI+F,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAcS,KAAK,CAACwM,MAApB,CAArC,EAAkEhK,QAAlE,CAA2E,QAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC0rB,IAAN,KAAelqB,SAAf,IAA4BxB,KAAK,CAAC0rB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIZ,KAAK,GAAGa,0BAA0B,CAAC3rB,KAAK,CAAC0rB,IAAP,EAAazrB,OAAb,CAAtC;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,KAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAAC6zB,qBAAN,KAAgCryB,SAAhC,IAA6CxB,KAAK,CAAC6zB,qBAAN,KAAgC,IAAjF,EAAuF;IACnF,IAAIthB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,4BAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC6zB,qBAAP,CAApB,CADP,EAENrxB,QAFM,CAEG,uBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC8zB,kBAAN,KAA6BtyB,SAA7B,IAA0CxB,KAAK,CAAC8zB,kBAAN,KAA6B,IAA3E,EAAiF;IAC7E,IAAIvhB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,yBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC8zB,kBAAP,CAApB,CADP,EAENtxB,QAFM,CAEG,oBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA1BD;;AA2BA,IAAI8gB,uCAAuC,GAAG,UAAUpzB,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,qBAAd,CAAf;EACAO,mBAAmB,CAACusB,KAApB,CAA0BnsB,KAA1B,EAAiC;IAC7BwM,MAAM,EAAE,UAAU4c,KAAV,EAAiB;MACrB,IAAI7W,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAc6pB,KAAd,CAArC,EAA2D5mB,QAA3D,CAAoE,QAApE,CAAX;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAJ4B;IAK7B6Z,GAAG,EAAE,UAAUhD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAG8Z,uBAAuB,CAACjD,KAAD,EAAQnpB,OAAR,CAAvB,CAAwCuC,QAAxC,CAAiD,KAAjD,CAAX;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAR4B;IAS7BshB,qBAAqB,EAAE,UAAUzK,KAAV,EAAiB;MACpC,IAAI7W,IAAI,GAAG,IAAIlT,SAAJ,CAAc,4BAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAACzB,KAAD,CAApB,CADP,EAEN5mB,QAFM,CAEG,uBAFH,CAAX;MAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAd4B;IAe7BuhB,kBAAkB,EAAE,UAAU1K,KAAV,EAAiB;MACjC,IAAI7W,IAAI,GAAG,IAAIlT,SAAJ,CAAc,yBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAACzB,KAAD,CAApB,CADP,EAEN5mB,QAFM,CAEG,oBAFH,CAAX;MAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CApB4B;IAqB7B+Z,GAAG,EAAE,UAAUlD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAGqhB,4CAA4C,CAACxK,KAAD,EAAQnpB,OAAR,CAA5C,CAA6DuC,QAA7D,CAAsE,KAAtE,CAAX;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAxB4B;IAyB7Bga,CAAC,EAAE,UAAUvW,IAAV,EAAgBoT,KAAhB,EAAuB;MACtB,IAAI,EAAEA,KAAK,YAAY/pB,SAAjB,IAA8B+pB,KAAK,YAAY7pB,SAAjD,CAAJ,EAAiE;QAC7D,MAAM,IAAImC,KAAJ,CAAU,mDAAV,CAAN;MACH;;MACD4Q,QAAQ,CAACI,YAAT,CAAsB,IAAIrT,SAAJ,CAAc2W,IAAd,EAAoBtD,YAApB,CAAiC0W,KAAjC,CAAtB;IACH;EA9B4B,CAAjC;EAgCA,OAAO9W,QAAP;AACH,CAnCD;;AAoCA,IAAIoa,kCAAkC,GAAG,UAAU1sB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG4gB,iCAAiC,CAAC7H,KAAD,EAAQrrB,OAAR,CAA5C;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAImqB,kCAAkC,GAAG,UAAU3sB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,gBAAd,CAAf;;EACA,IAAIW,KAAK,CAAC+zB,YAAN,KAAuBvyB,SAAvB,IAAoCxB,KAAK,CAAC+zB,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIxhB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,cAAd,EAA8BqT,YAA9B,CAA2C,IAAInT,SAAJ,CAAcS,KAAK,CAAC+zB,YAApB,CAA3C,EAA8EvxB,QAA9E,CAAuF,cAAvF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACg0B,YAAN,KAAuBxyB,SAAvB,IAAoCxB,KAAK,CAACg0B,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIlJ,KAAK,GAAGmJ,gCAAgC,CAACj0B,KAAK,CAACg0B,YAAP,EAAqB/zB,OAArB,CAA5C;IACA,IAAIi0B,eAAe,GAAG,IAAI70B,SAAJ,CAAc,cAAd,CAAtB;IACAyrB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtB2hB,eAAe,CAACxhB,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsBwhB,eAAtB;EACH;;EACD,IAAIl0B,KAAK,CAACm0B,YAAN,KAAuB3yB,SAAvB,IAAoCxB,KAAK,CAACm0B,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAI5hB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,cAAd,EAA8BqT,YAA9B,CAA2C,IAAInT,SAAJ,CAAcS,KAAK,CAACm0B,YAApB,CAA3C,EAA8E3xB,QAA9E,CAAuF,cAAvF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAnBD;;AAoBA,IAAI8hB,iCAAiC,GAAG,UAAUp0B,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,eAAd,CAAf;;EACA,IAAIW,KAAK,CAAC0jB,IAAN,KAAeliB,SAAf,IAA4BxB,KAAK,CAAC0jB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAInR,IAAI,GAAG,IAAIlT,SAAJ,CAAc,aAAd,EAA6BqT,YAA7B,CAA0C,IAAInT,SAAJ,CAAcS,KAAK,CAAC0jB,IAApB,CAA1C,EAAqElhB,QAArE,CAA8E,MAA9E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC+vB,KAAN,KAAgBvuB,SAAhB,IAA6BxB,KAAK,CAAC+vB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIxd,IAAI,GAAG,IAAIlT,SAAJ,CAAc,eAAd,EAA+BqT,YAA/B,CAA4C,IAAInT,SAAJ,CAAcS,KAAK,CAAC+vB,KAApB,CAA5C,EAAwEvtB,QAAxE,CAAiF,OAAjF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAI8c,2BAA2B,GAAG,UAAUpvB,KAAV,EAAiBC,OAAjB,EAA0B;EACxD,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,SAAd,CAAf;;EACA,IAAIW,KAAK,CAACka,MAAN,KAAiB1Y,SAAjB,IAA8BxB,KAAK,CAACka,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI3H,IAAI,GAAG,IAAIlT,SAAJ,CAAc,eAAd,EAA+BqT,YAA/B,CAA4C,IAAInT,SAAJ,CAAcS,KAAK,CAACka,MAApB,CAA5C,EAAyE1X,QAAzE,CAAkF,QAAlF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACq0B,cAAN,KAAyB7yB,SAAzB,IAAsCxB,KAAK,CAACq0B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAI9hB,IAAI,GAAG+hB,wCAAwC,CAACt0B,KAAK,CAACq0B,cAAP,EAAuBp0B,OAAvB,CAAxC,CAAwEuC,QAAxE,CAAiF,gBAAjF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIiiB,sCAAsC,GAAG,UAAUv0B,KAAV,EAAiBC,OAAjB,EAA0B;EACnE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,oBAAd,CAAf;;EACA,IAAIW,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8BxB,KAAK,CAACwM,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI+F,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAcS,KAAK,CAACwM,MAApB,CAArC,EAAkEhK,QAAlE,CAA2E,QAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC0rB,IAAN,KAAelqB,SAAf,IAA4BxB,KAAK,CAAC0rB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIZ,KAAK,GAAGa,0BAA0B,CAAC3rB,KAAK,CAAC0rB,IAAP,EAAazrB,OAAb,CAAtC;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,KAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAACw0B,cAAN,KAAyBhzB,SAAzB,IAAsCxB,KAAK,CAACw0B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIjiB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACw0B,cAApB,CADP,EAENhyB,QAFM,CAEG,gBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CApBD;;AAqBA,IAAIhD,wCAAwC,GAAG,UAAUtP,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIW,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0BxB,KAAK,CAACmG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIoM,IAAI,GAAG,IAAIlT,SAAJ,CAAc,WAAd,EAA2BqT,YAA3B,CAAwC,IAAInT,SAAJ,CAAcS,KAAK,CAACmG,EAApB,CAAxC,EAAiE3D,QAAjE,CAA0E,IAA1E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC4rB,MAAN,KAAiBpqB,SAAjB,IAA8BxB,KAAK,CAAC4rB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIrZ,IAAI,GAAGkiB,iCAAiC,CAACz0B,KAAK,CAAC4rB,MAAP,EAAe3rB,OAAf,CAAjC,CAAyDuC,QAAzD,CAAkE,QAAlE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAImiB,iCAAiC,GAAG,UAAUz0B,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,eAAd,CAAf;EACAQ,aAAa,CAACssB,KAAd,CAAoBnsB,KAApB,EAA2B;IACvBwM,MAAM,EAAE,UAAU4c,KAAV,EAAiB;MACrB,IAAI7W,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAc6pB,KAAd,CAArC,EAA2D5mB,QAA3D,CAAoE,QAApE,CAAX;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAJsB;IAKvB6Z,GAAG,EAAE,UAAUhD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAG8Z,uBAAuB,CAACjD,KAAD,EAAQnpB,OAAR,CAAvB,CAAwCuC,QAAxC,CAAiD,KAAjD,CAAX;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CARsB;IASvBiiB,cAAc,EAAE,UAAUpL,KAAV,EAAiB;MAC7B,IAAI7W,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EAAgCqT,YAAhC,CAA6C,IAAInT,SAAJ,CAAc6pB,KAAd,CAA7C,EAAmE5mB,QAAnE,CAA4E,gBAA5E,CAAX;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAZsB;IAavB+Z,GAAG,EAAE,UAAUlD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAGgiB,sCAAsC,CAACnL,KAAD,EAAQnpB,OAAR,CAAtC,CAAuDuC,QAAvD,CAAgE,KAAhE,CAAX;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAhBsB;IAiBvBga,CAAC,EAAE,UAAUvW,IAAV,EAAgBoT,KAAhB,EAAuB;MACtB,IAAI,EAAEA,KAAK,YAAY/pB,SAAjB,IAA8B+pB,KAAK,YAAY7pB,SAAjD,CAAJ,EAAiE;QAC7D,MAAM,IAAImC,KAAJ,CAAU,mDAAV,CAAN;MACH;;MACD4Q,QAAQ,CAACI,YAAT,CAAsB,IAAIrT,SAAJ,CAAc2W,IAAd,EAAoBtD,YAApB,CAAiC0W,KAAjC,CAAtB;IACH;EAtBsB,CAA3B;EAwBA,OAAO9W,QAAP;AACH,CA3BD;;AA4BA,IAAIohB,+CAA+C,GAAG,UAAU1zB,KAAV,EAAiBC,OAAjB,EAA0B;EAC5E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,6BAAd,CAAf;;EACA,IAAIW,KAAK,CAAC00B,cAAN,KAAyBlzB,SAAzB,IAAsCxB,KAAK,CAAC00B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIniB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,MAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC00B,cAAP,CAApB,CADP,EAENlyB,QAFM,CAEG,gBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC20B,uBAAN,KAAkCnzB,SAAlC,IAA+CxB,KAAK,CAAC20B,uBAAN,KAAkC,IAArF,EAA2F;IACvF,IAAIpiB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,cAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC20B,uBAAP,CAApB,CADP,EAENnyB,QAFM,CAEG,yBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAIsiB,+CAA+C,GAAG,UAAU50B,KAAV,EAAiBC,OAAjB,EAA0B;EAC5E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,6BAAd,CAAf;;EACA,IAAIW,KAAK,CAAC00B,cAAN,KAAyBlzB,SAAzB,IAAsCxB,KAAK,CAAC00B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIniB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,MAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC00B,cAAP,CAApB,CADP,EAENlyB,QAFM,CAEG,gBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACgE,YAAN,KAAuBxC,SAAvB,IAAoCxB,KAAK,CAACgE,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIuO,IAAI,GAAG,IAAIlT,SAAJ,CAAc,wBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACgE,YAApB,CADP,EAENxB,QAFM,CAEG,cAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC20B,uBAAN,KAAkCnzB,SAAlC,IAA+CxB,KAAK,CAAC20B,uBAAN,KAAkC,IAArF,EAA2F;IACvF,IAAIpiB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,cAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC20B,uBAAP,CAApB,CADP,EAENnyB,QAFM,CAEG,yBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CArBD;;AAsBA,IAAIkhB,mDAAmD,GAAG,UAAUxzB,KAAV,EAAiBC,OAAjB,EAA0B;EAChF,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAGqiB,+CAA+C,CAACtJ,KAAD,EAAQrrB,OAAR,CAA1D;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIkN,6CAA6C,GAAG,UAAU1P,KAAV,EAAiBC,OAAjB,EAA0B;EAC1E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,2BAAd,CAAf;;EACA,IAAIW,KAAK,CAAC+c,mBAAN,KAA8Bvb,SAA9B,IAA2CxB,KAAK,CAAC+c,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAI+N,KAAK,GAAG+J,0CAA0C,CAAC70B,KAAK,CAAC+c,mBAAP,EAA4B9c,OAA5B,CAAtD;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,oBAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAAC8c,mBAAN,KAA8Btb,SAA9B,IAA2CxB,KAAK,CAAC8c,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAIgO,KAAK,GAAGgK,0CAA0C,CAAC90B,KAAK,CAAC8c,mBAAP,EAA4B7c,OAA5B,CAAtD;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,oBAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAAC6c,4BAAN,KAAuCrb,SAAvC,IAAoDxB,KAAK,CAAC6c,4BAAN,KAAuC,IAA/F,EAAqG;IACjG,IAAIiO,KAAK,GAAGiI,mDAAmD,CAAC/yB,KAAK,CAAC6c,4BAAP,EAAqC5c,OAArC,CAA/D;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,4BAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAAC4c,wBAAN,KAAmCpb,SAAnC,IAAgDxB,KAAK,CAAC4c,wBAAN,KAAmC,IAAvF,EAA6F;IACzF,IAAIrK,IAAI,GAAGod,4CAA4C,CAAC3vB,KAAK,CAAC4c,wBAAP,EAAiC3c,OAAjC,CAA5C,CAAsFuC,QAAtF,CAA+F,0BAA/F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA5BD;;AA6BA,IAAIwgB,mDAAmD,GAAG,UAAU9yB,KAAV,EAAiBC,OAAjB,EAA0B;EAChF,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,iCAAd,CAAf;;EACA,IAAIW,KAAK,CAAC4B,GAAN,KAAcJ,SAAd,IAA2BxB,KAAK,CAAC4B,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAI2Q,IAAI,GAAGwiB,+BAA+B,CAAC/0B,KAAK,CAAC4B,GAAP,EAAY3B,OAAZ,CAA/B,CAAoDuC,QAApD,CAA6D,OAA7D,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI0iB,oCAAoC,GAAG,UAAUh1B,KAAV,EAAiBC,OAAjB,EAA0B;EACjE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,kBAAd,CAAf;;EACA,IAAIW,KAAK,CAAC4B,GAAN,KAAcJ,SAAd,IAA2BxB,KAAK,CAAC4B,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAI2Q,IAAI,GAAG,IAAIlT,SAAJ,CAAc,WAAd,EAA2BqT,YAA3B,CAAwC,IAAInT,SAAJ,CAAcS,KAAK,CAAC4B,GAApB,CAAxC,EAAkEY,QAAlE,CAA2E,KAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC6H,SAAN,KAAoBrG,SAApB,IAAiCxB,KAAK,CAAC6H,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAI0K,IAAI,GAAG,IAAIlT,SAAJ,CAAc,iBAAd,EAAiCqT,YAAjC,CAA8C,IAAInT,SAAJ,CAAcS,KAAK,CAAC6H,SAApB,CAA9C,EAA8ErF,QAA9E,CAAuF,WAAvF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAImc,wCAAwC,GAAG,UAAUzuB,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAGyiB,oCAAoC,CAAC1J,KAAD,EAAQrrB,OAAR,CAA/C;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIiP,2CAA2C,GAAG,UAAUzR,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,yBAAd,CAAf;;EACA,IAAIW,KAAK,CAACi1B,iBAAN,KAA4BzzB,SAA5B,IAAyCxB,KAAK,CAACi1B,iBAAN,KAA4B,IAAzE,EAA+E;IAC3E,IAAI1iB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,mBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACi1B,iBAApB,CADP,EAENzyB,QAFM,CAEG,mBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC8b,IAAN,KAAeta,SAAf,IAA4BxB,KAAK,CAAC8b,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIvJ,IAAI,GAAG2iB,kCAAkC,CAACl1B,KAAK,CAAC8b,IAAP,EAAa7b,OAAb,CAAlC,CAAwDuC,QAAxD,CAAiE,MAAjE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAbD;;AAcA,IAAIhB,uCAAuC,GAAG,UAAUtR,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIW,KAAK,CAACka,MAAN,KAAiB1Y,SAAjB,IAA8BxB,KAAK,CAACka,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI3H,IAAI,GAAG,IAAIlT,SAAJ,CAAc,2BAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACka,MAApB,CADP,EAEN1X,QAFM,CAEG,QAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIV,uCAAuC,GAAG,UAAU5R,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIW,KAAK,CAACquB,IAAN,KAAe7sB,SAAf,IAA4BxB,KAAK,CAACquB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI9b,IAAI,GAAG,IAAIlT,SAAJ,CAAc,yBAAd,EAAyCqT,YAAzC,CAAsD,IAAInT,SAAJ,CAAcS,KAAK,CAACquB,IAApB,CAAtD,EAAiF7rB,QAAjF,CAA0F,MAA1F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACm1B,eAAN,KAA0B3zB,SAA1B,IAAuCxB,KAAK,CAACm1B,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAI5iB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,MAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACm1B,eAAN,CAAsBrwB,WAAtB,GAAoCjD,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,IAAoD,GAAlE,CADP,EAENW,QAFM,CAEG,iBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAbD;;AAcA,IAAI4iB,kCAAkC,GAAG,UAAUl1B,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,gBAAd,CAAf;;EACA,IAAIW,KAAK,CAACo1B,gBAAN,KAA2B5zB,SAA3B,IAAwCxB,KAAK,CAACo1B,gBAAN,KAA2B,IAAvE,EAA6E;IACzE,IAAI7iB,IAAI,GAAG6b,oCAAoC,CAACpuB,KAAK,CAACo1B,gBAAP,EAAyBn1B,OAAzB,CAApC,CAAsEuC,QAAtE,CAA+E,kBAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI+iB,kCAAkC,GAAG,UAAUr1B,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,gBAAd,CAAf;;EACA,IAAIW,KAAK,CAACs1B,EAAN,KAAa9zB,SAAb,IAA0BxB,KAAK,CAACs1B,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAI/iB,IAAI,GAAGgjB,8BAA8B,CAACv1B,KAAK,CAACs1B,EAAP,EAAWr1B,OAAX,CAA9B,CAAkDuC,QAAlD,CAA2D,IAA3D,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIS,uCAAuC,GAAG,UAAU/S,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIW,KAAK,CAAC6wB,GAAN,KAAcrvB,SAAd,IAA2BxB,KAAK,CAAC6wB,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIte,IAAI,GAAG2b,6BAA6B,CAACluB,KAAK,CAAC6wB,GAAP,EAAY5wB,OAAZ,CAA7B,CAAkDuC,QAAlD,CAA2D,KAA3D,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC+wB,IAAN,KAAevvB,SAAf,IAA4BxB,KAAK,CAAC+wB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIxe,IAAI,GAAGmgB,8BAA8B,CAAC1yB,KAAK,CAAC+wB,IAAP,EAAa9wB,OAAb,CAA9B,CAAoDuC,QAApD,CAA6D,MAA7D,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAI2Y,yBAAyB,GAAG,UAAUjrB,KAAV,EAAiBC,OAAjB,EAA0B;EACtD,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,OAAd,CAAf;;EACA,IAAIW,KAAK,CAACuwB,WAAN,KAAsB/uB,SAAtB,IAAmCxB,KAAK,CAACuwB,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAIhe,IAAI,GAAG,IAAIlT,SAAJ,CAAc,aAAd,EAA6BqT,YAA7B,CAA0C,IAAInT,SAAJ,CAAcS,KAAK,CAACuwB,WAApB,CAA1C,EAA4E/tB,QAA5E,CAAqF,aAArF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACmtB,EAAN,KAAa3rB,SAAb,IAA0BxB,KAAK,CAACmtB,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAI5a,IAAI,GAAG,IAAIlT,SAAJ,CAAc,IAAd,EAAoBqT,YAApB,CAAiC,IAAInT,SAAJ,CAAcS,KAAK,CAACmtB,EAApB,CAAjC,EAA0D3qB,QAA1D,CAAmE,IAAnE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIzC,qCAAqC,GAAG,UAAU7P,KAAV,EAAiBC,OAAjB,EAA0B;EAClE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,mBAAd,CAAf;;EACA,IAAIW,KAAK,CAAC6b,KAAN,KAAgBra,SAAhB,IAA6BxB,KAAK,CAAC6b,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIiP,KAAK,GAAG0K,0CAA0C,CAACx1B,KAAK,CAAC6b,KAAP,EAAc5b,OAAd,CAAtD;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,MAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAVD;;AAWA,IAAImjB,yCAAyC,GAAG,UAAUz1B,KAAV,EAAiBC,OAAjB,EAA0B;EACtE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,uBAAd,CAAf;;EACA,IAAIW,KAAK,CAAC2F,eAAN,KAA0BnE,SAA1B,IAAuCxB,KAAK,CAAC2F,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAI4M,IAAI,GAAG,IAAIlT,SAAJ,CAAc,iBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC2F,eAApB,CADP,EAENnD,QAFM,CAEG,iBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIkjB,0CAA0C,GAAG,UAAUx1B,KAAV,EAAiBC,OAAjB,EAA0B;EACvE,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAGkjB,yCAAyC,CAACnK,KAAD,EAAQrrB,OAAR,CAApD;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI0uB,gCAAgC,GAAG,UAAUlxB,KAAV,EAAiBC,OAAjB,EAA0B;EAC7D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,cAAd,CAAf;EACA,OAAOiT,QAAP;AACH,CAHD;;AAIA,IAAIN,kDAAkD,GAAG,UAAUhS,KAAV,EAAiBC,OAAjB,EAA0B;EAC/E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,gCAAd,CAAf;;EACA,IAAIW,KAAK,CAAC01B,eAAN,KAA0Bl0B,SAA1B,IAAuCxB,KAAK,CAAC01B,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAInjB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,SAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC01B,eAAP,CAApB,CADP,EAENlzB,QAFM,CAEG,iBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC21B,gBAAN,KAA2Bn0B,SAA3B,IAAwCxB,KAAK,CAAC21B,gBAAN,KAA2B,IAAvE,EAA6E;IACzE,IAAIpjB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,SAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC21B,gBAAP,CAApB,CADP,EAENnzB,QAFM,CAEG,kBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC41B,iBAAN,KAA4Bp0B,SAA5B,IAAyCxB,KAAK,CAAC41B,iBAAN,KAA4B,IAAzE,EAA+E;IAC3E,IAAIrjB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,SAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC41B,iBAAP,CAApB,CADP,EAENpzB,QAFM,CAEG,mBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC61B,qBAAN,KAAgCr0B,SAAhC,IAA6CxB,KAAK,CAAC61B,qBAAN,KAAgC,IAAjF,EAAuF;IACnF,IAAItjB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,SAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC61B,qBAAP,CAApB,CADP,EAENrzB,QAFM,CAEG,uBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA3BD;;AA4BA,IAAIwjB,sCAAsC,GAAG,UAAU91B,KAAV,EAAiBC,OAAjB,EAA0B;EACnE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,oBAAd,CAAf;;EACA,IAAIW,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0BxB,KAAK,CAACmG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIoM,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EAAgCqT,YAAhC,CAA6C,IAAInT,SAAJ,CAAcS,KAAK,CAACmG,EAApB,CAA7C,EAAsE3D,QAAtE,CAA+E,IAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC+1B,QAAN,KAAmBv0B,SAAnB,IAAgCxB,KAAK,CAAC+1B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAIxjB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,UAAd,EAA0BqT,YAA1B,CAAuC,IAAInT,SAAJ,CAAcS,KAAK,CAAC+1B,QAApB,CAAvC,EAAsEvzB,QAAtE,CAA+E,OAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC6yB,MAAN,KAAiBrxB,SAAjB,IAA8BxB,KAAK,CAAC6yB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI/H,KAAK,GAAG8E,6BAA6B,CAAC5vB,KAAK,CAAC6yB,MAAP,EAAe5yB,OAAf,CAAzC;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,OAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAAC4rB,MAAN,KAAiBpqB,SAAjB,IAA8BxB,KAAK,CAAC4rB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIrZ,IAAI,GAAGugB,mDAAmD,CAAC9yB,KAAK,CAAC4rB,MAAP,EAAe3rB,OAAf,CAAnD,CAA2EuC,QAA3E,CAAoF,QAApF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAtBD;;AAuBA,IAAIwiB,0CAA0C,GAAG,UAAU90B,KAAV,EAAiBC,OAAjB,EAA0B;EACvE,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAGujB,sCAAsC,CAACxK,KAAD,EAAQrrB,OAAR,CAAjD;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIwzB,4BAA4B,GAAG,UAAUh2B,KAAV,EAAiBC,OAAjB,EAA0B;EACzD,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,UAAd,CAAf;;EACA,IAAIW,KAAK,CAACi2B,QAAN,KAAmBz0B,SAAnB,IAAgCxB,KAAK,CAACi2B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAI1jB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,UAAd,EAA0BqT,YAA1B,CAAuC,IAAInT,SAAJ,CAAcS,KAAK,CAACi2B,QAApB,CAAvC,EAAsEzzB,QAAtE,CAA+E,UAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACk2B,gBAAN,KAA2B10B,SAA3B,IAAwCxB,KAAK,CAACk2B,gBAAN,KAA2B,IAAvE,EAA6E;IACzE,IAAI3jB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,kBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACk2B,gBAApB,CADP,EAEN1zB,QAFM,CAEG,kBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACm2B,QAAN,KAAmB30B,SAAnB,IAAgCxB,KAAK,CAACm2B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAI5jB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,UAAd,EAA0BqT,YAA1B,CAAuC,IAAInT,SAAJ,CAAcS,KAAK,CAACm2B,QAApB,CAAvC,EAAsE3zB,QAAtE,CAA+E,UAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACo2B,oBAAN,KAA+B50B,SAA/B,IAA4CxB,KAAK,CAACo2B,oBAAN,KAA+B,IAA/E,EAAqF;IACjF,IAAI7jB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,sBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACo2B,oBAApB,CADP,EAEN5zB,QAFM,CAEG,sBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACq2B,cAAN,KAAyB70B,SAAzB,IAAsCxB,KAAK,CAACq2B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAI9jB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACq2B,cAApB,CADP,EAEN7zB,QAFM,CAEG,gBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA7BD;;AA8BA,IAAIgkB,yCAAyC,GAAG,UAAUt2B,KAAV,EAAiBC,OAAjB,EAA0B;EACtE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,uBAAd,CAAf;;EACA,IAAIW,KAAK,CAACi2B,QAAN,KAAmBz0B,SAAnB,IAAgCxB,KAAK,CAACi2B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAI1jB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,UAAd,EAA0BqT,YAA1B,CAAuC,IAAInT,SAAJ,CAAcS,KAAK,CAACi2B,QAApB,CAAvC,EAAsEzzB,QAAtE,CAA+E,UAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACm2B,QAAN,KAAmB30B,SAAnB,IAAgCxB,KAAK,CAACm2B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAI5jB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,UAAd,EAA0BqT,YAA1B,CAAuC,IAAInT,SAAJ,CAAcS,KAAK,CAACm2B,QAApB,CAAvC,EAAsE3zB,QAAtE,CAA+E,UAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIikB,wCAAwC,GAAG,UAAUv2B,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIW,KAAK,CAACka,MAAN,KAAiB1Y,SAAjB,IAA8BxB,KAAK,CAACka,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI3H,IAAI,GAAG,IAAIlT,SAAJ,CAAc,4BAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACka,MAApB,CADP,EAEN1X,QAFM,CAEG,QAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIlC,4CAA4C,GAAG,UAAUpQ,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,0BAAd,CAAf;;EACA,IAAIW,KAAK,CAACw2B,IAAN,KAAeh1B,SAAf,IAA4BxB,KAAK,CAACw2B,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIjkB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,MAAd,EAAsBqT,YAAtB,CAAmC,IAAInT,SAAJ,CAAcS,KAAK,CAACw2B,IAApB,CAAnC,EAA8Dh0B,QAA9D,CAAuE,MAAvE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC6b,KAAN,KAAgBra,SAAhB,IAA6BxB,KAAK,CAAC6b,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIiP,KAAK,GAAG2L,oCAAoC,CAACz2B,KAAK,CAAC6b,KAAP,EAAc5b,OAAd,CAAhD;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,MAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAdD;;AAeA,IAAIokB,mCAAmC,GAAG,UAAU12B,KAAV,EAAiBC,OAAjB,EAA0B;EAChE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,iBAAd,CAAf;;EACA,IAAIW,KAAK,CAACmtB,EAAN,KAAa3rB,SAAb,IAA0BxB,KAAK,CAACmtB,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAI5a,IAAI,GAAG,IAAIlT,SAAJ,CAAc,IAAd,EAAoBqT,YAApB,CAAiC,IAAInT,SAAJ,CAAcS,KAAK,CAACmtB,EAApB,CAAjC,EAA0D3qB,QAA1D,CAAmE,IAAnE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC22B,QAAN,KAAmBn1B,SAAnB,IAAgCxB,KAAK,CAAC22B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAIpkB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,UAAd,EAA0BqT,YAA1B,CAAuC,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAAC22B,QAAP,CAApB,CAAvC,EAA8En0B,QAA9E,CAAuF,UAAvF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8BxB,KAAK,CAACwM,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI+F,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAcS,KAAK,CAACwM,MAApB,CAArC,EAAkEhK,QAAlE,CAA2E,QAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC4rB,MAAN,KAAiBpqB,SAAjB,IAA8BxB,KAAK,CAAC4rB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIrZ,IAAI,GAAGqkB,yCAAyC,CAAC52B,KAAK,CAAC4rB,MAAP,EAAe3rB,OAAf,CAAzC,CAAiEuC,QAAjE,CAA0E,QAA1E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACka,MAAN,KAAiB1Y,SAAjB,IAA8BxB,KAAK,CAACka,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI3H,IAAI,GAAG,IAAIlT,SAAJ,CAAc,uBAAd,EAAuCqT,YAAvC,CAAoD,IAAInT,SAAJ,CAAcS,KAAK,CAACka,MAApB,CAApD,EAAiF1X,QAAjF,CAA0F,QAA1F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC62B,uBAAN,KAAkCr1B,SAAlC,IAA+CxB,KAAK,CAAC62B,uBAAN,KAAkC,IAArF,EAA2F;IACvF,IAAItkB,IAAI,GAAGukB,2CAA2C,CAAC92B,KAAK,CAAC62B,uBAAP,EAAgC52B,OAAhC,CAA3C,CAAoFuC,QAApF,CAA6F,yBAA7F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC+2B,yBAAN,KAAoCv1B,SAApC,IAAiDxB,KAAK,CAAC+2B,yBAAN,KAAoC,IAAzF,EAA+F;IAC3F,IAAIxkB,IAAI,GAAGsd,6CAA6C,CAAC7vB,KAAK,CAAC+2B,yBAAP,EAAkC92B,OAAlC,CAA7C,CAAwFuC,QAAxF,CAAiG,2BAAjG,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACuxB,WAAN,KAAsB/vB,SAAtB,IAAmCxB,KAAK,CAACuxB,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAIhf,IAAI,GAAGqc,+BAA+B,CAAC5uB,KAAK,CAACuxB,WAAP,EAAoBtxB,OAApB,CAA/B,CAA4DuC,QAA5D,CAAqE,aAArE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACg3B,uBAAN,KAAkCx1B,SAAlC,IAA+CxB,KAAK,CAACg3B,uBAAN,KAAkC,IAArF,EAA2F;IACvF,IAAIzkB,IAAI,GAAGoc,2CAA2C,CAAC3uB,KAAK,CAACg3B,uBAAP,EAAgC/2B,OAAhC,CAA3C,CAAoFuC,QAApF,CAA6F,yBAA7F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAvCD;;AAwCA,IAAI2kB,8CAA8C,GAAG,UAAUj3B,KAAV,EAAiBC,OAAjB,EAA0B;EAC3E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,4BAAd,CAAf;;EACA,IAAIW,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8BxB,KAAK,CAACwM,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI+F,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAcS,KAAK,CAACwM,MAApB,CAArC,EAAkEhK,QAAlE,CAA2E,QAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC0rB,IAAN,KAAelqB,SAAf,IAA4BxB,KAAK,CAAC0rB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIZ,KAAK,GAAGa,0BAA0B,CAAC3rB,KAAK,CAAC0rB,IAAP,EAAazrB,OAAb,CAAtC;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,KAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAdD;;AAeA,IAAIskB,yCAAyC,GAAG,UAAU52B,KAAV,EAAiBC,OAAjB,EAA0B;EACtE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,uBAAd,CAAf;EACAS,qBAAqB,CAACqsB,KAAtB,CAA4BnsB,KAA5B,EAAmC;IAC/BwM,MAAM,EAAE,UAAU4c,KAAV,EAAiB;MACrB,IAAI7W,IAAI,GAAG,IAAIlT,SAAJ,CAAc,QAAd,EAAwBqT,YAAxB,CAAqC,IAAInT,SAAJ,CAAc6pB,KAAd,CAArC,EAA2D5mB,QAA3D,CAAoE,QAApE,CAAX;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAJ8B;IAK/B6Z,GAAG,EAAE,UAAUhD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAG8Z,uBAAuB,CAACjD,KAAD,EAAQnpB,OAAR,CAAvB,CAAwCuC,QAAxC,CAAiD,KAAjD,CAAX;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAR8B;IAS/B+Z,GAAG,EAAE,UAAUlD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAG0kB,8CAA8C,CAAC7N,KAAD,EAAQnpB,OAAR,CAA9C,CAA+DuC,QAA/D,CAAwE,KAAxE,CAAX;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAZ8B;IAa/Bga,CAAC,EAAE,UAAUvW,IAAV,EAAgBoT,KAAhB,EAAuB;MACtB,IAAI,EAAEA,KAAK,YAAY/pB,SAAjB,IAA8B+pB,KAAK,YAAY7pB,SAAjD,CAAJ,EAAiE;QAC7D,MAAM,IAAImC,KAAJ,CAAU,mDAAV,CAAN;MACH;;MACD4Q,QAAQ,CAACI,YAAT,CAAsB,IAAIrT,SAAJ,CAAc2W,IAAd,EAAoBtD,YAApB,CAAiC0W,KAAjC,CAAtB;IACH;EAlB8B,CAAnC;EAoBA,OAAO9W,QAAP;AACH,CAvBD;;AAwBA,IAAImkB,oCAAoC,GAAG,UAAUz2B,KAAV,EAAiBC,OAAjB,EAA0B;EACjE,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAGmkB,mCAAmC,CAACpL,KAAD,EAAQrrB,OAAR,CAA9C;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI0sB,mCAAmC,GAAG,UAAUlvB,KAAV,EAAiBC,OAAjB,EAA0B;EAChE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,iBAAd,CAAf;;EACA,IAAIW,KAAK,CAACka,MAAN,KAAiB1Y,SAAjB,IAA8BxB,KAAK,CAACka,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI3H,IAAI,GAAG,IAAIlT,SAAJ,CAAc,uBAAd,EAAuCqT,YAAvC,CAAoD,IAAInT,SAAJ,CAAcS,KAAK,CAACka,MAApB,CAApD,EAAiF1X,QAAjF,CAA0F,QAA1F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACk3B,IAAN,KAAe11B,SAAf,IAA4BxB,KAAK,CAACk3B,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI3kB,IAAI,GAAG+hB,wCAAwC,CAACt0B,KAAK,CAACk3B,IAAP,EAAaj3B,OAAb,CAAxC,CAA8DuC,QAA9D,CAAuE,MAAvE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIgiB,wCAAwC,GAAG,UAAUt0B,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIW,KAAK,CAACm3B,OAAN,KAAkB31B,SAAlB,IAA+BxB,KAAK,CAACm3B,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAI5kB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,SAAd,EAAyBqT,YAAzB,CAAsC,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACm3B,OAAP,CAApB,CAAtC,EAA4E30B,QAA5E,CAAqF,SAArF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI/B,+CAA+C,GAAG,UAAUvQ,KAAV,EAAiBC,OAAjB,EAA0B;EAC5E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,6BAAd,CAAf;;EACA,IAAIW,KAAK,CAACse,KAAN,KAAgB9c,SAAhB,IAA6BxB,KAAK,CAACse,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI/L,IAAI,GAAG,IAAIlT,SAAJ,CAAc,OAAd,EAAuBqT,YAAvB,CAAoC,IAAInT,SAAJ,CAAcS,KAAK,CAACse,KAApB,CAApC,EAAgE9b,QAAhE,CAAyE,OAAzE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIW,mCAAmC,GAAG,UAAUjT,KAAV,EAAiBC,OAAjB,EAA0B;EAChE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,iBAAd,CAAf;;EACA,IAAIW,KAAK,CAACo3B,OAAN,KAAkB51B,SAAlB,IAA+BxB,KAAK,CAACo3B,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAI7kB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,uBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACo3B,OAAP,CAApB,CADP,EAEN50B,QAFM,CAEG,SAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIF,kCAAkC,GAAG,UAAUpS,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,gBAAd,CAAf;;EACA,IAAIW,KAAK,CAACsuB,IAAN,KAAe9sB,SAAf,IAA4BxB,KAAK,CAACsuB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI/b,IAAI,GAAG,IAAIlT,SAAJ,CAAc,MAAd,EAAsBqT,YAAtB,CAAmC,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACsuB,IAAP,CAApB,CAAnC,EAAsE9rB,QAAtE,CAA+E,MAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACq3B,oBAAN,KAA+B71B,SAA/B,IAA4CxB,KAAK,CAACq3B,oBAAN,KAA+B,IAA/E,EAAqF;IACjF,IAAI9kB,IAAI,GAAG0d,wCAAwC,CAACjwB,KAAK,CAACq3B,oBAAP,EAA6Bp3B,OAA7B,CAAxC,CAA8EuC,QAA9E,CAAuF,sBAAvF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC0wB,IAAN,KAAelvB,SAAf,IAA4BxB,KAAK,CAAC0wB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIne,IAAI,GAAG,IAAIlT,SAAJ,CAAc,oBAAd,EAAoCqT,YAApC,CAAiD,IAAInT,SAAJ,CAAcS,KAAK,CAAC0wB,IAApB,CAAjD,EAA4EluB,QAA5E,CAAqF,MAArF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACkwB,IAAN,KAAe1uB,SAAf,IAA4BxB,KAAK,CAACkwB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI3d,IAAI,GAAG,IAAIlT,SAAJ,CAAc,MAAd,EAAsBqT,YAAtB,CAAmC,IAAInT,SAAJ,CAAcS,KAAK,CAACkwB,IAApB,CAAnC,EAA8D1tB,QAA9D,CAAuE,MAAvE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACs3B,WAAN,KAAsB91B,SAAtB,IAAmCxB,KAAK,CAACs3B,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAI/kB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,aAAd,EAA6BqT,YAA7B,CAA0C,IAAInT,SAAJ,CAAcS,KAAK,CAACs3B,WAApB,CAA1C,EAA4E90B,QAA5E,CAAqF,aAArF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACu3B,gBAAN,KAA2B/1B,SAA3B,IAAwCxB,KAAK,CAACu3B,gBAAN,KAA2B,IAAvE,EAA6E;IACzE,IAAIhlB,IAAI,GAAGilB,oCAAoC,CAACx3B,KAAK,CAACu3B,gBAAP,EAAyBt3B,OAAzB,CAApC,CAAsEuC,QAAtE,CAA+E,kBAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACy3B,cAAN,KAAyBj2B,SAAzB,IAAsCxB,KAAK,CAACy3B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIllB,IAAI,GAAG8iB,kCAAkC,CAACr1B,KAAK,CAACy3B,cAAP,EAAuBx3B,OAAvB,CAAlC,CAAkEuC,QAAlE,CAA2E,gBAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA/BD;;AAgCA,IAAIolB,+BAA+B,GAAG,UAAU13B,KAAV,EAAiBC,OAAjB,EAA0B;EAC5D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,aAAd,CAAf;;EACA,IAAIW,KAAK,CAAC23B,SAAN,KAAoBn2B,SAApB,IAAiCxB,KAAK,CAAC23B,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAIplB,IAAI,GAAGua,6BAA6B,CAAC9sB,KAAK,CAAC23B,SAAP,EAAkB13B,OAAlB,CAA7B,CAAwDuC,QAAxD,CAAiE,WAAjE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC43B,QAAN,KAAmBp2B,SAAnB,IAAgCxB,KAAK,CAAC43B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAIrlB,IAAI,GAAGyjB,4BAA4B,CAACh2B,KAAK,CAAC43B,QAAP,EAAiB33B,OAAjB,CAA5B,CAAsDuC,QAAtD,CAA+D,UAA/D,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIulB,gCAAgC,GAAG,UAAU73B,KAAV,EAAiBC,OAAjB,EAA0B;EAC7D,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAGmlB,+BAA+B,CAACpM,KAAD,EAAQrrB,OAAR,CAA1C;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,aAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIuyB,+BAA+B,GAAG,UAAU/0B,KAAV,EAAiBC,OAAjB,EAA0B;EAC5D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,aAAd,CAAf;;EACA,IAAIW,KAAK,CAAC83B,WAAN,KAAsBt2B,SAAtB,IAAmCxB,KAAK,CAAC83B,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAIhN,KAAK,GAAGkF,kCAAkC,CAAChwB,KAAK,CAAC83B,WAAP,EAAoB73B,OAApB,CAA9C;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,YAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAVD;;AAWA,IAAIijB,8BAA8B,GAAG,UAAUv1B,KAAV,EAAiBC,OAAjB,EAA0B;EAC3D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,YAAd,CAAf;;EACA,IAAIW,KAAK,CAAC+3B,UAAN,KAAqBv2B,SAArB,IAAkCxB,KAAK,CAAC+3B,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAIxlB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,YAAd,EAA4BqT,YAA5B,CAAyC,IAAInT,SAAJ,CAAcS,KAAK,CAAC+3B,UAApB,CAAzC,EAA0Ev1B,QAA1E,CAAmF,YAAnF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACwM,MAAN,KAAiBhL,SAAjB,IAA8BxB,KAAK,CAACwM,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI+F,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EAAgCqT,YAAhC,CAA6C,IAAInT,SAAJ,CAAcS,KAAK,CAACwM,MAApB,CAA7C,EAA0EhK,QAA1E,CAAmF,QAAnF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACwyB,UAAN,KAAqBhxB,SAArB,IAAkCxB,KAAK,CAACwyB,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAIjgB,IAAI,GAAG8c,8BAA8B,CAACrvB,KAAK,CAACwyB,UAAP,EAAmBvyB,OAAnB,CAA9B,CAA0DuC,QAA1D,CAAmE,YAAnE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACg4B,SAAN,KAAoBx2B,SAApB,IAAiCxB,KAAK,CAACg4B,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAIzlB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,iBAAd,EAAiCqT,YAAjC,CAA8C,IAAInT,SAAJ,CAAcS,KAAK,CAACg4B,SAApB,CAA9C,EAA8Ex1B,QAA9E,CAAuF,WAAvF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACua,iBAAN,KAA4B/Y,SAA5B,IAAyCxB,KAAK,CAACua,iBAAN,KAA4B,IAAzE,EAA+E;IAC3E,IAAIuQ,KAAK,GAAGC,0BAA0B,CAAC/qB,KAAK,CAACua,iBAAP,EAA0Bta,OAA1B,CAAtC;IACA,IAAIg4B,eAAe,GAAG,IAAI54B,SAAJ,CAAc,mBAAd,CAAtB;IACAyrB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtB0lB,eAAe,CAACvlB,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsBulB,eAAtB;EACH;;EACD,IAAIj4B,KAAK,CAAC2E,OAAN,KAAkBnD,SAAlB,IAA+BxB,KAAK,CAAC2E,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAI4N,IAAI,GAAG9B,2BAA2B,CAACzQ,KAAK,CAAC2E,OAAP,EAAgB1E,OAAhB,CAA3B,CAAoDuC,QAApD,CAA6D,SAA7D,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACk4B,YAAN,KAAuB12B,SAAvB,IAAoCxB,KAAK,CAACk4B,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIpN,KAAK,GAAGqN,gCAAgC,CAACn4B,KAAK,CAACk4B,YAAP,EAAqBj4B,OAArB,CAA5C;IACA,IAAIm4B,eAAe,GAAG,IAAI/4B,SAAJ,CAAc,cAAd,CAAtB;IACAyrB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtB6lB,eAAe,CAAC1lB,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsB0lB,eAAtB;EACH;;EACD,IAAIp4B,KAAK,CAACgE,YAAN,KAAuBxC,SAAvB,IAAoCxB,KAAK,CAACgE,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIuO,IAAI,GAAG,IAAIlT,SAAJ,CAAc,cAAd,EAA8BqT,YAA9B,CAA2C,IAAInT,SAAJ,CAAcS,KAAK,CAACgE,YAApB,CAA3C,EAA8ExB,QAA9E,CAAuF,cAAvF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA3CD;;AA4CA,IAAIa,6BAA6B,GAAG,UAAUnT,KAAV,EAAiBC,OAAjB,EAA0B;EAC1D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,WAAd,CAAf;;EACA,IAAIW,KAAK,CAACq4B,KAAN,KAAgB72B,SAAhB,IAA6BxB,KAAK,CAACq4B,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI9lB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,OAAd,EAAuBqT,YAAvB,CAAoC,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACq4B,KAAP,CAApB,CAApC,EAAwE71B,QAAxE,CAAiF,OAAjF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACuqB,GAAN,KAAc/oB,SAAd,IAA2BxB,KAAK,CAACuqB,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIhY,IAAI,GAAG,IAAIlT,SAAJ,CAAc,KAAd,EAAqBqT,YAArB,CAAkC,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACuqB,GAAP,CAApB,CAAlC,EAAoE/nB,QAApE,CAA6E,KAA7E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIklB,oCAAoC,GAAG,UAAUx3B,KAAV,EAAiBC,OAAjB,EAA0B;EACjE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,kBAAd,CAAf;;EACA,IAAIW,KAAK,CAAC4S,kBAAN,KAA6BpR,SAA7B,IAA0CxB,KAAK,CAAC4S,kBAAN,KAA6B,IAA3E,EAAiF;IAC7E,IAAIL,IAAI,GAAGM,sCAAsC,CAAC7S,KAAK,CAAC4S,kBAAP,EAA2B3S,OAA3B,CAAtC,CAA0EuC,QAA1E,CAAmF,oBAAnF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC2S,cAAN,KAAyBnR,SAAzB,IAAsCxB,KAAK,CAAC2S,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIJ,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC2S,cAApB,CADP,EAENnQ,QAFM,CAEG,gBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACyS,UAAN,KAAqBjR,SAArB,IAAkCxB,KAAK,CAACyS,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAIF,IAAI,GAAG,IAAIlT,SAAJ,CAAc,YAAd,EAA4BqT,YAA5B,CAAyC,IAAInT,SAAJ,CAAcS,KAAK,CAACyS,UAApB,CAAzC,EAA0EjQ,QAA1E,CAAmF,YAAnF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC8S,mBAAN,KAA8BtR,SAA9B,IAA2CxB,KAAK,CAAC8S,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAIP,IAAI,GAAGQ,uCAAuC,CAAC/S,KAAK,CAAC8S,mBAAP,EAA4B7S,OAA5B,CAAvC,CAA4EuC,QAA5E,CAAqF,qBAArF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CArBD;;AAsBA,IAAIgmB,iDAAiD,GAAG,UAAUt4B,KAAV,EAAiBC,OAAjB,EAA0B;EAC9E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,+BAAd,CAAf;;EACA,IAAIW,KAAK,CAACu4B,YAAN,KAAuB/2B,SAAvB,IAAoCxB,KAAK,CAACu4B,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIhmB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,sBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACu4B,YAApB,CADP,EAEN/1B,QAFM,CAEG,cAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACw4B,cAAN,KAAyBh3B,SAAzB,IAAsCxB,KAAK,CAACw4B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIjmB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,aAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACw4B,cAApB,CADP,EAENh2B,QAFM,CAEG,gBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAI/D,qDAAqD,GAAG,UAAUvO,KAAV,EAAiBC,OAAjB,EAA0B;EAClF,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,mCAAd,CAAf;;EACA,IAAIW,KAAK,CAAC6b,KAAN,KAAgBra,SAAhB,IAA6BxB,KAAK,CAAC6b,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIiP,KAAK,GAAG2N,6CAA6C,CAACz4B,KAAK,CAAC6b,KAAP,EAAc5b,OAAd,CAAzD;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,MAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAVD;;AAWA,IAAIomB,4CAA4C,GAAG,UAAU14B,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,0BAAd,CAAf;;EACA,IAAIW,KAAK,CAAC24B,kCAAN,KAA6Cn3B,SAA7C,IAA0DxB,KAAK,CAAC24B,kCAAN,KAA6C,IAA3G,EAAiH;IAC7G,IAAIpmB,IAAI,GAAG+lB,iDAAiD,CAACt4B,KAAK,CAAC24B,kCAAP,EAA2C14B,OAA3C,CAAjD,CAAqGuC,QAArG,CAA8G,oCAA9G,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACuE,gBAAN,KAA2B/C,SAA3B,IAAwCxB,KAAK,CAACuE,gBAAN,KAA2B,IAAvE,EAA6E;IACzE,IAAIgO,IAAI,GAAG,IAAIlT,SAAJ,CAAc,kBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACuE,gBAAP,CAApB,CADP,EAEN/B,QAFM,CAEG,kBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAbD;;AAcA,IAAImmB,6CAA6C,GAAG,UAAUz4B,KAAV,EAAiBC,OAAjB,EAA0B;EAC1E,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAGmmB,4CAA4C,CAACpN,KAAD,EAAQrrB,OAAR,CAAvD;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIs0B,2CAA2C,GAAG,UAAU92B,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,yBAAd,CAAf;;EACA,IAAIW,KAAK,CAAC44B,sBAAN,KAAiCp3B,SAAjC,IAA8CxB,KAAK,CAAC44B,sBAAN,KAAiC,IAAnF,EAAyF;IACrF,IAAIrmB,IAAI,GAAGsmB,0CAA0C,CAAC74B,KAAK,CAAC44B,sBAAP,EAA+B34B,OAA/B,CAA1C,CAAkFuC,QAAlF,CAA2F,wBAA3F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC84B,oBAAN,KAA+Bt3B,SAA/B,IAA4CxB,KAAK,CAAC84B,oBAAN,KAA+B,IAA/E,EAAqF;IACjF,IAAIvmB,IAAI,GAAGgkB,wCAAwC,CAACv2B,KAAK,CAAC84B,oBAAP,EAA6B74B,OAA7B,CAAxC,CAA8EuC,QAA9E,CAAuF,sBAAvF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIggB,0BAA0B,GAAG,UAAUtyB,KAAV,EAAiBC,OAAjB,EAA0B;EACvD,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,SAAd,CAAf;;EACA,IAAIW,KAAK,CAAC+4B,KAAN,KAAgBv3B,SAAhB,IAA6BxB,KAAK,CAAC+4B,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIxmB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,aAAd,EAA6BqT,YAA7B,CAA0C,IAAInT,SAAJ,CAAcS,KAAK,CAAC+4B,KAApB,CAA1C,EAAsEv2B,QAAtE,CAA+E,OAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIumB,0CAA0C,GAAG,UAAU74B,KAAV,EAAiBC,OAAjB,EAA0B;EACvE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,wBAAd,CAAf;;EACA,IAAIW,KAAK,CAACka,MAAN,KAAiB1Y,SAAjB,IAA8BxB,KAAK,CAACka,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI3H,IAAI,GAAG,IAAIlT,SAAJ,CAAc,8BAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACka,MAApB,CADP,EAEN1X,QAFM,CAEG,QAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAI8f,yBAAyB,GAAG,UAAUpyB,KAAV,EAAiBC,OAAjB,EAA0B;EACtD,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,QAAd,CAAf;EACA,OAAOiT,QAAP;AACH,CAHD;;AAIA,IAAIyZ,wCAAwC,GAAG,UAAU/rB,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIW,KAAK,CAACg5B,UAAN,KAAqBx3B,SAArB,IAAkCxB,KAAK,CAACg5B,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAIzmB,IAAI,GAAG0mB,kDAAkD,CAACj5B,KAAK,CAACg5B,UAAP,EAAmB/4B,OAAnB,CAAlD,CAA8EuC,QAA9E,CAAuF,YAAvF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI2mB,kDAAkD,GAAG,UAAUj5B,KAAV,EAAiBC,OAAjB,EAA0B;EAC/E,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,gCAAd,CAAf;;EACA,IAAIW,KAAK,CAACk5B,mBAAN,KAA8B13B,SAA9B,IAA2CxB,KAAK,CAACk5B,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAI3mB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,mCAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACk5B,mBAApB,CADP,EAEN12B,QAFM,CAEG,qBAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACuxB,WAAN,KAAsB/vB,SAAtB,IAAmCxB,KAAK,CAACuxB,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAIhf,IAAI,GAAGyZ,8CAA8C,CAAChsB,KAAK,CAACuxB,WAAP,EAAoBtxB,OAApB,CAA9C,CAA2EuC,QAA3E,CAAoF,aAApF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAbD;;AAcA,IAAI+Z,uBAAuB,GAAG,UAAUrsB,KAAV,EAAiBC,OAAjB,EAA0B;EACpD,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,KAAd,CAAf;;EACA,IAAIW,KAAK,CAAC4B,GAAN,KAAcJ,SAAd,IAA2BxB,KAAK,CAAC4B,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAI2Q,IAAI,GAAG,IAAIlT,SAAJ,CAAc,WAAd,EAA2BqT,YAA3B,CAAwC,IAAInT,SAAJ,CAAcS,KAAK,CAAC4B,GAApB,CAAxC,EAAkEY,QAAlE,CAA2E,KAA3E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC+vB,KAAN,KAAgBvuB,SAAhB,IAA6BxB,KAAK,CAAC+vB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIxd,IAAI,GAAG,IAAIlT,SAAJ,CAAc,OAAd,EAAuBqT,YAAvB,CAAoC,IAAInT,SAAJ,CAAcS,KAAK,CAAC+vB,KAApB,CAApC,EAAgEvtB,QAAhE,CAAyE,OAAzE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAI7B,2BAA2B,GAAG,UAAUzQ,KAAV,EAAiBC,OAAjB,EAA0B;EACxD,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,SAAd,CAAf;;EACA,IAAIW,KAAK,CAACye,MAAN,KAAiBjd,SAAjB,IAA8BxB,KAAK,CAACye,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIqM,KAAK,GAAGa,0BAA0B,CAAC3rB,KAAK,CAACye,MAAP,EAAexe,OAAf,CAAtC;IACA,IAAIk5B,eAAe,GAAG,IAAI95B,SAAJ,CAAc,QAAd,CAAtB;IACAyrB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtB4mB,eAAe,CAACzmB,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsBymB,eAAtB;EACH;;EACD,OAAO7mB,QAAP;AACH,CAXD;;AAYA,IAAIqZ,0BAA0B,GAAG,UAAU3rB,KAAV,EAAiBC,OAAjB,EAA0B;EACvD,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG8Z,uBAAuB,CAACf,KAAD,EAAQrrB,OAAR,CAAlC;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,KAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI42B,+BAA+B,GAAG,UAAUp5B,KAAV,EAAiBC,OAAjB,EAA0B;EAC5D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,aAAd,CAAf;;EACA,IAAIW,KAAK,CAACowB,OAAN,KAAkB5uB,SAAlB,IAA+BxB,KAAK,CAACowB,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAI7d,IAAI,GAAG8d,2BAA2B,CAACrwB,KAAK,CAACowB,OAAP,EAAgBnwB,OAAhB,CAA3B,CAAoDuC,QAApD,CAA6D,SAA7D,CAAX;IACA+P,IAAI,CAAC9P,YAAL,CAAkB,WAAlB,EAA+B,2CAA/B;IACA6P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACswB,UAAN,KAAqB9uB,SAArB,IAAkCxB,KAAK,CAACswB,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAI/d,IAAI,GAAG,IAAIlT,SAAJ,CAAc,sBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACswB,UAApB,CADP,EAEN9tB,QAFM,CAEG,YAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAdD;;AAeA,IAAI2hB,gCAAgC,GAAG,UAAUj0B,KAAV,EAAiBC,OAAjB,EAA0B;EAC7D,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG6mB,+BAA+B,CAAC9N,KAAD,EAAQrrB,OAAR,CAA1C;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,OAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI62B,2BAA2B,GAAG,UAAUr5B,KAAV,EAAiBC,OAAjB,EAA0B;EACxD,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,SAAd,CAAf;;EACA,IAAIW,KAAK,CAACsuB,IAAN,KAAe9sB,SAAf,IAA4BxB,KAAK,CAACsuB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI/b,IAAI,GAAG,IAAIlT,SAAJ,CAAc,wBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACsuB,IAAP,CAApB,CADP,EAEN9rB,QAFM,CAEG,MAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC0qB,UAAN,KAAqBlpB,SAArB,IAAkCxB,KAAK,CAAC0qB,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAInY,IAAI,GAAG,IAAIlT,SAAJ,CAAc,8BAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAAC0qB,UAApB,CADP,EAENloB,QAFM,CAEG,YAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAIgf,+BAA+B,GAAG,UAAUtxB,KAAV,EAAiBC,OAAjB,EAA0B;EAC5D,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG8mB,2BAA2B,CAAC/N,KAAD,EAAQrrB,OAAR,CAAtC;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI82B,sCAAsC,GAAG,UAAUt5B,KAAV,EAAiBC,OAAjB,EAA0B;EACnE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,oBAAd,CAAf;;EACA,IAAIW,KAAK,CAACmG,EAAN,KAAa3E,SAAb,IAA0BxB,KAAK,CAACmG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIoM,IAAI,GAAG,IAAIlT,SAAJ,CAAc,gBAAd,EAAgCqT,YAAhC,CAA6C,IAAInT,SAAJ,CAAcS,KAAK,CAACmG,EAApB,CAA7C,EAAsE3D,QAAtE,CAA+E,IAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACu5B,QAAN,KAAmB/3B,SAAnB,IAAgCxB,KAAK,CAACu5B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAIhnB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,UAAd,EAA0BqT,YAA1B,CAAuC,IAAInT,SAAJ,CAAcS,KAAK,CAACu5B,QAApB,CAAvC,EAAsE/2B,QAAtE,CAA+E,OAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAAC6yB,MAAN,KAAiBrxB,SAAjB,IAA8BxB,KAAK,CAAC6yB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI/H,KAAK,GAAG8E,6BAA6B,CAAC5vB,KAAK,CAAC6yB,MAAP,EAAe5yB,OAAf,CAAzC;IACA6qB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAC/P,QAAL,CAAc,OAAd,CAAP;MACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIvS,KAAK,CAAC4rB,MAAN,KAAiBpqB,SAAjB,IAA8BxB,KAAK,CAAC4rB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIrZ,IAAI,GAAGugB,mDAAmD,CAAC9yB,KAAK,CAAC4rB,MAAP,EAAe3rB,OAAf,CAAnD,CAA2EuC,QAA3E,CAAoF,QAApF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAtBD;;AAuBA,IAAIuiB,0CAA0C,GAAG,UAAU70B,KAAV,EAAiBC,OAAjB,EAA0B;EACvE,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG+mB,sCAAsC,CAAChO,KAAD,EAAQrrB,OAAR,CAAjD;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIg3B,8BAA8B,GAAG,UAAUx5B,KAAV,EAAiBC,OAAjB,EAA0B;EAC3D,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,YAAd,CAAf;;EACA,IAAIW,KAAK,CAACizB,IAAN,KAAezxB,SAAf,IAA4BxB,KAAK,CAACizB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI1gB,IAAI,GAAG,IAAIlT,SAAJ,CAAc,MAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACizB,IAAN,CAAWnuB,WAAX,GAAyBjD,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,IAAyC,GAAvD,CADP,EAENW,QAFM,CAEG,MAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACsuB,IAAN,KAAe9sB,SAAf,IAA4BxB,KAAK,CAACsuB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI/b,IAAI,GAAG,IAAIlT,SAAJ,CAAc,MAAd,EAAsBqT,YAAtB,CAAmC,IAAInT,SAAJ,CAAcsrB,MAAM,CAAC7qB,KAAK,CAACsuB,IAAP,CAApB,CAAnC,EAAsE9rB,QAAtE,CAA+E,MAA/E,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACgE,YAAN,KAAuBxC,SAAvB,IAAoCxB,KAAK,CAACgE,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIuO,IAAI,GAAG,IAAIlT,SAAJ,CAAc,wBAAd,EACNqT,YADM,CACO,IAAInT,SAAJ,CAAcS,KAAK,CAACgE,YAApB,CADP,EAENxB,QAFM,CAEG,cAFH,CAAX;IAGA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAnBD;;AAoBA,IAAIghB,kCAAkC,GAAG,UAAUtzB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAGinB,8BAA8B,CAAClO,KAAD,EAAQrrB,OAAR,CAAzC;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI21B,gCAAgC,GAAG,UAAUn4B,KAAV,EAAiBC,OAAjB,EAA0B;EAC7D,OAAOD,KAAK,CACPorB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAI/Y,IAAI,GAAG6hB,iCAAiC,CAAC9I,KAAD,EAAQrrB,OAAR,CAA5C;IACA,OAAOsS,IAAI,CAAC/P,QAAL,CAAc,eAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIoO,2CAA2C,GAAG,UAAU5Q,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,yBAAd,CAAf;;EACA,IAAIW,KAAK,CAAC6e,SAAN,KAAoBrd,SAApB,IAAiCxB,KAAK,CAAC6e,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAItM,IAAI,GAAG,IAAIlT,SAAJ,CAAc,WAAd,EAA2BqT,YAA3B,CAAwC,IAAInT,SAAJ,CAAcS,KAAK,CAAC6e,SAApB,CAAxC,EAAwErc,QAAxE,CAAiF,WAAjF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACka,MAAN,KAAiB1Y,SAAjB,IAA8BxB,KAAK,CAACka,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI3H,IAAI,GAAG,IAAIlT,SAAJ,CAAc,wBAAd,EAAwCqT,YAAxC,CAAqD,IAAInT,SAAJ,CAAcS,KAAK,CAACka,MAApB,CAArD,EAAkF1X,QAAlF,CAA2F,QAA3F,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIvB,wCAAwC,GAAG,UAAU/Q,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIqS,QAAQ,GAAG,IAAIjT,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIW,KAAK,CAACgf,aAAN,KAAwBxd,SAAxB,IAAqCxB,KAAK,CAACgf,aAAN,KAAwB,IAAjE,EAAuE;IACnE,IAAIzM,IAAI,GAAGmd,iCAAiC,CAAC1vB,KAAK,CAACgf,aAAP,EAAsB/e,OAAtB,CAAjC,CAAgEuC,QAAhE,CAAyE,eAAzE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACif,aAAN,KAAwBzd,SAAxB,IAAqCxB,KAAK,CAACif,aAAN,KAAwB,IAAjE,EAAuE;IACnE,IAAI1M,IAAI,GAAGoe,iCAAiC,CAAC3wB,KAAK,CAACif,aAAP,EAAsBhf,OAAtB,CAAjC,CAAgEuC,QAAhE,CAAyE,eAAzE,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACkf,qBAAN,KAAgC1d,SAAhC,IAA6CxB,KAAK,CAACkf,qBAAN,KAAgC,IAAjF,EAAuF;IACnF,IAAI3M,IAAI,GAAG+jB,yCAAyC,CAACt2B,KAAK,CAACkf,qBAAP,EAA8Bjf,OAA9B,CAAzC,CAAgFuC,QAAhF,CAAyF,uBAAzF,CAAX;IACA8P,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIvS,KAAK,CAACmf,YAAN,KAAuB3d,SAAvB,IAAoCxB,KAAK,CAACmf,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAI2L,KAAK,GAAG+M,gCAAgC,CAAC73B,KAAK,CAACmf,YAAP,EAAqBlf,OAArB,CAA5C;IACA,IAAIw5B,eAAe,GAAG,IAAIp6B,SAAJ,CAAc,cAAd,CAAtB;IACAyrB,KAAK,CAAChpB,GAAN,CAAU,UAAUyQ,IAAV,EAAgB;MACtBknB,eAAe,CAAC/mB,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsB+mB,eAAtB;EACH;;EACD,OAAOnnB,QAAP;AACH,CAvBD;;AAwBA,IAAIonB,oDAAoD,GAAG,UAAU9kB,MAAV,EAAkB3U,OAAlB,EAA2B;EAClF,IAAIoC,QAAQ,GAAG;IACXuoB,mBAAmB,EAAEppB;EADV,CAAf;;EAGA,IAAIoT,MAAM,CAAC,qBAAD,CAAN,KAAkCpT,SAAtC,EAAiD;IAC7Ca,QAAQ,CAACuoB,mBAAT,GAA+B3rB,kBAAkB,CAAC2V,MAAM,CAAC,qBAAD,CAAP,CAAjD;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAIs3B,8CAA8C,GAAG,UAAU/kB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC5E,IAAIoC,QAAQ,GAAG;IACXiY,KAAK,EAAE9Y;EADI,CAAf;;EAGA,IAAIoT,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACiY,KAAT,GAAiBrc,cAAc,CAAC2W,MAAM,CAAC,OAAD,CAAP,CAA/B;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAIu3B,oCAAoC,GAAG,UAAUhlB,MAAV,EAAkB3U,OAAlB,EAA2B;EAClE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOrtB,cAAc,CAACqtB,KAAD,CAArB;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIuO,oCAAoC,GAAG,UAAUjlB,MAAV,EAAkB3U,OAAlB,EAA2B;EAClE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOrtB,cAAc,CAACqtB,KAAD,CAArB;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIwO,oCAAoC,GAAG,UAAUllB,MAAV,EAAkB3U,OAAlB,EAA2B;EAClE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOrtB,cAAc,CAACqtB,KAAD,CAArB;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIyO,0CAA0C,GAAG,UAAUnlB,MAAV,EAAkB3U,OAAlB,EAA2B;EACxE,IAAIoC,QAAQ,GAAG;IACXmK,MAAM,EAAEhL,SADG;IAEXkqB,IAAI,EAAElqB;EAFK,CAAf;;EAIA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAACwX,GAAP,KAAe,EAAnB,EAAuB;IACnB/pB,QAAQ,CAACqpB,IAAT,GAAgB,EAAhB;EACH;;EACD,IAAI9W,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACqpB,IAAT,GAAgBhN,4BAA4B,CAACngB,sBAAsB,CAACqW,MAAM,CAAC,KAAD,CAAP,CAAvB,EAAwC3U,OAAxC,CAA5C;EACH;;EACD,OAAOoC,QAAP;AACH,CAfD;;AAgBA,IAAIuY,4CAA4C,GAAG,UAAUhG,MAAV,EAAkB3U,OAAlB,EAA2B;EAC1E,IAAIoC,QAAQ,GAAG;IACX8D,EAAE,EAAE3E,SADO;IAEXoqB,MAAM,EAAEpqB,SAFG;IAGXsqB,oBAAoB,EAAEtqB;EAHX,CAAf;;EAKA,IAAIoT,MAAM,CAAC,IAAD,CAAN,KAAiBpT,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC8D,EAAT,GAAclI,cAAc,CAAC2W,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACupB,MAAT,GAAkBoO,qCAAqC,CAAC77B,aAAa,CAACyW,MAAM,CAAC,QAAD,CAAP,CAAd,EAAkC3U,OAAlC,CAAvD;EACH;;EACD,IAAI2U,MAAM,CAAC,sBAAD,CAAN,KAAmCpT,SAAvC,EAAkD;IAC9Ca,QAAQ,CAACypB,oBAAT,GAAgCmO,0CAA0C,CAACrlB,MAAM,CAAC,sBAAD,CAAP,EAAiC3U,OAAjC,CAA1E;EACH;;EACD,OAAOoC,QAAP;AACH,CAhBD;;AAiBA,IAAIwf,gDAAgD,GAAG,UAAUjN,MAAV,EAAkB3U,OAAlB,EAA2B;EAC9E,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO1Q,4CAA4C,CAAC0Q,KAAD,EAAQrrB,OAAR,CAAnD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIi6B,gDAAgD,GAAG,UAAUtlB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC9E,IAAIoC,QAAQ,GAAG;IACX4pB,mBAAmB,EAAEzqB;EADV,CAAf;;EAGA,IAAIoT,MAAM,CAAC,qBAAD,CAAN,KAAkCpT,SAAtC,EAAiD;IAC7Ca,QAAQ,CAAC4pB,mBAAT,GAA+BkO,kDAAkD,CAACvlB,MAAM,CAAC,qBAAD,CAAP,EAAgC3U,OAAhC,CAAjF;EACH;;EACD,OAAOoC,QAAP;AACH,CARD;;AASA,IAAI23B,qCAAqC,GAAG,UAAUplB,MAAV,EAAkB3U,OAAlB,EAA2B;EACnE,IAAI2U,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChC,OAAO;MACHgL,MAAM,EAAEvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP;IADnB,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7B,OAAO;MACH4qB,GAAG,EAAEgO,yBAAyB,CAACxlB,MAAM,CAAC,KAAD,CAAP,EAAgB3U,OAAhB;IAD3B,CAAP;EAGH;;EACD,IAAI2U,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7B,OAAO;MACH8qB,GAAG,EAAEyN,0CAA0C,CAACnlB,MAAM,CAAC,KAAD,CAAP,EAAgB3U,OAAhB;IAD5C,CAAP;EAGH;;EACD,OAAO;IAAEuqB,QAAQ,EAAEtlB,MAAM,CAAC+jB,OAAP,CAAerU,MAAf,EAAuB,CAAvB;EAAZ,CAAP;AACH,CAjBD;;AAkBA,IAAIulB,kDAAkD,GAAG,UAAUvlB,MAAV,EAAkB3U,OAAlB,EAA2B;EAChF,IAAIoC,QAAQ,GAAG;IACXmqB,MAAM,EAAEhrB,SADG;IAEXirB,eAAe,EAAEjrB,SAFN;IAGXD,MAAM,EAAEC,SAHG;IAIXgL,MAAM,EAAEhL;EAJG,CAAf;;EAMA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmqB,MAAT,GAAkBvuB,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,iBAAD,CAAN,KAA8BpT,SAAlC,EAA6C;IACzCa,QAAQ,CAACoqB,eAAT,GAA2BxuB,cAAc,CAAC2W,MAAM,CAAC,iBAAD,CAAP,CAAzC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACd,MAAT,GAAkBtD,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOvS,QAAP;AACH,CApBD;;AAqBA,IAAIg4B,4BAA4B,GAAG,UAAUzlB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC1D,IAAIoC,QAAQ,GAAG;IACXqhB,IAAI,EAAEliB,SADK;IAEX84B,YAAY,EAAE94B;EAFH,CAAf;;EAIA,IAAIoT,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACqhB,IAAT,GAAgBzlB,cAAc,CAAC2W,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAACi4B,YAAT,GAAwBz8B,eAAe,CAACgB,sBAAsB,CAAC+V,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAIwgB,6BAA6B,GAAG,UAAUjO,MAAV,EAAkB3U,OAAlB,EAA2B;EAC3D,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO+O,4BAA4B,CAAC/O,KAAD,EAAQrrB,OAAR,CAAnC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIs6B,kCAAkC,GAAG,UAAU3lB,MAAV,EAAkB3U,OAAlB,EAA2B;EAChE,IAAIoC,QAAQ,GAAG;IACXmK,MAAM,EAAEhL;EADG,CAAf;;EAGA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAI+gB,sCAAsC,GAAG,UAAUxO,MAAV,EAAkB3U,OAAlB,EAA2B;EACpE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOiP,kCAAkC,CAACjP,KAAD,EAAQrrB,OAAR,CAAzC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIu6B,+BAA+B,GAAG,UAAU5lB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC7D,IAAIoC,QAAQ,GAAG;IACX0qB,2BAA2B,EAAEvrB,SADlB;IAEXwrB,eAAe,EAAExrB;EAFN,CAAf;;EAIA,IAAIoT,MAAM,CAAC,6BAAD,CAAN,KAA0CpT,SAA9C,EAAyD;IACrDa,QAAQ,CAAC0qB,2BAAT,GAAuC9uB,cAAc,CAAC2W,MAAM,CAAC,6BAAD,CAAP,CAArD;EACH;;EACD,IAAIA,MAAM,CAAC,iBAAD,CAAN,KAA8BpT,SAAlC,EAA6C;IACzCa,QAAQ,CAAC2qB,eAAT,GAA2B/uB,cAAc,CAAC2W,MAAM,CAAC,iBAAD,CAAP,CAAzC;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAIo4B,uCAAuC,GAAG,UAAU7lB,MAAV,EAAkB3U,OAAlB,EAA2B;EACrE,IAAIoC,QAAQ,GAAG,EAAf;EACA,OAAOA,QAAP;AACH,CAHD;;AAIA,IAAI0U,sCAAsC,GAAG,UAAUnC,MAAV,EAAkB3U,OAAlB,EAA2B;EACpE,IAAIoC,QAAQ,GAAG;IACX4R,IAAI,EAAEzS,SADK;IAEX2S,YAAY,EAAE3S;EAFH,CAAf;;EAIA,IAAIoT,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC4R,IAAT,GAAgBhW,cAAc,CAAC2W,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC8R,YAAT,GAAwBtW,eAAe,CAACgB,sBAAsB,CAAC+V,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAIsnB,oCAAoC,GAAG,UAAU/U,MAAV,EAAkB3U,OAAlB,EAA2B;EAClE,IAAIoC,QAAQ,GAAG;IACX4R,IAAI,EAAEzS,SADK;IAEX2S,YAAY,EAAE3S;EAFH,CAAf;;EAIA,IAAIoT,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC4R,IAAT,GAAgBhW,cAAc,CAAC2W,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC8R,YAAT,GAAwBtW,eAAe,CAACgB,sBAAsB,CAAC+V,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAIq4B,8BAA8B,GAAG,UAAU9lB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC5D,IAAIoC,QAAQ,GAAG;IACX8qB,EAAE,EAAE3rB,SADO;IAEX4rB,cAAc,EAAE5rB,SAFL;IAGX6rB,cAAc,EAAE7rB,SAHL;IAIX8rB,cAAc,EAAE9rB,SAJL;IAKX+rB,aAAa,EAAE/rB,SALJ;IAMXisB,aAAa,EAAEjsB;EANJ,CAAf;;EAQA,IAAIoT,MAAM,CAAC,IAAD,CAAN,KAAiBpT,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC8qB,EAAT,GAAclvB,cAAc,CAAC2W,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC+lB,aAAP,KAAyB,EAA7B,EAAiC;IAC7Bt4B,QAAQ,CAAC+qB,cAAT,GAA0B,EAA1B;EACH;;EACD,IAAIxY,MAAM,CAAC,eAAD,CAAN,KAA4BpT,SAAhC,EAA2C;IACvCa,QAAQ,CAAC+qB,cAAT,GAA0BwM,oCAAoC,CAACr7B,sBAAsB,CAACqW,MAAM,CAAC,eAAD,CAAP,CAAvB,EAAkD3U,OAAlD,CAA9D;EACH;;EACD,IAAI2U,MAAM,CAACgmB,aAAP,KAAyB,EAA7B,EAAiC;IAC7Bv4B,QAAQ,CAACgrB,cAAT,GAA0B,EAA1B;EACH;;EACD,IAAIzY,MAAM,CAAC,eAAD,CAAN,KAA4BpT,SAAhC,EAA2C;IACvCa,QAAQ,CAACgrB,cAAT,GAA0BwM,oCAAoC,CAACt7B,sBAAsB,CAACqW,MAAM,CAAC,eAAD,CAAP,CAAvB,EAAkD3U,OAAlD,CAA9D;EACH;;EACD,IAAI2U,MAAM,CAACimB,aAAP,KAAyB,EAA7B,EAAiC;IAC7Bx4B,QAAQ,CAACirB,cAAT,GAA0B,EAA1B;EACH;;EACD,IAAI1Y,MAAM,CAAC,eAAD,CAAN,KAA4BpT,SAAhC,EAA2C;IACvCa,QAAQ,CAACirB,cAAT,GAA0BwM,oCAAoC,CAACv7B,sBAAsB,CAACqW,MAAM,CAAC,eAAD,CAAP,CAAvB,EAAkD3U,OAAlD,CAA9D;EACH;;EACD,IAAI2U,MAAM,CAACkmB,YAAP,KAAwB,EAA5B,EAAgC;IAC5Bz4B,QAAQ,CAACkrB,aAAT,GAAyB,EAAzB;EACH;;EACD,IAAI3Y,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAACkrB,aAAT,GAAyBwN,mCAAmC,CAACx8B,sBAAsB,CAACqW,MAAM,CAAC,cAAD,CAAP,CAAvB,EAAiD3U,OAAjD,CAA5D;EACH;;EACD,IAAI2U,MAAM,CAAC,eAAD,CAAN,KAA4BpT,SAAhC,EAA2C;IACvCa,QAAQ,CAACorB,aAAT,GAAyBxuB,kBAAkB,CAAC2V,MAAM,CAAC,eAAD,CAAP,CAA3C;EACH;;EACD,OAAOvS,QAAP;AACH,CAxCD;;AAyCA,IAAI4Y,+BAA+B,GAAG,UAAUrG,MAAV,EAAkB3U,OAAlB,EAA2B;EAC7D,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOoP,8BAA8B,CAACpP,KAAD,EAAQrrB,OAAR,CAArC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI+6B,sCAAsC,GAAG,UAAUpmB,MAAV,EAAkB3U,OAAlB,EAA2B;EACpE,IAAIoC,QAAQ,GAAG;IACXgsB,IAAI,EAAE7sB,SADK;IAEX8sB,IAAI,EAAE9sB,SAFK;IAGX+sB,KAAK,EAAE/sB;EAHI,CAAf;;EAKA,IAAIoT,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACgsB,IAAT,GAAgBpwB,cAAc,CAAC2W,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACisB,IAAT,GAAgBrvB,kBAAkB,CAAC2V,MAAM,CAAC,MAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACksB,KAAT,GAAiBtvB,kBAAkB,CAAC2V,MAAM,CAAC,OAAD,CAAP,CAAnC;EACH;;EACD,OAAOvS,QAAP;AACH,CAhBD;;AAiBA,IAAI44B,mCAAmC,GAAG,UAAUrmB,MAAV,EAAkB3U,OAAlB,EAA2B;EACjE,IAAIoC,QAAQ,GAAG;IACXT,GAAG,EAAEJ,SADM;IAEXqG,SAAS,EAAErG,SAFA;IAGXwS,YAAY,EAAExS,SAHH;IAIX05B,qBAAqB,EAAE15B;EAJZ,CAAf;;EAMA,IAAIoT,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAe3D,cAAc,CAAC2W,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,WAAD,CAAN,KAAwBpT,SAA5B,EAAuC;IACnCa,QAAQ,CAACwF,SAAT,GAAqB5J,cAAc,CAAC2W,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC2R,YAAT,GAAwBrV,cAAc,CAACiW,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,uBAAD,CAAN,KAAoCpT,SAAxC,EAAmD;IAC/Ca,QAAQ,CAAC64B,qBAAT,GAAiCj9B,cAAc,CAAC2W,MAAM,CAAC,uBAAD,CAAP,CAA/C;EACH;;EACD,OAAOvS,QAAP;AACH,CApBD;;AAqBA,IAAIqX,oCAAoC,GAAG,UAAU9E,MAAV,EAAkB3U,OAAlB,EAA2B;EAClE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO2P,mCAAmC,CAAC3P,KAAD,EAAQrrB,OAAR,CAA1C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIk7B,uCAAuC,GAAG,UAAUvmB,MAAV,EAAkB3U,OAAlB,EAA2B;EACrE,IAAIoC,QAAQ,GAAG;IACXiY,KAAK,EAAE9Y,SADI;IAEXI,GAAG,EAAEJ,SAFM;IAGXqG,SAAS,EAAErG,SAHA;IAIX45B,QAAQ,EAAE55B,SAJC;IAKX2S,YAAY,EAAE3S;EALH,CAAf;;EAOA,IAAIoT,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACiY,KAAT,GAAiBG,2BAA2B,CAAC7F,MAAM,CAAC,OAAD,CAAP,EAAkB3U,OAAlB,CAA5C;EACH;;EACD,IAAI2U,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAe3D,cAAc,CAAC2W,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,WAAD,CAAN,KAAwBpT,SAA5B,EAAuC;IACnCa,QAAQ,CAACwF,SAAT,GAAqB5J,cAAc,CAAC2W,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,IAAIA,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAA3B,EAAsC;IAClCa,QAAQ,CAAC+4B,QAAT,GAAoBz8B,cAAc,CAACiW,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC8R,YAAT,GAAwBtW,eAAe,CAACgB,sBAAsB,CAAC+V,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,OAAOvS,QAAP;AACH,CAxBD;;AAyBA,IAAIg5B,6CAA6C,GAAG,UAAUzmB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC3E,IAAIoC,QAAQ,GAAG;IACX6X,MAAM,EAAE1Y;EADG,CAAf;;EAGA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAAC6X,MAAT,GAAkBjc,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAIiiB,mCAAmC,GAAG,UAAU1P,MAAV,EAAkB3U,OAAlB,EAA2B;EACjE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO6P,uCAAuC,CAAC7P,KAAD,EAAQrrB,OAAR,CAA9C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIq7B,iCAAiC,GAAG,UAAU1mB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC/D,IAAIoC,QAAQ,GAAG;IACXd,MAAM,EAAEC,SADG;IAEXqtB,OAAO,EAAErtB,SAFE;IAGXwC,YAAY,EAAExC,SAHH;IAIXstB,wBAAwB,EAAEttB,SAJf;IAKXutB,uBAAuB,EAAEvtB,SALd;IAMXytB,eAAe,EAAEztB,SANN;IAOX2tB,OAAO,EAAE3tB;EAPE,CAAf;;EASA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACd,MAAT,GAAkBtD,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,SAAD,CAAN,KAAsBpT,SAA1B,EAAqC;IACjCa,QAAQ,CAACwsB,OAAT,GAAmB5wB,cAAc,CAAC2W,MAAM,CAAC,SAAD,CAAP,CAAjC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC2B,YAAT,GAAwB/F,cAAc,CAAC2W,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,0BAAD,CAAN,KAAuCpT,SAA3C,EAAsD;IAClDa,QAAQ,CAACysB,wBAAT,GAAoC6K,8CAA8C,CAAC/kB,MAAM,CAAC,0BAAD,CAAP,EAAqC3U,OAArC,CAAlF;EACH;;EACD,IAAI2U,MAAM,CAAC,yBAAD,CAAN,KAAsCpT,SAA1C,EAAqD;IACjDa,QAAQ,CAAC0sB,uBAAT,GAAmCwM,6CAA6C,CAAC3mB,MAAM,CAAC,yBAAD,CAAP,EAAoC3U,OAApC,CAAhF;EACH;;EACD,IAAI2U,MAAM,CAAC,iBAAD,CAAN,KAA8BpT,SAAlC,EAA6C;IACzCa,QAAQ,CAAC4sB,eAAT,GAA2BuM,qCAAqC,CAAC5mB,MAAM,CAAC,iBAAD,CAAP,EAA4B3U,OAA5B,CAAhE;EACH;;EACD,IAAI2U,MAAM,CAAC,SAAD,CAAN,KAAsBpT,SAA1B,EAAqC;IACjCa,QAAQ,CAAC8sB,OAAT,GAAmBsM,6BAA6B,CAAC7mB,MAAM,CAAC,SAAD,CAAP,EAAoB3U,OAApB,CAAhD;EACH;;EACD,OAAOoC,QAAP;AACH,CAhCD;;AAiCA,IAAIk5B,6CAA6C,GAAG,UAAU3mB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC3E,IAAIoC,QAAQ,GAAG;IACXotB,eAAe,EAAEjuB;EADN,CAAf;;EAGA,IAAIoT,MAAM,CAAC,iBAAD,CAAN,KAA8BpT,SAAlC,EAA6C;IACzCa,QAAQ,CAACotB,eAAT,GAA2BxxB,cAAc,CAAC2W,MAAM,CAAC,iBAAD,CAAP,CAAzC;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAIq5B,8BAA8B,GAAG,UAAU9mB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC5D,IAAIoC,QAAQ,GAAG,EAAf;EACA,OAAOA,QAAP;AACH,CAHD;;AAIA,IAAIs5B,4BAA4B,GAAG,UAAU/mB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC1D,IAAIoC,QAAQ,GAAG;IACXT,GAAG,EAAEJ,SADM;IAEXqG,SAAS,EAAErG,SAFA;IAGX0U,IAAI,EAAE1U,SAHK;IAIX2U,OAAO,EAAE3U;EAJE,CAAf;;EAMA,IAAIoT,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAe3D,cAAc,CAAC2W,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,WAAD,CAAN,KAAwBpT,SAA5B,EAAuC;IACnCa,QAAQ,CAACwF,SAAT,GAAqB5J,cAAc,CAAC2W,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC6T,IAAT,GAAgBjY,cAAc,CAAC2W,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,SAAD,CAAN,KAAsBpT,SAA1B,EAAqC;IACjCa,QAAQ,CAAC8T,OAAT,GAAmBlY,cAAc,CAAC2W,MAAM,CAAC,SAAD,CAAP,CAAjC;EACH;;EACD,OAAOvS,QAAP;AACH,CApBD;;AAqBA,IAAI+c,mCAAmC,GAAG,UAAUxK,MAAV,EAAkB3U,OAAlB,EAA2B;EACjE,IAAIoC,QAAQ,GAAG;IACXT,GAAG,EAAEJ;EADM,CAAf;;EAGA,IAAIoT,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAe3D,cAAc,CAAC2W,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAIsX,4BAA4B,GAAG,UAAU/E,MAAV,EAAkB3U,OAAlB,EAA2B;EAC1D,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOqQ,4BAA4B,CAACrQ,KAAD,EAAQrrB,OAAR,CAAnC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI+c,8CAA8C,GAAG,UAAUpI,MAAV,EAAkB3U,OAAlB,EAA2B;EAC5E,IAAIoC,QAAQ,GAAG,EAAf;EACA,OAAOA,QAAP;AACH,CAHD;;AAIA,IAAIu5B,+BAA+B,GAAG,UAAUhnB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC7D,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOrtB,cAAc,CAACqtB,KAAD,CAArB;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIuQ,+CAA+C,GAAG,UAAUjnB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC7E,IAAIoC,QAAQ,GAAG;IACX6X,MAAM,EAAE1Y;EADG,CAAf;;EAGA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAAC6X,MAAT,GAAkBjc,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAI04B,mCAAmC,GAAG,UAAUnmB,MAAV,EAAkB3U,OAAlB,EAA2B;EACjE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOrtB,cAAc,CAACqtB,KAAD,CAArB;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIwQ,gCAAgC,GAAG,UAAUlnB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC9D,IAAIoC,QAAQ,GAAG;IACXqhB,IAAI,EAAEliB,SADK;IAEXuuB,KAAK,EAAEvuB;EAFI,CAAf;;EAIA,IAAIoT,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACqhB,IAAT,GAAgBzlB,cAAc,CAAC2W,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAAC0tB,KAAT,GAAiB9xB,cAAc,CAAC2W,MAAM,CAAC,OAAD,CAAP,CAA/B;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAI05B,oCAAoC,GAAG,UAAUnnB,MAAV,EAAkB3U,OAAlB,EAA2B;EAClE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOwQ,gCAAgC,CAACxQ,KAAD,EAAQrrB,OAAR,CAAvC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI+7B,2BAA2B,GAAG,UAAUpnB,MAAV,EAAkB3U,OAAlB,EAA2B;EACzD,IAAIoC,QAAQ,GAAG;IACX+tB,OAAO,EAAE5uB,SADE;IAEX8uB,UAAU,EAAE9uB;EAFD,CAAf;;EAIA,IAAIoT,MAAM,CAAC,SAAD,CAAN,KAAsBpT,SAA1B,EAAqC;IACjCa,QAAQ,CAAC+tB,OAAT,GAAmB6L,6BAA6B,CAACrnB,MAAM,CAAC,SAAD,CAAP,EAAoB3U,OAApB,CAAhD;EACH;;EACD,IAAI2U,MAAM,CAAC,YAAD,CAAN,KAAyBpT,SAA7B,EAAwC;IACpCa,QAAQ,CAACiuB,UAAT,GAAsBryB,cAAc,CAAC2W,MAAM,CAAC,YAAD,CAAP,CAApC;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAI45B,6BAA6B,GAAG,UAAUrnB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC3D,IAAIoC,QAAQ,GAAG;IACXkuB,WAAW,EAAE/uB,SADF;IAEXgvB,YAAY,EAAEhvB,SAFH;IAGX2rB,EAAE,EAAE3rB,SAHO;IAIXivB,GAAG,EAAEjvB,SAJM;IAKXkvB,IAAI,EAAElvB;EALK,CAAf;;EAOA,IAAIoT,MAAM,CAAC,aAAD,CAAN,KAA0BpT,SAA9B,EAAyC;IACrCa,QAAQ,CAACkuB,WAAT,GAAuBtyB,cAAc,CAAC2W,MAAM,CAAC,aAAD,CAAP,CAArC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAACmuB,YAAT,GAAwBvyB,cAAc,CAAC2W,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,IAAD,CAAN,KAAiBpT,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC8qB,EAAT,GAAclvB,cAAc,CAAC2W,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACouB,GAAT,GAAexyB,cAAc,CAAC2W,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAA3B,EAAsC;IAClCa,QAAQ,CAACquB,IAAT,GAAgBzyB,cAAc,CAAC2W,MAAM,CAAC,UAAD,CAAP,CAA9B;EACH;;EACD,OAAOvS,QAAP;AACH,CAxBD;;AAyBA,IAAImY,4BAA4B,GAAG,UAAU5F,MAAV,EAAkB3U,OAAlB,EAA2B;EAC1D,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO0Q,2BAA2B,CAAC1Q,KAAD,EAAQrrB,OAAR,CAAlC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIof,mCAAmC,GAAG,UAAUzK,MAAV,EAAkB3U,OAAlB,EAA2B;EACjE,IAAIoC,QAAQ,GAAG;IACXuuB,MAAM,EAAEpvB;EADG,CAAf;;EAGA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACuuB,MAAT,GAAkB3yB,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAIyiB,+BAA+B,GAAG,UAAUlQ,MAAV,EAAkB3U,OAAlB,EAA2B;EAC7D,IAAIoC,QAAQ,GAAG;IACX8qB,EAAE,EAAE3rB,SADO;IAEX+uB,WAAW,EAAE/uB;EAFF,CAAf;;EAIA,IAAIoT,MAAM,CAAC,IAAD,CAAN,KAAiBpT,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC8qB,EAAT,GAAclvB,cAAc,CAAC2W,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,aAAD,CAAN,KAA0BpT,SAA9B,EAAyC;IACrCa,QAAQ,CAACkuB,WAAT,GAAuBtyB,cAAc,CAAC2W,MAAM,CAAC,aAAD,CAAP,CAArC;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAI65B,mDAAmD,GAAG,UAAUtnB,MAAV,EAAkB3U,OAAlB,EAA2B;EACjF,IAAIoC,QAAQ,GAAG;IACXmK,MAAM,EAAEhL,SADG;IAEXkqB,IAAI,EAAElqB;EAFK,CAAf;;EAIA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAACwX,GAAP,KAAe,EAAnB,EAAuB;IACnB/pB,QAAQ,CAACqpB,IAAT,GAAgB,EAAhB;EACH;;EACD,IAAI9W,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACqpB,IAAT,GAAgBhN,4BAA4B,CAACngB,sBAAsB,CAACqW,MAAM,CAAC,KAAD,CAAP,CAAvB,EAAwC3U,OAAxC,CAA5C;EACH;;EACD,OAAOoC,QAAP;AACH,CAfD;;AAgBA,IAAIkZ,qDAAqD,GAAG,UAAU3G,MAAV,EAAkB3U,OAAlB,EAA2B;EACnF,IAAIoC,QAAQ,GAAG;IACX8D,EAAE,EAAE3E,SADO;IAEXoqB,MAAM,EAAEpqB,SAFG;IAGX0Y,MAAM,EAAE1Y,SAHG;IAIX6vB,QAAQ,EAAE7vB;EAJC,CAAf;;EAMA,IAAIoT,MAAM,CAAC,IAAD,CAAN,KAAiBpT,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC8D,EAAT,GAAclI,cAAc,CAAC2W,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACupB,MAAT,GAAkBuQ,8CAA8C,CAACvnB,MAAM,CAAC,QAAD,CAAP,EAAmB3U,OAAnB,CAAhE;EACH;;EACD,IAAI2U,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAAC6X,MAAT,GAAkBjc,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAACwnB,OAAP,KAAmB,EAAvB,EAA2B;IACvB/5B,QAAQ,CAACgvB,QAAT,GAAoB,EAApB;EACH;;EACD,IAAIzc,MAAM,CAAC,SAAD,CAAN,KAAsBpT,SAA1B,EAAqC;IACjCa,QAAQ,CAACgvB,QAAT,GAAoBgL,iCAAiC,CAAC99B,sBAAsB,CAACqW,MAAM,CAAC,SAAD,CAAP,CAAvB,EAA4C3U,OAA5C,CAArD;EACH;;EACD,OAAOoC,QAAP;AACH,CAvBD;;AAwBA,IAAI4f,yDAAyD,GAAG,UAAUrN,MAAV,EAAkB3U,OAAlB,EAA2B;EACvF,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO/P,qDAAqD,CAAC+P,KAAD,EAAQrrB,OAAR,CAA5D;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIk8B,8CAA8C,GAAG,UAAUvnB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC5E,IAAIoC,QAAQ,GAAG;IACXmK,MAAM,EAAEhL,SADG;IAEX4qB,GAAG,EAAE5qB,SAFM;IAGX8qB,GAAG,EAAE9qB;EAHM,CAAf;;EAKA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAAC+pB,GAAT,GAAegO,yBAAyB,CAACxlB,MAAM,CAAC,KAAD,CAAP,EAAgB3U,OAAhB,CAAxC;EACH;;EACD,IAAI2U,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACiqB,GAAT,GAAe4P,mDAAmD,CAACtnB,MAAM,CAAC,KAAD,CAAP,EAAgB3U,OAAhB,CAAlE;EACH;;EACD,OAAOoC,QAAP;AACH,CAhBD;;AAiBA,IAAIqZ,4CAA4C,GAAG,UAAU9G,MAAV,EAAkB3U,OAAlB,EAA2B;EAC1E,IAAIoC,QAAQ,GAAG;IACXkvB,WAAW,EAAE/vB,SADF;IAEXiwB,SAAS,EAAEjwB,SAFA;IAGXoqB,MAAM,EAAEpqB,SAHG;IAIX2E,EAAE,EAAE3E,SAJO;IAKXmwB,sBAAsB,EAAEnwB,SALb;IAMXowB,cAAc,EAAEpwB,SANL;IAOXuwB,QAAQ,EAAEvwB;EAPC,CAAf;;EASA,IAAIoT,MAAM,CAAC,aAAD,CAAN,KAA0BpT,SAA9B,EAAyC;IACrCa,QAAQ,CAACkvB,WAAT,GAAuB+K,0CAA0C,CAAC1nB,MAAM,CAAC,aAAD,CAAP,EAAwB3U,OAAxB,CAAjE;EACH;;EACD,IAAI2U,MAAM,CAAC,WAAD,CAAN,KAAwBpT,SAA5B,EAAuC;IACnCa,QAAQ,CAACovB,SAAT,GAAqB9yB,cAAc,CAACiW,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACupB,MAAT,GAAkB2Q,qCAAqC,CAAC3nB,MAAM,CAAC,QAAD,CAAP,EAAmB3U,OAAnB,CAAvD;EACH;;EACD,IAAI2U,MAAM,CAAC,IAAD,CAAN,KAAiBpT,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC8D,EAAT,GAAclI,cAAc,CAAC2W,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,wBAAD,CAAN,KAAqCpT,SAAzC,EAAoD;IAChDa,QAAQ,CAACsvB,sBAAT,GAAkC1zB,cAAc,CAAC2W,MAAM,CAAC,wBAAD,CAAP,CAAhD;EACH;;EACD,IAAIA,MAAM,CAACgd,cAAP,KAA0B,EAA9B,EAAkC;IAC9BvvB,QAAQ,CAACuvB,cAAT,GAA0B,EAA1B;EACH;;EACD,IAAIhd,MAAM,CAAC,gBAAD,CAAN,KAA6BpT,SAA7B,IAA0CoT,MAAM,CAAC,gBAAD,CAAN,CAAyB,OAAzB,MAAsCpT,SAApF,EAA+F;IAC3Fa,QAAQ,CAACuvB,cAAT,GAA0B4K,6CAA6C,CAACj+B,sBAAsB,CAACqW,MAAM,CAAC,gBAAD,CAAN,CAAyB,OAAzB,CAAD,CAAvB,EAA4D3U,OAA5D,CAAvE;EACH;;EACD,IAAI2U,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAA3B,EAAsC;IAClCa,QAAQ,CAAC0vB,QAAT,GAAoB0K,uCAAuC,CAAC7nB,MAAM,CAAC,UAAD,CAAP,EAAqB3U,OAArB,CAA3D;EACH;;EACD,OAAOoC,QAAP;AACH,CAnCD;;AAoCA,IAAIggB,gDAAgD,GAAG,UAAUzN,MAAV,EAAkB3U,OAAlB,EAA2B;EAC9E,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO5P,4CAA4C,CAAC4P,KAAD,EAAQrrB,OAAR,CAAnD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIq8B,0CAA0C,GAAG,UAAU1nB,MAAV,EAAkB3U,OAAlB,EAA2B;EACxE,IAAIoC,QAAQ,GAAG;IACX4pB,mBAAmB,EAAEzqB;EADV,CAAf;;EAGA,IAAIoT,MAAM,CAAC,qBAAD,CAAN,KAAkCpT,SAAtC,EAAiD;IAC7Ca,QAAQ,CAAC4pB,mBAAT,GAA+ByQ,kDAAkD,CAAC9nB,MAAM,CAAC,qBAAD,CAAP,EAAgC3U,OAAhC,CAAjF;EACH;;EACD,OAAOoC,QAAP;AACH,CARD;;AASA,IAAIs6B,yCAAyC,GAAG,UAAU/nB,MAAV,EAAkB3U,OAAlB,EAA2B;EACvE,IAAIoC,QAAQ,GAAG;IACX8vB,KAAK,EAAE3wB,SADI;IAEX6wB,MAAM,EAAE7wB;EAFG,CAAf;;EAIA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAAC8vB,KAAT,GAAiByK,2BAA2B,CAAChoB,MAAM,CAAC,QAAD,CAAP,EAAmB3U,OAAnB,CAA5C;EACH;;EACD,IAAI2U,MAAM,CAAC,SAAD,CAAN,KAAsBpT,SAA1B,EAAqC;IACjCa,QAAQ,CAACgwB,MAAT,GAAkBwK,4BAA4B,CAACjoB,MAAM,CAAC,SAAD,CAAP,EAAoB3U,OAApB,CAA9C;EACH;;EACD,OAAOoC,QAAP;AACH,CAZD;;AAaA,IAAIk6B,qCAAqC,GAAG,UAAU3nB,MAAV,EAAkB3U,OAAlB,EAA2B;EACnE,IAAIoC,QAAQ,GAAG;IACXmK,MAAM,EAAEhL;EADG,CAAf;;EAGA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAIm6B,6CAA6C,GAAG,UAAU5nB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC3E,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOrtB,cAAc,CAACqtB,KAAD,CAArB;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIoR,kDAAkD,GAAG,UAAU9nB,MAAV,EAAkB3U,OAAlB,EAA2B;EAChF,IAAIoC,QAAQ,GAAG;IACXkwB,SAAS,EAAE/wB,SADA;IAEXD,MAAM,EAAEC,SAFG;IAGXgrB,MAAM,EAAEhrB,SAHG;IAIXgL,MAAM,EAAEhL,SAJG;IAKXgxB,UAAU,EAAEhxB;EALD,CAAf;;EAOA,IAAIoT,MAAM,CAAC,WAAD,CAAN,KAAwBpT,SAA5B,EAAuC;IACnCa,QAAQ,CAACkwB,SAAT,GAAqBt0B,cAAc,CAAC2W,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACd,MAAT,GAAkBtD,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmqB,MAAT,GAAkBvuB,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,YAAD,CAAN,KAAyBpT,SAA7B,EAAwC;IACpCa,QAAQ,CAACmwB,UAAT,GAAsBmK,yCAAyC,CAAC/nB,MAAM,CAAC,YAAD,CAAP,EAAuB3U,OAAvB,CAA/D;EACH;;EACD,OAAOoC,QAAP;AACH,CAxBD;;AAyBA,IAAIo6B,uCAAuC,GAAG,UAAU7nB,MAAV,EAAkB3U,OAAlB,EAA2B;EACrE,IAAIoC,QAAQ,GAAG;IACXowB,SAAS,EAAEjxB;EADA,CAAf;;EAGA,IAAIoT,MAAM,CAAC,WAAD,CAAN,KAAwBpT,SAA5B,EAAuC;IACnCa,QAAQ,CAACowB,SAAT,GAAqBx0B,cAAc,CAAC2W,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAIy6B,iDAAiD,GAAG,UAAUloB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC/E,IAAIoC,QAAQ,GAAG;IACX8D,EAAE,EAAE3E,SADO;IAEXoxB,iBAAiB,EAAEpxB,SAFR;IAGXqxB,MAAM,EAAErxB,SAHG;IAIXoqB,MAAM,EAAEpqB;EAJG,CAAf;;EAMA,IAAIoT,MAAM,CAAC,IAAD,CAAN,KAAiBpT,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC8D,EAAT,GAAclI,cAAc,CAAC2W,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,eAAD,CAAN,KAA4BpT,SAAhC,EAA2C;IACvCa,QAAQ,CAACuwB,iBAAT,GAA6B30B,cAAc,CAAC2W,MAAM,CAAC,eAAD,CAAP,CAA3C;EACH;;EACD,IAAIA,MAAM,CAACmoB,KAAP,KAAiB,EAArB,EAAyB;IACrB16B,QAAQ,CAACwwB,MAAT,GAAkB,EAAlB;EACH;;EACD,IAAIje,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACwwB,MAAT,GAAkB+I,+BAA+B,CAACr9B,sBAAsB,CAACqW,MAAM,CAAC,OAAD,CAAP,CAAvB,EAA0C3U,OAA1C,CAAjD;EACH;;EACD,IAAI2U,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACupB,MAAT,GAAkBoR,qDAAqD,CAACpoB,MAAM,CAAC,QAAD,CAAP,EAAmB3U,OAAnB,CAAvE;EACH;;EACD,OAAOoC,QAAP;AACH,CAvBD;;AAwBA,IAAI6a,qDAAqD,GAAG,UAAUtI,MAAV,EAAkB3U,OAAlB,EAA2B;EACnF,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOwR,iDAAiD,CAACxR,KAAD,EAAQrrB,OAAR,CAAxD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIg9B,yCAAyC,GAAG,UAAUroB,MAAV,EAAkB3U,OAAlB,EAA2B;EACvE,IAAIoC,QAAQ,GAAG;IACX4wB,IAAI,EAAEzxB,SADK;IAEX8sB,IAAI,EAAE9sB,SAFK;IAGX0xB,yBAAyB,EAAE1xB;EAHhB,CAAf;;EAKA,IAAIoT,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC4wB,IAAT,GAAgBp1B,eAAe,CAACgB,sBAAsB,CAAC+V,MAAM,CAAC,MAAD,CAAP,CAAvB,CAA/B;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACisB,IAAT,GAAgBrvB,kBAAkB,CAAC2V,MAAM,CAAC,MAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,2BAAD,CAAN,KAAwCpT,SAA5C,EAAuD;IACnDa,QAAQ,CAAC6wB,yBAAT,GAAqCv0B,cAAc,CAACiW,MAAM,CAAC,2BAAD,CAAP,CAAnD;EACH;;EACD,OAAOvS,QAAP;AACH,CAhBD;;AAiBA,IAAI66B,mCAAmC,GAAG,UAAUtoB,MAAV,EAAkB3U,OAAlB,EAA2B;EACjE,IAAIoC,QAAQ,GAAG;IACX6R,UAAU,EAAE1S,SADD;IAEX2rB,EAAE,EAAE3rB,SAFO;IAGXgL,MAAM,EAAEhL,SAHG;IAIXoqB,MAAM,EAAEpqB,SAJG;IAKX0Y,MAAM,EAAE1Y,SALG;IAMX6xB,WAAW,EAAE7xB,SANF;IAOX+xB,4BAA4B,EAAE/xB,SAPnB;IAQXiyB,2BAA2B,EAAEjyB,SARlB;IASXmyB,8BAA8B,EAAEnyB;EATrB,CAAf;;EAWA,IAAIoT,MAAM,CAAC,YAAD,CAAN,KAAyBpT,SAA7B,EAAwC;IACpCa,QAAQ,CAAC6R,UAAT,GAAsB+oB,yCAAyC,CAACroB,MAAM,CAAC,YAAD,CAAP,EAAuB3U,OAAvB,CAA/D;EACH;;EACD,IAAI2U,MAAM,CAAC,IAAD,CAAN,KAAiBpT,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC8qB,EAAT,GAAclvB,cAAc,CAAC2W,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACupB,MAAT,GAAkBuR,yCAAyC,CAACh/B,aAAa,CAACyW,MAAM,CAAC,QAAD,CAAP,CAAd,EAAkC3U,OAAlC,CAA3D;EACH;;EACD,IAAI2U,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAAC6X,MAAT,GAAkBjc,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAACwoB,UAAP,KAAsB,EAA1B,EAA8B;IAC1B/6B,QAAQ,CAACgxB,WAAT,GAAuB,EAAvB;EACH;;EACD,IAAIze,MAAM,CAAC,YAAD,CAAN,KAAyBpT,SAA7B,EAAwC;IACpCa,QAAQ,CAACgxB,WAAT,GAAuBgK,oCAAoC,CAAC9+B,sBAAsB,CAACqW,MAAM,CAAC,YAAD,CAAP,CAAvB,EAA+C3U,OAA/C,CAA3D;EACH;;EACD,IAAI2U,MAAM,CAAC0oB,2BAAP,KAAuC,EAA3C,EAA+C;IAC3Cj7B,QAAQ,CAACkxB,4BAAT,GAAwC,EAAxC;EACH;;EACD,IAAI3e,MAAM,CAAC,6BAAD,CAAN,KAA0CpT,SAA9C,EAAyD;IACrDa,QAAQ,CAACkxB,4BAAT,GAAwCgK,qDAAqD,CAACh/B,sBAAsB,CAACqW,MAAM,CAAC,6BAAD,CAAP,CAAvB,EAAgE3U,OAAhE,CAA7F;EACH;;EACD,IAAI2U,MAAM,CAAC,6BAAD,CAAN,KAA0CpT,SAA9C,EAAyD;IACrDa,QAAQ,CAACoxB,2BAAT,GAAuC+J,iDAAiD,CAAC5oB,MAAM,CAAC,6BAAD,CAAP,EAAwC3U,OAAxC,CAAxF;EACH;;EACD,IAAI2U,MAAM,CAAC,gCAAD,CAAN,KAA6CpT,SAAjD,EAA4D;IACxDa,QAAQ,CAACsxB,8BAAT,GAA0C+F,oDAAoD,CAAC9kB,MAAM,CAAC,gCAAD,CAAP,EAA2C3U,OAA3C,CAA9F;EACH;;EACD,OAAOoC,QAAP;AACH,CA9CD;;AA+CA,IAAIo7B,8CAA8C,GAAG,UAAU7oB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC5E,IAAIoC,QAAQ,GAAG;IACXmK,MAAM,EAAEhL,SADG;IAEXkqB,IAAI,EAAElqB,SAFK;IAGXqyB,qBAAqB,EAAEryB,SAHZ;IAIXsyB,kBAAkB,EAAEtyB;EAJT,CAAf;;EAMA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAACwX,GAAP,KAAe,EAAnB,EAAuB;IACnB/pB,QAAQ,CAACqpB,IAAT,GAAgB,EAAhB;EACH;;EACD,IAAI9W,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACqpB,IAAT,GAAgBhN,4BAA4B,CAACngB,sBAAsB,CAACqW,MAAM,CAAC,KAAD,CAAP,CAAvB,EAAwC3U,OAAxC,CAA5C;EACH;;EACD,IAAI2U,MAAM,CAAC,uBAAD,CAAN,KAAoCpT,SAAxC,EAAmD;IAC/Ca,QAAQ,CAACwxB,qBAAT,GAAiC10B,iBAAiB,CAACyV,MAAM,CAAC,uBAAD,CAAP,CAAlD;EACH;;EACD,IAAIA,MAAM,CAAC,oBAAD,CAAN,KAAiCpT,SAArC,EAAgD;IAC5Ca,QAAQ,CAACyxB,kBAAT,GAA8B30B,iBAAiB,CAACyV,MAAM,CAAC,oBAAD,CAAP,CAA/C;EACH;;EACD,OAAOvS,QAAP;AACH,CAvBD;;AAwBA,IAAI86B,yCAAyC,GAAG,UAAUvoB,MAAV,EAAkB3U,OAAlB,EAA2B;EACvE,IAAI2U,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChC,OAAO;MACHgL,MAAM,EAAEvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP;IADnB,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7B,OAAO;MACH4qB,GAAG,EAAEgO,yBAAyB,CAACxlB,MAAM,CAAC,KAAD,CAAP,EAAgB3U,OAAhB;IAD3B,CAAP;EAGH;;EACD,IAAI2U,MAAM,CAAC,uBAAD,CAAN,KAAoCpT,SAAxC,EAAmD;IAC/C,OAAO;MACHqyB,qBAAqB,EAAE10B,iBAAiB,CAACyV,MAAM,CAAC,uBAAD,CAAP;IADrC,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,oBAAD,CAAN,KAAiCpT,SAArC,EAAgD;IAC5C,OAAO;MACHsyB,kBAAkB,EAAE30B,iBAAiB,CAACyV,MAAM,CAAC,oBAAD,CAAP;IADlC,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7B,OAAO;MACH8qB,GAAG,EAAEmR,8CAA8C,CAAC7oB,MAAM,CAAC,KAAD,CAAP,EAAgB3U,OAAhB;IADhD,CAAP;EAGH;;EACD,OAAO;IAAEuqB,QAAQ,EAAEtlB,MAAM,CAAC+jB,OAAP,CAAerU,MAAf,EAAuB,CAAvB;EAAZ,CAAP;AACH,CA3BD;;AA4BA,IAAImH,oCAAoC,GAAG,UAAUnH,MAAV,EAAkB3U,OAAlB,EAA2B;EAClE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO4R,mCAAmC,CAAC5R,KAAD,EAAQrrB,OAAR,CAA1C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIqc,oCAAoC,GAAG,UAAU1H,MAAV,EAAkB3U,OAAlB,EAA2B;EAClE,IAAIoC,QAAQ,GAAG;IACX0xB,YAAY,EAAEvyB,SADH;IAEXwyB,YAAY,EAAExyB,SAFH;IAGX2yB,YAAY,EAAE3yB;EAHH,CAAf;;EAKA,IAAIoT,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC0xB,YAAT,GAAwB91B,cAAc,CAAC2W,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAACof,YAAP,KAAwB,EAA5B,EAAgC;IAC5B3xB,QAAQ,CAAC2xB,YAAT,GAAwB,EAAxB;EACH;;EACD,IAAIpf,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA3B,IAAwCoT,MAAM,CAAC,cAAD,CAAN,CAAuB,OAAvB,MAAoCpT,SAAhF,EAA2F;IACvFa,QAAQ,CAAC2xB,YAAT,GAAwB0J,kCAAkC,CAACn/B,sBAAsB,CAACqW,MAAM,CAAC,cAAD,CAAN,CAAuB,OAAvB,CAAD,CAAvB,EAA0D3U,OAA1D,CAA1D;EACH;;EACD,IAAI2U,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC8xB,YAAT,GAAwBl2B,cAAc,CAAC2W,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,OAAOvS,QAAP;AACH,CAnBD;;AAoBA,IAAIo5B,6BAA6B,GAAG,UAAU7mB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC3D,IAAIoC,QAAQ,GAAG;IACX6X,MAAM,EAAE1Y,SADG;IAEX6yB,cAAc,EAAE7yB;EAFL,CAAf;;EAIA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAAC6X,MAAT,GAAkBjc,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6BpT,SAAjC,EAA4C;IACxCa,QAAQ,CAACgyB,cAAT,GAA0BsJ,0CAA0C,CAAC/oB,MAAM,CAAC,gBAAD,CAAP,EAA2B3U,OAA3B,CAApE;EACH;;EACD,OAAOoC,QAAP;AACH,CAZD;;AAaA,IAAIu7B,wCAAwC,GAAG,UAAUhpB,MAAV,EAAkB3U,OAAlB,EAA2B;EACtE,IAAIoC,QAAQ,GAAG;IACXmK,MAAM,EAAEhL,SADG;IAEXkqB,IAAI,EAAElqB,SAFK;IAGXgzB,cAAc,EAAEhzB;EAHL,CAAf;;EAKA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAACwX,GAAP,KAAe,EAAnB,EAAuB;IACnB/pB,QAAQ,CAACqpB,IAAT,GAAgB,EAAhB;EACH;;EACD,IAAI9W,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACqpB,IAAT,GAAgBhN,4BAA4B,CAACngB,sBAAsB,CAACqW,MAAM,CAAC,KAAD,CAAP,CAAvB,EAAwC3U,OAAxC,CAA5C;EACH;;EACD,IAAI2U,MAAM,CAAC,gBAAD,CAAN,KAA6BpT,SAAjC,EAA4C;IACxCa,QAAQ,CAACmyB,cAAT,GAA0Bv2B,cAAc,CAAC2W,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,OAAOvS,QAAP;AACH,CAnBD;;AAoBA,IAAIoa,0CAA0C,GAAG,UAAU7H,MAAV,EAAkB3U,OAAlB,EAA2B;EACxE,IAAIoC,QAAQ,GAAG;IACX8D,EAAE,EAAE3E,SADO;IAEXoqB,MAAM,EAAEpqB;EAFG,CAAf;;EAIA,IAAIoT,MAAM,CAAC,IAAD,CAAN,KAAiBpT,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC8D,EAAT,GAAclI,cAAc,CAAC2W,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACupB,MAAT,GAAkBiS,mCAAmC,CAAC1/B,aAAa,CAACyW,MAAM,CAAC,QAAD,CAAP,CAAd,EAAkC3U,OAAlC,CAArD;EACH;;EACD,OAAOoC,QAAP;AACH,CAZD;;AAaA,IAAIogB,8CAA8C,GAAG,UAAU7N,MAAV,EAAkB3U,OAAlB,EAA2B;EAC5E,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO7O,0CAA0C,CAAC6O,KAAD,EAAQrrB,OAAR,CAAjD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI49B,mCAAmC,GAAG,UAAUjpB,MAAV,EAAkB3U,OAAlB,EAA2B;EACjE,IAAI2U,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChC,OAAO;MACHgL,MAAM,EAAEvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP;IADnB,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7B,OAAO;MACH4qB,GAAG,EAAEgO,yBAAyB,CAACxlB,MAAM,CAAC,KAAD,CAAP,EAAgB3U,OAAhB;IAD3B,CAAP;EAGH;;EACD,IAAI2U,MAAM,CAAC,gBAAD,CAAN,KAA6BpT,SAAjC,EAA4C;IACxC,OAAO;MACHgzB,cAAc,EAAEv2B,cAAc,CAAC2W,MAAM,CAAC,gBAAD,CAAP;IAD3B,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7B,OAAO;MACH8qB,GAAG,EAAEsR,wCAAwC,CAAChpB,MAAM,CAAC,KAAD,CAAP,EAAgB3U,OAAhB;IAD1C,CAAP;EAGH;;EACD,OAAO;IAAEuqB,QAAQ,EAAEtlB,MAAM,CAAC+jB,OAAP,CAAerU,MAAf,EAAuB,CAAvB;EAAZ,CAAP;AACH,CAtBD;;AAuBA,IAAIkpB,qCAAqC,GAAG,UAAUlpB,MAAV,EAAkB3U,OAAlB,EAA2B;EACnE,IAAIoC,QAAQ,GAAG;IACXJ,QAAQ,EAAET,SADC;IAEXI,GAAG,EAAEJ,SAFM;IAGXu8B,SAAS,EAAEv8B,SAHA;IAIXwC,YAAY,EAAExC,SAJH;IAKX8Y,KAAK,EAAE9Y,SALI;IAMXmjB,SAAS,EAAEnjB;EANA,CAAf;;EAQA,IAAIoT,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAA3B,EAAsC;IAClCa,QAAQ,CAACJ,QAAT,GAAoBhE,cAAc,CAAC2W,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAe3D,cAAc,CAAC2W,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,WAAD,CAAN,KAAwBpT,SAA5B,EAAuC;IACnCa,QAAQ,CAAC07B,SAAT,GAAqBlgC,eAAe,CAACgB,sBAAsB,CAAC+V,MAAM,CAAC,WAAD,CAAP,CAAvB,CAApC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC2B,YAAT,GAAwB/F,cAAc,CAAC2W,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACiY,KAAT,GAAiBG,2BAA2B,CAAC7F,MAAM,CAAC,OAAD,CAAP,EAAkB3U,OAAlB,CAA5C;EACH;;EACD,IAAI2U,MAAM,CAAC,WAAD,CAAN,KAAwBpT,SAA5B,EAAuC;IACnCa,QAAQ,CAACsiB,SAAT,GAAqBG,+BAA+B,CAAClQ,MAAM,CAAC,WAAD,CAAP,EAAsB3U,OAAtB,CAApD;EACH;;EACD,OAAOoC,QAAP;AACH,CA5BD;;AA6BA,IAAIihB,yCAAyC,GAAG,UAAU1O,MAAV,EAAkB3U,OAAlB,EAA2B;EACvE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOwS,qCAAqC,CAACxS,KAAD,EAAQrrB,OAAR,CAA5C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIu9B,iDAAiD,GAAG,UAAU5oB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC/E,IAAIoC,QAAQ,GAAG;IACXqyB,cAAc,EAAElzB,SADL;IAEXmzB,uBAAuB,EAAEnzB;EAFd,CAAf;;EAIA,IAAIoT,MAAM,CAAC,gBAAD,CAAN,KAA6BpT,SAAjC,EAA4C;IACxCa,QAAQ,CAACqyB,cAAT,GAA0Bz1B,kBAAkB,CAAC2V,MAAM,CAAC,gBAAD,CAAP,CAA5C;EACH;;EACD,IAAIA,MAAM,CAAC,yBAAD,CAAN,KAAsCpT,SAA1C,EAAqD;IACjDa,QAAQ,CAACsyB,uBAAT,GAAmC11B,kBAAkB,CAAC2V,MAAM,CAAC,yBAAD,CAAP,CAArD;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAI27B,iDAAiD,GAAG,UAAUppB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC/E,IAAIoC,QAAQ,GAAG;IACXqyB,cAAc,EAAElzB,SADL;IAEXwC,YAAY,EAAExC,SAFH;IAGXmzB,uBAAuB,EAAEnzB;EAHd,CAAf;;EAKA,IAAIoT,MAAM,CAAC,gBAAD,CAAN,KAA6BpT,SAAjC,EAA4C;IACxCa,QAAQ,CAACqyB,cAAT,GAA0Bz1B,kBAAkB,CAAC2V,MAAM,CAAC,gBAAD,CAAP,CAA5C;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC2B,YAAT,GAAwB/F,cAAc,CAAC2W,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,yBAAD,CAAN,KAAsCpT,SAA1C,EAAqD;IACjDa,QAAQ,CAACsyB,uBAAT,GAAmC11B,kBAAkB,CAAC2V,MAAM,CAAC,yBAAD,CAAP,CAArD;EACH;;EACD,OAAOvS,QAAP;AACH,CAhBD;;AAiBA,IAAIk7B,qDAAqD,GAAG,UAAU3oB,MAAV,EAAkB3U,OAAlB,EAA2B;EACnF,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO0S,iDAAiD,CAAC1S,KAAD,EAAQrrB,OAAR,CAAxD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI+8B,qDAAqD,GAAG,UAAUpoB,MAAV,EAAkB3U,OAAlB,EAA2B;EACnF,IAAIoC,QAAQ,GAAG;IACXT,GAAG,EAAEJ;EADM,CAAf;;EAGA,IAAIoT,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACT,GAAT,GAAeq8B,iCAAiC,CAACrpB,MAAM,CAAC,OAAD,CAAP,EAAkB3U,OAAlB,CAAhD;EACH;;EACD,OAAOoC,QAAP;AACH,CARD;;AASA,IAAI67B,6BAA6B,GAAG,UAAUtpB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC3D,IAAIoC,QAAQ,GAAG;IACXT,GAAG,EAAEJ,SADM;IAEX2S,YAAY,EAAE3S,SAFH;IAGXyS,IAAI,EAAEzS,SAHK;IAIX28B,IAAI,EAAE38B,SAJK;IAKXwC,YAAY,EAAExC,SALH;IAMX8Y,KAAK,EAAE9Y;EANI,CAAf;;EAQA,IAAIoT,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAe3D,cAAc,CAAC2W,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC8R,YAAT,GAAwBtW,eAAe,CAACgB,sBAAsB,CAAC+V,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC4R,IAAT,GAAgBhW,cAAc,CAAC2W,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC87B,IAAT,GAAgBh/B,iBAAiB,CAACyV,MAAM,CAAC,MAAD,CAAP,CAAjC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC2B,YAAT,GAAwB/F,cAAc,CAAC2W,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACiY,KAAT,GAAiBG,2BAA2B,CAAC7F,MAAM,CAAC,OAAD,CAAP,EAAkB3U,OAAlB,CAA5C;EACH;;EACD,OAAOoC,QAAP;AACH,CA5BD;;AA6BA,IAAIuhB,gCAAgC,GAAG,UAAUhP,MAAV,EAAkB3U,OAAlB,EAA2B;EAC9D,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO4S,6BAA6B,CAAC5S,KAAD,EAAQrrB,OAAR,CAApC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIsgB,6CAA6C,GAAG,UAAU3L,MAAV,EAAkB3U,OAAlB,EAA2B;EAC3E,IAAIoC,QAAQ,GAAG;IACX4yB,iBAAiB,EAAEzzB,SADR;IAEXsa,IAAI,EAAEta;EAFK,CAAf;;EAIA,IAAIoT,MAAM,CAAC,mBAAD,CAAN,KAAgCpT,SAApC,EAA+C;IAC3Ca,QAAQ,CAAC4yB,iBAAT,GAA6Bh3B,cAAc,CAAC2W,MAAM,CAAC,mBAAD,CAAP,CAA3C;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACyZ,IAAT,GAAgBsiB,oCAAoC,CAACxpB,MAAM,CAAC,MAAD,CAAP,EAAiB3U,OAAjB,CAApD;EACH;;EACD,OAAOoC,QAAP;AACH,CAZD;;AAaA,IAAI+d,yCAAyC,GAAG,UAAUxL,MAAV,EAAkB3U,OAAlB,EAA2B;EACvE,IAAIoC,QAAQ,GAAG;IACX6X,MAAM,EAAE1Y;EADG,CAAf;;EAGA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAAC6X,MAAT,GAAkBjc,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAIqe,yCAAyC,GAAG,UAAU9L,MAAV,EAAkB3U,OAAlB,EAA2B;EACvE,IAAIoC,QAAQ,GAAG;IACXgsB,IAAI,EAAE7sB,SADK;IAEX2zB,eAAe,EAAE3zB;EAFN,CAAf;;EAIA,IAAIoT,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACgsB,IAAT,GAAgBpwB,cAAc,CAAC2W,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,iBAAD,CAAN,KAA8BpT,SAAlC,EAA6C;IACzCa,QAAQ,CAAC8yB,eAAT,GAA2Bt3B,eAAe,CAACgB,sBAAsB,CAAC+V,MAAM,CAAC,iBAAD,CAAP,CAAvB,CAA1C;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAI+7B,oCAAoC,GAAG,UAAUxpB,MAAV,EAAkB3U,OAAlB,EAA2B;EAClE,IAAIoC,QAAQ,GAAG;IACX+yB,gBAAgB,EAAE5zB;EADP,CAAf;;EAGA,IAAIoT,MAAM,CAAC,kBAAD,CAAN,KAA+BpT,SAAnC,EAA8C;IAC1Ca,QAAQ,CAAC+yB,gBAAT,GAA4B4F,sCAAsC,CAACpmB,MAAM,CAAC,kBAAD,CAAP,EAA6B3U,OAA7B,CAAlE;EACH;;EACD,OAAOoC,QAAP;AACH,CARD;;AASA,IAAIg8B,mCAAmC,GAAG,UAAUzpB,MAAV,EAAkB3U,OAAlB,EAA2B;EACjE,IAAIoC,QAAQ,GAAG;IACX4R,IAAI,EAAEzS,SADK;IAEX28B,IAAI,EAAE38B,SAFK;IAGXwC,YAAY,EAAExC,SAHH;IAIXI,GAAG,EAAEJ,SAJM;IAKXqG,SAAS,EAAErG,SALA;IAMX45B,QAAQ,EAAE55B,SANC;IAOX2S,YAAY,EAAE3S,SAPH;IAQX8Y,KAAK,EAAE9Y;EARI,CAAf;;EAUA,IAAIoT,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC4R,IAAT,GAAgBhW,cAAc,CAAC2W,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC87B,IAAT,GAAgBh/B,iBAAiB,CAACyV,MAAM,CAAC,MAAD,CAAP,CAAjC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC2B,YAAT,GAAwB/F,cAAc,CAAC2W,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAe3D,cAAc,CAAC2W,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,WAAD,CAAN,KAAwBpT,SAA5B,EAAuC;IACnCa,QAAQ,CAACwF,SAAT,GAAqB5J,cAAc,CAAC2W,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,IAAIA,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAA3B,EAAsC;IAClCa,QAAQ,CAAC+4B,QAAT,GAAoBz8B,cAAc,CAACiW,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC8R,YAAT,GAAwBtW,eAAe,CAACgB,sBAAsB,CAAC+V,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACiY,KAAT,GAAiBG,2BAA2B,CAAC7F,MAAM,CAAC,OAAD,CAAP,EAAkB3U,OAAlB,CAA5C;EACH;;EACD,OAAOoC,QAAP;AACH,CApCD;;AAqCA,IAAImiB,uCAAuC,GAAG,UAAU5P,MAAV,EAAkB3U,OAAlB,EAA2B;EACrE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO+S,mCAAmC,CAAC/S,KAAD,EAAQrrB,OAAR,CAA1C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIwa,2BAA2B,GAAG,UAAU7F,MAAV,EAAkB3U,OAAlB,EAA2B;EACzD,IAAIoC,QAAQ,GAAG;IACXkuB,WAAW,EAAE/uB,SADF;IAEX2rB,EAAE,EAAE3rB;EAFO,CAAf;;EAIA,IAAIoT,MAAM,CAAC,aAAD,CAAN,KAA0BpT,SAA9B,EAAyC;IACrCa,QAAQ,CAACkuB,WAAT,GAAuBtyB,cAAc,CAAC2W,MAAM,CAAC,aAAD,CAAP,CAArC;EACH;;EACD,IAAIA,MAAM,CAAC,IAAD,CAAN,KAAiBpT,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC8qB,EAAT,GAAclvB,cAAc,CAAC2W,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAIob,uCAAuC,GAAG,UAAU7I,MAAV,EAAkB3U,OAAlB,EAA2B;EACrE,IAAIoC,QAAQ,GAAG;IACXwZ,KAAK,EAAEra;EADI,CAAf;;EAGA,IAAIoT,MAAM,CAACkH,IAAP,KAAgB,EAApB,EAAwB;IACpBzZ,QAAQ,CAACwZ,KAAT,GAAiB,EAAjB;EACH;;EACD,IAAIjH,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACwZ,KAAT,GAAiByiB,4CAA4C,CAAC//B,sBAAsB,CAACqW,MAAM,CAAC,MAAD,CAAP,CAAvB,EAAyC3U,OAAzC,CAA7D;EACH;;EACD,OAAOoC,QAAP;AACH,CAXD;;AAYA,IAAIk8B,2CAA2C,GAAG,UAAU3pB,MAAV,EAAkB3U,OAAlB,EAA2B;EACzE,IAAIoC,QAAQ,GAAG;IACXsD,eAAe,EAAEnE;EADN,CAAf;;EAGA,IAAIoT,MAAM,CAAC,iBAAD,CAAN,KAA8BpT,SAAlC,EAA6C;IACzCa,QAAQ,CAACsD,eAAT,GAA2B1H,cAAc,CAAC2W,MAAM,CAAC,iBAAD,CAAP,CAAzC;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAIi8B,4CAA4C,GAAG,UAAU1pB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC1E,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOiT,2CAA2C,CAACjT,KAAD,EAAQrrB,OAAR,CAAlD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIu+B,0BAA0B,GAAG,UAAU5pB,MAAV,EAAkB3U,OAAlB,EAA2B;EACxD,IAAIoC,QAAQ,GAAG;IACX0I,UAAU,EAAEvJ,SADD;IAEX2S,YAAY,EAAE3S,SAFH;IAGXyS,IAAI,EAAEzS,SAHK;IAIX28B,IAAI,EAAE38B;EAJK,CAAf;;EAMA,IAAIoT,MAAM,CAAC,YAAD,CAAN,KAAyBpT,SAA7B,EAAwC;IACpCa,QAAQ,CAAC0I,UAAT,GAAsB9L,kBAAkB,CAAC2V,MAAM,CAAC,YAAD,CAAP,CAAxC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC8R,YAAT,GAAwBtW,eAAe,CAACgB,sBAAsB,CAAC+V,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC4R,IAAT,GAAgBhW,cAAc,CAAC2W,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC87B,IAAT,GAAgBh/B,iBAAiB,CAACyV,MAAM,CAAC,MAAD,CAAP,CAAjC;EACH;;EACD,OAAOvS,QAAP;AACH,CApBD;;AAqBA,IAAI2iB,2BAA2B,GAAG,UAAUpQ,MAAV,EAAkB3U,OAAlB,EAA2B;EACzD,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOkT,0BAA0B,CAAClT,KAAD,EAAQrrB,OAAR,CAAjC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI+d,kCAAkC,GAAG,UAAUpJ,MAAV,EAAkB3U,OAAlB,EAA2B;EAChE,IAAIoC,QAAQ,GAAG;IACXo8B,QAAQ,EAAEj9B;EADC,CAAf;;EAGA,IAAIoT,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAA3B,EAAsC;IAClCa,QAAQ,CAACo8B,QAAT,GAAoB9/B,cAAc,CAACiW,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAIq8B,8BAA8B,GAAG,UAAU9pB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC5D,IAAIoC,QAAQ,GAAG;IACXs8B,YAAY,EAAEn9B,SADH;IAEXo9B,cAAc,EAAEp9B,SAFL;IAGXq9B,aAAa,EAAEr9B;EAHJ,CAAf;;EAKA,IAAIoT,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAACs8B,YAAT,GAAwBx/B,iBAAiB,CAACyV,MAAM,CAAC,cAAD,CAAP,CAAzC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6BpT,SAAjC,EAA4C;IACxCa,QAAQ,CAACu8B,cAAT,GAA0Bz/B,iBAAiB,CAACyV,MAAM,CAAC,gBAAD,CAAP,CAA3C;EACH;;EACD,IAAIA,MAAM,CAAC,eAAD,CAAN,KAA4BpT,SAAhC,EAA2C;IACvCa,QAAQ,CAACw8B,aAAT,GAAyB1/B,iBAAiB,CAACyV,MAAM,CAAC,eAAD,CAAP,CAA1C;EACH;;EACD,OAAOvS,QAAP;AACH,CAhBD;;AAiBA,IAAIy8B,mCAAmC,GAAG,UAAUlqB,MAAV,EAAkB3U,OAAlB,EAA2B;EACjE,IAAIoC,QAAQ,GAAG;IACXooB,OAAO,EAAEjpB;EADE,CAAf;;EAGA,IAAIoT,MAAM,CAAC,SAAD,CAAN,KAAsBpT,SAA1B,EAAqC;IACjCa,QAAQ,CAACooB,OAAT,GAAmBiU,8BAA8B,CAAC9pB,MAAM,CAAC,SAAD,CAAP,EAAoB3U,OAApB,CAAjD;EACH;;EACD,OAAOoC,QAAP;AACH,CARD;;AASA,IAAI4e,oDAAoD,GAAG,UAAUrM,MAAV,EAAkB3U,OAAlB,EAA2B;EAClF,IAAIoC,QAAQ,GAAG;IACXqzB,eAAe,EAAEl0B,SADN;IAEXm0B,gBAAgB,EAAEn0B,SAFP;IAGXo0B,iBAAiB,EAAEp0B,SAHR;IAIXq0B,qBAAqB,EAAEr0B;EAJZ,CAAf;;EAMA,IAAIoT,MAAM,CAAC,iBAAD,CAAN,KAA8BpT,SAAlC,EAA6C;IACzCa,QAAQ,CAACqzB,eAAT,GAA2B/2B,cAAc,CAACiW,MAAM,CAAC,iBAAD,CAAP,CAAzC;EACH;;EACD,IAAIA,MAAM,CAAC,kBAAD,CAAN,KAA+BpT,SAAnC,EAA8C;IAC1Ca,QAAQ,CAACszB,gBAAT,GAA4Bh3B,cAAc,CAACiW,MAAM,CAAC,kBAAD,CAAP,CAA1C;EACH;;EACD,IAAIA,MAAM,CAAC,mBAAD,CAAN,KAAgCpT,SAApC,EAA+C;IAC3Ca,QAAQ,CAACuzB,iBAAT,GAA6Bj3B,cAAc,CAACiW,MAAM,CAAC,mBAAD,CAAP,CAA3C;EACH;;EACD,IAAIA,MAAM,CAAC,uBAAD,CAAN,KAAoCpT,SAAxC,EAAmD;IAC/Ca,QAAQ,CAACwzB,qBAAT,GAAiCl3B,cAAc,CAACiW,MAAM,CAAC,uBAAD,CAAP,CAA/C;EACH;;EACD,OAAOvS,QAAP;AACH,CApBD;;AAqBA,IAAI08B,wCAAwC,GAAG,UAAUnqB,MAAV,EAAkB3U,OAAlB,EAA2B;EACtE,IAAIoC,QAAQ,GAAG;IACX8D,EAAE,EAAE3E,SADO;IAEXu0B,QAAQ,EAAEv0B,SAFC;IAGXqxB,MAAM,EAAErxB,SAHG;IAIXoqB,MAAM,EAAEpqB;EAJG,CAAf;;EAMA,IAAIoT,MAAM,CAAC,IAAD,CAAN,KAAiBpT,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC8D,EAAT,GAAclI,cAAc,CAAC2W,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAAC0zB,QAAT,GAAoB93B,cAAc,CAAC2W,MAAM,CAAC,OAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAACmoB,KAAP,KAAiB,EAArB,EAAyB;IACrB16B,QAAQ,CAACwwB,MAAT,GAAkB,EAAlB;EACH;;EACD,IAAIje,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACwwB,MAAT,GAAkB+I,+BAA+B,CAACr9B,sBAAsB,CAACqW,MAAM,CAAC,OAAD,CAAP,CAAvB,EAA0C3U,OAA1C,CAAjD;EACH;;EACD,IAAI2U,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACupB,MAAT,GAAkBoR,qDAAqD,CAACpoB,MAAM,CAAC,QAAD,CAAP,EAAmB3U,OAAnB,CAAvE;EACH;;EACD,OAAOoC,QAAP;AACH,CAvBD;;AAwBA,IAAI+a,4CAA4C,GAAG,UAAUxI,MAAV,EAAkB3U,OAAlB,EAA2B;EAC1E,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOyT,wCAAwC,CAACzT,KAAD,EAAQrrB,OAAR,CAA/C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI++B,kCAAkC,GAAG,UAAUpqB,MAAV,EAAkB3U,OAAlB,EAA2B;EAChE,IAAIoC,QAAQ,GAAG;IACXomB,OAAO,EAAEjnB;EADE,CAAf;;EAGA,IAAIoT,MAAM,CAAC,SAAD,CAAN,KAAsBpT,SAA1B,EAAqC;IACjCa,QAAQ,CAAComB,OAAT,GAAmBxoB,OAAO,CAACg/B,aAAR,CAAsBrqB,MAAM,CAAC,SAAD,CAA5B,CAAnB;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAI68B,8BAA8B,GAAG,UAAUtqB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC5D,IAAIoC,QAAQ,GAAG;IACX4zB,QAAQ,EAAEz0B,SADC;IAEX00B,gBAAgB,EAAE10B,SAFP;IAGX20B,QAAQ,EAAE30B,SAHC;IAIX40B,oBAAoB,EAAE50B,SAJX;IAKX60B,cAAc,EAAE70B;EALL,CAAf;;EAOA,IAAIoT,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAA3B,EAAsC;IAClCa,QAAQ,CAAC4zB,QAAT,GAAoBh4B,cAAc,CAAC2W,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,kBAAD,CAAN,KAA+BpT,SAAnC,EAA8C;IAC1Ca,QAAQ,CAAC6zB,gBAAT,GAA4Bj4B,cAAc,CAAC2W,MAAM,CAAC,kBAAD,CAAP,CAA1C;EACH;;EACD,IAAIA,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAA3B,EAAsC;IAClCa,QAAQ,CAAC8zB,QAAT,GAAoBl4B,cAAc,CAAC2W,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,sBAAD,CAAN,KAAmCpT,SAAvC,EAAkD;IAC9Ca,QAAQ,CAAC+zB,oBAAT,GAAgCn4B,cAAc,CAAC2W,MAAM,CAAC,sBAAD,CAAP,CAA9C;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6BpT,SAAjC,EAA4C;IACxCa,QAAQ,CAACg0B,cAAT,GAA0Bp4B,cAAc,CAAC2W,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,OAAOvS,QAAP;AACH,CAxBD;;AAyBA,IAAIid,2CAA2C,GAAG,UAAU1K,MAAV,EAAkB3U,OAAlB,EAA2B;EACzE,IAAIoC,QAAQ,GAAG;IACX4zB,QAAQ,EAAEz0B,SADC;IAEX20B,QAAQ,EAAE30B;EAFC,CAAf;;EAIA,IAAIoT,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAA3B,EAAsC;IAClCa,QAAQ,CAAC4zB,QAAT,GAAoBh4B,cAAc,CAAC2W,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAA3B,EAAsC;IAClCa,QAAQ,CAAC8zB,QAAT,GAAoBl4B,cAAc,CAAC2W,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAI88B,0CAA0C,GAAG,UAAUvqB,MAAV,EAAkB3U,OAAlB,EAA2B;EACxE,IAAIoC,QAAQ,GAAG;IACX6X,MAAM,EAAE1Y;EADG,CAAf;;EAGA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAAC6X,MAAT,GAAkBjc,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAI8b,8CAA8C,GAAG,UAAUvJ,MAAV,EAAkB3U,OAAlB,EAA2B;EAC5E,IAAIoC,QAAQ,GAAG;IACXm0B,IAAI,EAAEh1B,SADK;IAEXqa,KAAK,EAAEra;EAFI,CAAf;;EAIA,IAAIoT,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACm0B,IAAT,GAAgBv4B,cAAc,CAAC2W,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAACkH,IAAP,KAAgB,EAApB,EAAwB;IACpBzZ,QAAQ,CAACwZ,KAAT,GAAiB,EAAjB;EACH;;EACD,IAAIjH,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACwZ,KAAT,GAAiBujB,sCAAsC,CAAC7gC,sBAAsB,CAACqW,MAAM,CAAC,MAAD,CAAP,CAAvB,EAAyC3U,OAAzC,CAAvD;EACH;;EACD,OAAOoC,QAAP;AACH,CAfD;;AAgBA,IAAIg9B,qCAAqC,GAAG,UAAUzqB,MAAV,EAAkB3U,OAAlB,EAA2B;EACnE,IAAIoC,QAAQ,GAAG;IACX8qB,EAAE,EAAE3rB,SADO;IAEXm1B,QAAQ,EAAEn1B,SAFC;IAGXgL,MAAM,EAAEhL,SAHG;IAIXoqB,MAAM,EAAEpqB,SAJG;IAKX0Y,MAAM,EAAE1Y,SALG;IAMXq1B,uBAAuB,EAAEr1B,SANd;IAOXu1B,yBAAyB,EAAEv1B,SAPhB;IAQX+vB,WAAW,EAAE/vB,SARF;IASXw1B,uBAAuB,EAAEx1B;EATd,CAAf;;EAWA,IAAIoT,MAAM,CAAC,IAAD,CAAN,KAAiBpT,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC8qB,EAAT,GAAclvB,cAAc,CAAC2W,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAA3B,EAAsC;IAClCa,QAAQ,CAACs0B,QAAT,GAAoB13B,kBAAkB,CAAC2V,MAAM,CAAC,UAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACupB,MAAT,GAAkB0T,2CAA2C,CAACnhC,aAAa,CAACyW,MAAM,CAAC,QAAD,CAAP,CAAd,EAAkC3U,OAAlC,CAA7D;EACH;;EACD,IAAI2U,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAAC6X,MAAT,GAAkBjc,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,yBAAD,CAAN,KAAsCpT,SAA1C,EAAqD;IACjDa,QAAQ,CAACw0B,uBAAT,GAAmC0I,6CAA6C,CAAC3qB,MAAM,CAAC,yBAAD,CAAP,EAAoC3U,OAApC,CAAhF;EACH;;EACD,IAAI2U,MAAM,CAAC,2BAAD,CAAN,KAAwCpT,SAA5C,EAAuD;IACnDa,QAAQ,CAAC00B,yBAAT,GAAqC8E,+CAA+C,CAACjnB,MAAM,CAAC,2BAAD,CAAP,EAAsC3U,OAAtC,CAApF;EACH;;EACD,IAAI2U,MAAM,CAAC,aAAD,CAAN,KAA0BpT,SAA9B,EAAyC;IACrCa,QAAQ,CAACkvB,WAAT,GAAuB+J,iCAAiC,CAAC1mB,MAAM,CAAC,aAAD,CAAP,EAAwB3U,OAAxB,CAAxD;EACH;;EACD,IAAI2U,MAAM,CAAC,yBAAD,CAAN,KAAsCpT,SAA1C,EAAqD;IACjDa,QAAQ,CAAC20B,uBAAT,GAAmCqE,6CAA6C,CAACzmB,MAAM,CAAC,yBAAD,CAAP,EAAoC3U,OAApC,CAAhF;EACH;;EACD,OAAOoC,QAAP;AACH,CAxCD;;AAyCA,IAAIm9B,gDAAgD,GAAG,UAAU5qB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC9E,IAAIoC,QAAQ,GAAG;IACXmK,MAAM,EAAEhL,SADG;IAEXkqB,IAAI,EAAElqB;EAFK,CAAf;;EAIA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACmK,MAAT,GAAkBvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAACwX,GAAP,KAAe,EAAnB,EAAuB;IACnB/pB,QAAQ,CAACqpB,IAAT,GAAgB,EAAhB;EACH;;EACD,IAAI9W,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACqpB,IAAT,GAAgBhN,4BAA4B,CAACngB,sBAAsB,CAACqW,MAAM,CAAC,KAAD,CAAP,CAAvB,EAAwC3U,OAAxC,CAA5C;EACH;;EACD,OAAOoC,QAAP;AACH,CAfD;;AAgBA,IAAIi9B,2CAA2C,GAAG,UAAU1qB,MAAV,EAAkB3U,OAAlB,EAA2B;EACzE,IAAI2U,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChC,OAAO;MACHgL,MAAM,EAAEvO,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP;IADnB,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7B,OAAO;MACH4qB,GAAG,EAAEgO,yBAAyB,CAACxlB,MAAM,CAAC,KAAD,CAAP,EAAgB3U,OAAhB;IAD3B,CAAP;EAGH;;EACD,IAAI2U,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7B,OAAO;MACH8qB,GAAG,EAAEkT,gDAAgD,CAAC5qB,MAAM,CAAC,KAAD,CAAP,EAAgB3U,OAAhB;IADlD,CAAP;EAGH;;EACD,OAAO;IAAEuqB,QAAQ,EAAEtlB,MAAM,CAAC+jB,OAAP,CAAerU,MAAf,EAAuB,CAAvB;EAAZ,CAAP;AACH,CAjBD;;AAkBA,IAAIwqB,sCAAsC,GAAG,UAAUxqB,MAAV,EAAkB3U,OAAlB,EAA2B;EACpE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO+T,qCAAqC,CAAC/T,KAAD,EAAQrrB,OAAR,CAA5C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIu7B,qCAAqC,GAAG,UAAU5mB,MAAV,EAAkB3U,OAAlB,EAA2B;EACnE,IAAIoC,QAAQ,GAAG;IACX6X,MAAM,EAAE1Y,SADG;IAEX01B,IAAI,EAAE11B;EAFK,CAAf;;EAIA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAAC6X,MAAT,GAAkBjc,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC60B,IAAT,GAAgByG,0CAA0C,CAAC/oB,MAAM,CAAC,MAAD,CAAP,EAAiB3U,OAAjB,CAA1D;EACH;;EACD,OAAOoC,QAAP;AACH,CAZD;;AAaA,IAAIs7B,0CAA0C,GAAG,UAAU/oB,MAAV,EAAkB3U,OAAlB,EAA2B;EACxE,IAAIoC,QAAQ,GAAG;IACX80B,OAAO,EAAE31B;EADE,CAAf;;EAGA,IAAIoT,MAAM,CAAC,SAAD,CAAN,KAAsBpT,SAA1B,EAAqC;IACjCa,QAAQ,CAAC80B,OAAT,GAAmBl4B,kBAAkB,CAAC2V,MAAM,CAAC,SAAD,CAAP,CAArC;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAIo9B,iCAAiC,GAAG,UAAU7qB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC/D,IAAIoC,QAAQ,GAAG;IACXs1B,SAAS,EAAEn2B,SADA;IAEXo2B,QAAQ,EAAEp2B;EAFC,CAAf;;EAIA,IAAIoT,MAAM,CAAC,WAAD,CAAN,KAAwBpT,SAA5B,EAAuC;IACnCa,QAAQ,CAACs1B,SAAT,GAAqB6C,+BAA+B,CAAC5lB,MAAM,CAAC,WAAD,CAAP,EAAsB3U,OAAtB,CAApD;EACH;;EACD,IAAI2U,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAA3B,EAAsC;IAClCa,QAAQ,CAACu1B,QAAT,GAAoBsH,8BAA8B,CAACtqB,MAAM,CAAC,UAAD,CAAP,EAAqB3U,OAArB,CAAlD;EACH;;EACD,OAAOoC,QAAP;AACH,CAZD;;AAaA,IAAIkd,kCAAkC,GAAG,UAAU3K,MAAV,EAAkB3U,OAAlB,EAA2B;EAChE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOmU,iCAAiC,CAACnU,KAAD,EAAQrrB,OAAR,CAAxC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIg+B,iCAAiC,GAAG,UAAUrpB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC/D,IAAIoC,QAAQ,GAAG;IACXy1B,WAAW,EAAEt2B;EADF,CAAf;;EAGA,IAAIoT,MAAM,CAAC8qB,UAAP,KAAsB,EAA1B,EAA8B;IAC1Br9B,QAAQ,CAACy1B,WAAT,GAAuB,EAAvB;EACH;;EACD,IAAIljB,MAAM,CAAC,YAAD,CAAN,KAAyBpT,SAA7B,EAAwC;IACpCa,QAAQ,CAACy1B,WAAT,GAAuBiE,oCAAoC,CAACx9B,sBAAsB,CAACqW,MAAM,CAAC,YAAD,CAAP,CAAvB,EAA+C3U,OAA/C,CAA3D;EACH;;EACD,OAAOoC,QAAP;AACH,CAXD;;AAYA,IAAIs9B,oDAAoD,GAAG,UAAU/qB,MAAV,EAAkB3U,OAAlB,EAA2B;EAClF,IAAI2U,MAAM,CAAC,SAAD,CAAN,KAAsBpT,SAA1B,EAAqC;IACjC,OAAO;MACHuoB,OAAO,EAAEiV,kCAAkC,CAACpqB,MAAM,CAAC,SAAD,CAAP,EAAoB3U,OAApB;IADxC,CAAP;EAGH;;EACD,IAAI2U,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/B,OAAO;MACHyoB,KAAK,EAAE2V,gCAAgC,CAAChrB,MAAM,CAAC,OAAD,CAAP,EAAkB3U,OAAlB;IADpC,CAAP;EAGH;;EACD,IAAI2U,MAAM,CAAC,UAAD,CAAN,KAAuBpT,SAA3B,EAAsC;IAClC,OAAO;MACH2oB,QAAQ,EAAE2U,mCAAmC,CAAClqB,MAAM,CAAC,UAAD,CAAP,EAAqB3U,OAArB;IAD1C,CAAP;EAGH;;EACD,IAAI2U,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9B,OAAO;MACH6oB,IAAI,EAAEoQ,uCAAuC,CAAC7lB,MAAM,CAAC,MAAD,CAAP,EAAiB3U,OAAjB;IAD1C,CAAP;EAGH;;EACD,IAAI2U,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7B,OAAO;MACH+oB,GAAG,EAAEmR,8BAA8B,CAAC9mB,MAAM,CAAC,KAAD,CAAP,EAAgB3U,OAAhB;IADhC,CAAP;EAGH;;EACD,OAAO;IAAEuqB,QAAQ,EAAEtlB,MAAM,CAAC+jB,OAAP,CAAerU,MAAf,EAAuB,CAAvB;EAAZ,CAAP;AACH,CA3BD;;AA4BA,IAAIirB,mDAAmD,GAAG,UAAUjrB,MAAV,EAAkB3U,OAAlB,EAA2B;EACjF,IAAIoC,QAAQ,GAAG;IACXk2B,YAAY,EAAE/2B,SADH;IAEXg3B,cAAc,EAAEh3B;EAFL,CAAf;;EAIA,IAAIoT,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAACk2B,YAAT,GAAwBt6B,cAAc,CAAC2W,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6BpT,SAAjC,EAA4C;IACxCa,QAAQ,CAACm2B,cAAT,GAA0Bv6B,cAAc,CAAC2W,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAI+Y,uDAAuD,GAAG,UAAUxG,MAAV,EAAkB3U,OAAlB,EAA2B;EACrF,IAAIoC,QAAQ,GAAG;IACXwZ,KAAK,EAAEra;EADI,CAAf;;EAGA,IAAIoT,MAAM,CAACkH,IAAP,KAAgB,EAApB,EAAwB;IACpBzZ,QAAQ,CAACwZ,KAAT,GAAiB,EAAjB;EACH;;EACD,IAAIjH,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACwZ,KAAT,GAAiBikB,+CAA+C,CAACvhC,sBAAsB,CAACqW,MAAM,CAAC,MAAD,CAAP,CAAvB,EAAyC3U,OAAzC,CAAhE;EACH;;EACD,OAAOoC,QAAP;AACH,CAXD;;AAYA,IAAI09B,8CAA8C,GAAG,UAAUnrB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC5E,IAAIoC,QAAQ,GAAG;IACXs2B,kCAAkC,EAAEn3B,SADzB;IAEX+C,gBAAgB,EAAE/C;EAFP,CAAf;;EAIA,IAAIoT,MAAM,CAAC,oCAAD,CAAN,KAAiDpT,SAArD,EAAgE;IAC5Da,QAAQ,CAACs2B,kCAAT,GAA8CkH,mDAAmD,CAACjrB,MAAM,CAAC,oCAAD,CAAP,EAA+C3U,OAA/C,CAAjG;EACH;;EACD,IAAI2U,MAAM,CAAC,kBAAD,CAAN,KAA+BpT,SAAnC,EAA8C;IAC1Ca,QAAQ,CAACkC,gBAAT,GAA4B5F,cAAc,CAACiW,MAAM,CAAC,kBAAD,CAAP,CAA1C;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAIy9B,+CAA+C,GAAG,UAAUlrB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC7E,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOyU,8CAA8C,CAACzU,KAAD,EAAQrrB,OAAR,CAArD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIs/B,6CAA6C,GAAG,UAAU3qB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC3E,IAAIoC,QAAQ,GAAG;IACXu2B,sBAAsB,EAAEp3B,SADb;IAEXs3B,oBAAoB,EAAEt3B;EAFX,CAAf;;EAIA,IAAIoT,MAAM,CAAC,wBAAD,CAAN,KAAqCpT,SAAzC,EAAoD;IAChDa,QAAQ,CAACu2B,sBAAT,GAAkCoH,4CAA4C,CAACprB,MAAM,CAAC,wBAAD,CAAP,EAAmC3U,OAAnC,CAA9E;EACH;;EACD,IAAI2U,MAAM,CAAC,sBAAD,CAAN,KAAmCpT,SAAvC,EAAkD;IAC9Ca,QAAQ,CAACy2B,oBAAT,GAAgCqG,0CAA0C,CAACvqB,MAAM,CAAC,sBAAD,CAAP,EAAiC3U,OAAjC,CAA1E;EACH;;EACD,OAAOoC,QAAP;AACH,CAZD;;AAaA,IAAIw6B,4BAA4B,GAAG,UAAUjoB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC1D,IAAIoC,QAAQ,GAAG;IACX02B,KAAK,EAAEv3B;EADI,CAAf;;EAGA,IAAIoT,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAAC02B,KAAT,GAAiB96B,cAAc,CAAC2W,MAAM,CAAC,OAAD,CAAP,CAA/B;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAI29B,4CAA4C,GAAG,UAAUprB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC1E,IAAIoC,QAAQ,GAAG;IACX6X,MAAM,EAAE1Y;EADG,CAAf;;EAGA,IAAIoT,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAAC6X,MAAT,GAAkBjc,cAAc,CAAC2W,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOvS,QAAP;AACH,CARD;;AASA,IAAIu6B,2BAA2B,GAAG,UAAUhoB,MAAV,EAAkB3U,OAAlB,EAA2B;EACzD,IAAIoC,QAAQ,GAAG,EAAf;EACA,OAAOA,QAAP;AACH,CAHD;;AAIA,IAAI49B,2BAA2B,GAAG,UAAUrrB,MAAV,EAAkB3U,OAAlB,EAA2B;EACzD,IAAIoC,QAAQ,GAAG;IACXs8B,YAAY,EAAEn9B,SADH;IAEXo9B,cAAc,EAAEp9B,SAFL;IAGXq9B,aAAa,EAAEr9B;EAHJ,CAAf;;EAKA,IAAIoT,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAACs8B,YAAT,GAAwBx/B,iBAAiB,CAACyV,MAAM,CAAC,cAAD,CAAP,CAAzC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6BpT,SAAjC,EAA4C;IACxCa,QAAQ,CAACu8B,cAAT,GAA0Bz/B,iBAAiB,CAACyV,MAAM,CAAC,gBAAD,CAAP,CAA3C;EACH;;EACD,IAAIA,MAAM,CAAC,eAAD,CAAN,KAA4BpT,SAAhC,EAA2C;IACvCa,QAAQ,CAACw8B,aAAT,GAAyB1/B,iBAAiB,CAACyV,MAAM,CAAC,eAAD,CAAP,CAA1C;EACH;;EACD,OAAOvS,QAAP;AACH,CAhBD;;AAiBA,IAAIu9B,gCAAgC,GAAG,UAAUhrB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC9D,IAAIoC,QAAQ,GAAG;IACXooB,OAAO,EAAEjpB;EADE,CAAf;;EAGA,IAAIoT,MAAM,CAAC,SAAD,CAAN,KAAsBpT,SAA1B,EAAqC;IACjCa,QAAQ,CAACooB,OAAT,GAAmBwV,2BAA2B,CAACrrB,MAAM,CAAC,SAAD,CAAP,EAAoB3U,OAApB,CAA9C;EACH;;EACD,OAAOoC,QAAP;AACH,CARD;;AASA,IAAI43B,0CAA0C,GAAG,UAAUrlB,MAAV,EAAkB3U,OAAlB,EAA2B;EACxE,IAAIoC,QAAQ,GAAG;IACX22B,UAAU,EAAEx3B;EADD,CAAf;;EAGA,IAAIoT,MAAM,CAAC,YAAD,CAAN,KAAyBpT,SAA7B,EAAwC;IACpCa,QAAQ,CAAC22B,UAAT,GAAsBkH,oDAAoD,CAACtrB,MAAM,CAAC,YAAD,CAAP,EAAuB3U,OAAvB,CAA1E;EACH;;EACD,OAAOoC,QAAP;AACH,CARD;;AASA,IAAI69B,oDAAoD,GAAG,UAAUtrB,MAAV,EAAkB3U,OAAlB,EAA2B;EAClF,IAAIoC,QAAQ,GAAG;IACX62B,mBAAmB,EAAE13B,SADV;IAEX+vB,WAAW,EAAE/vB;EAFF,CAAf;;EAIA,IAAIoT,MAAM,CAAC,qBAAD,CAAN,KAAkCpT,SAAtC,EAAiD;IAC7Ca,QAAQ,CAAC62B,mBAAT,GAA+Bj7B,cAAc,CAAC2W,MAAM,CAAC,qBAAD,CAAP,CAA7C;EACH;;EACD,IAAIA,MAAM,CAAC,aAAD,CAAN,KAA0BpT,SAA9B,EAAyC;IACrCa,QAAQ,CAACkvB,WAAT,GAAuB2I,gDAAgD,CAACtlB,MAAM,CAAC,aAAD,CAAP,EAAwB3U,OAAxB,CAAvE;EACH;;EACD,OAAOoC,QAAP;AACH,CAZD;;AAaA,IAAI+3B,yBAAyB,GAAG,UAAUxlB,MAAV,EAAkB3U,OAAlB,EAA2B;EACvD,IAAIoC,QAAQ,GAAG;IACXT,GAAG,EAAEJ,SADM;IAEXuuB,KAAK,EAAEvuB;EAFI,CAAf;;EAIA,IAAIoT,MAAM,CAAC,KAAD,CAAN,KAAkBpT,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAe3D,cAAc,CAAC2W,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAAC0tB,KAAT,GAAiB9xB,cAAc,CAAC2W,MAAM,CAAC,OAAD,CAAP,CAA/B;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAIqc,4BAA4B,GAAG,UAAU9J,MAAV,EAAkB3U,OAAlB,EAA2B;EAC1D,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO8O,yBAAyB,CAAC9O,KAAD,EAAQrrB,OAAR,CAAhC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIkgC,iCAAiC,GAAG,UAAUvrB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC/D,IAAIoC,QAAQ,GAAG;IACX+tB,OAAO,EAAE5uB,SADE;IAEX8uB,UAAU,EAAE9uB;EAFD,CAAf;;EAIA,IAAIoT,MAAM,CAAC,SAAD,CAAN,KAAsBpT,SAA1B,EAAqC;IACjCa,QAAQ,CAAC+tB,OAAT,GAAmB6L,6BAA6B,CAACrnB,MAAM,CAAC,SAAD,CAAP,EAAoB3U,OAApB,CAAhD;EACH;;EACD,IAAI2U,MAAM,CAAC,YAAD,CAAN,KAAyBpT,SAA7B,EAAwC;IACpCa,QAAQ,CAACiuB,UAAT,GAAsBryB,cAAc,CAAC2W,MAAM,CAAC,YAAD,CAAP,CAApC;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAIq7B,kCAAkC,GAAG,UAAU9oB,MAAV,EAAkB3U,OAAlB,EAA2B;EAChE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO6U,iCAAiC,CAAC7U,KAAD,EAAQrrB,OAAR,CAAxC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAImgC,6BAA6B,GAAG,UAAUxrB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC3D,IAAIoC,QAAQ,GAAG;IACXisB,IAAI,EAAE9sB,SADK;IAEXkpB,UAAU,EAAElpB;EAFD,CAAf;;EAIA,IAAIoT,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACisB,IAAT,GAAgBrvB,kBAAkB,CAAC2V,MAAM,CAAC,MAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,YAAD,CAAN,KAAyBpT,SAA7B,EAAwC;IACpCa,QAAQ,CAACqoB,UAAT,GAAsBzsB,cAAc,CAAC2W,MAAM,CAAC,YAAD,CAAP,CAApC;EACH;;EACD,OAAOvS,QAAP;AACH,CAZD;;AAaA,IAAIg6B,iCAAiC,GAAG,UAAUznB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC/D,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO8U,6BAA6B,CAAC9U,KAAD,EAAQrrB,OAAR,CAApC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIogC,wCAAwC,GAAG,UAAUzrB,MAAV,EAAkB3U,OAAlB,EAA2B;EACtE,IAAIoC,QAAQ,GAAG;IACX8D,EAAE,EAAE3E,SADO;IAEX+3B,QAAQ,EAAE/3B,SAFC;IAGXqxB,MAAM,EAAErxB,SAHG;IAIXoqB,MAAM,EAAEpqB;EAJG,CAAf;;EAMA,IAAIoT,MAAM,CAAC,IAAD,CAAN,KAAiBpT,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC8D,EAAT,GAAclI,cAAc,CAAC2W,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACk3B,QAAT,GAAoBt7B,cAAc,CAAC2W,MAAM,CAAC,OAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAACmoB,KAAP,KAAiB,EAArB,EAAyB;IACrB16B,QAAQ,CAACwwB,MAAT,GAAkB,EAAlB;EACH;;EACD,IAAIje,MAAM,CAAC,OAAD,CAAN,KAAoBpT,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACwwB,MAAT,GAAkB+I,+BAA+B,CAACr9B,sBAAsB,CAACqW,MAAM,CAAC,OAAD,CAAP,CAAvB,EAA0C3U,OAA1C,CAAjD;EACH;;EACD,IAAI2U,MAAM,CAAC,QAAD,CAAN,KAAqBpT,SAAzB,EAAoC;IAChCa,QAAQ,CAACupB,MAAT,GAAkBoR,qDAAqD,CAACpoB,MAAM,CAAC,QAAD,CAAP,EAAmB3U,OAAnB,CAAvE;EACH;;EACD,OAAOoC,QAAP;AACH,CAvBD;;AAwBA,IAAIib,4CAA4C,GAAG,UAAU1I,MAAV,EAAkB3U,OAAlB,EAA2B;EAC1E,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO+U,wCAAwC,CAAC/U,KAAD,EAAQrrB,OAAR,CAA/C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIqgC,gCAAgC,GAAG,UAAU1rB,MAAV,EAAkB3U,OAAlB,EAA2B;EAC9D,IAAIoC,QAAQ,GAAG;IACX4wB,IAAI,EAAEzxB,SADK;IAEX8sB,IAAI,EAAE9sB,SAFK;IAGXwC,YAAY,EAAExC;EAHH,CAAf;;EAKA,IAAIoT,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC4wB,IAAT,GAAgBp1B,eAAe,CAACgB,sBAAsB,CAAC+V,MAAM,CAAC,MAAD,CAAP,CAAvB,CAA/B;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmBpT,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACisB,IAAT,GAAgBrvB,kBAAkB,CAAC2V,MAAM,CAAC,MAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2BpT,SAA/B,EAA0C;IACtCa,QAAQ,CAAC2B,YAAT,GAAwB/F,cAAc,CAAC2W,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,OAAOvS,QAAP;AACH,CAhBD;;AAiBA,IAAIg7B,oCAAoC,GAAG,UAAUzoB,MAAV,EAAkB3U,OAAlB,EAA2B;EAClE,OAAO,CAAC2U,MAAM,IAAI,EAAX,EACFwW,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFvpB,GAFE,CAEE,UAAUwpB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOgV,gCAAgC,CAAChV,KAAD,EAAQrrB,OAAR,CAAvC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI+U,mBAAmB,GAAG,UAAUJ,MAAV,EAAkB;EACxC,IAAI1U,EAAJ;;EACA,OAAQ;IACJqgC,cAAc,EAAE3rB,MAAM,CAACC,UADnB;IAEJ2rB,SAAS,EAAE,CAACtgC,EAAE,GAAG0U,MAAM,CAACpU,OAAP,CAAe,kBAAf,CAAN,MAA8C,IAA9C,IAAsDN,EAAE,KAAK,KAAK,CAAlE,GAAsEA,EAAtE,GAA2E0U,MAAM,CAACpU,OAAP,CAAe,mBAAf,CAFlF;IAGJigC,iBAAiB,EAAE7rB,MAAM,CAACpU,OAAP,CAAe,YAAf,CAHf;IAIJkgC,IAAI,EAAE9rB,MAAM,CAACpU,OAAP,CAAe,aAAf;EAJF,CAAR;AAMH,CARD;;AASA,IAAIyU,WAAW,GAAG,UAAU0rB,UAAV,EAAsB1gC,OAAtB,EAA+B;EAC7C,IAAI0gC,UAAU,KAAK,KAAK,CAAxB,EAA2B;IAAEA,UAAU,GAAG,IAAIC,UAAJ,EAAb;EAAgC;;EAC7D,IAAID,UAAU,YAAYC,UAA1B,EAAsC;IAClC,OAAO1rB,OAAO,CAACC,OAAR,CAAgBwrB,UAAhB,CAAP;EACH;;EACD,OAAO1gC,OAAO,CAAC4gC,eAAR,CAAwBF,UAAxB,KAAuCzrB,OAAO,CAACC,OAAR,CAAgB,IAAIyrB,UAAJ,EAAhB,CAA9C;AACH,CAND;;AAOA,IAAIhjB,iBAAiB,GAAG,UAAU+iB,UAAV,EAAsB1gC,OAAtB,EAA+B;EACnD,OAAOgV,WAAW,CAAC0rB,UAAD,EAAa1gC,OAAb,CAAX,CAAiC6gC,IAAjC,CAAsC,UAAUlgC,IAAV,EAAgB;IAAE,OAAOX,OAAO,CAAC8gC,WAAR,CAAoBngC,IAApB,CAAP;EAAmC,CAA3F,CAAP;AACH,CAFD;;AAGA,IAAIM,yBAAyB,GAAG,UAAUkoB,KAAV,EAAiB;EAC7C,OAAOA,KAAK,KAAK5nB,SAAV,IACH4nB,KAAK,KAAK,IADP,IAEHA,KAAK,KAAK,EAFP,KAGF,CAAClkB,MAAM,CAAC87B,mBAAP,CAA2B5X,KAA3B,EAAkC6X,QAAlC,CAA2C,QAA3C,CAAD,IAAyD7X,KAAK,CAAC3nB,MAAN,IAAgB,CAHvE,MAIF,CAACyD,MAAM,CAAC87B,mBAAP,CAA2B5X,KAA3B,EAAkC6X,QAAlC,CAA2C,MAA3C,CAAD,IAAuD7X,KAAK,CAAC8X,IAAN,IAAc,CAJnE,CAAP;AAKH,CAND;;AAOA,IAAIvrB,SAAS,GAAG,UAAUgrB,UAAV,EAAsB1gC,OAAtB,EAA+B;EAC3C,OAAO2d,iBAAiB,CAAC+iB,UAAD,EAAa1gC,OAAb,CAAjB,CAAuC6gC,IAAvC,CAA4C,UAAUK,OAAV,EAAmB;IAClE,IAAIA,OAAO,CAAC1/B,MAAZ,EAAoB;MAChB,IAAI2/B,SAAS,GAAG1hC,QAAQ,CAACyhC,OAAD,EAAU;QAC9BE,mBAAmB,EAAE,EADS;QAE9BC,gBAAgB,EAAE,KAFY;QAG9BC,cAAc,EAAE,KAHc;QAI9BC,UAAU,EAAE,KAJkB;QAK9BC,iBAAiB,EAAE,UAAUC,GAAV,EAAe;UAAE,OAAQA,GAAG,CAACC,IAAJ,OAAe,EAAf,IAAqBD,GAAG,CAACT,QAAJ,CAAa,IAAb,CAArB,GAA0C,EAA1C,GAA+CzhC,UAAU,CAACkiC,GAAD,CAAjE;QAA0E;MALhF,CAAV,CAAxB;MAOA,IAAIE,YAAY,GAAG,OAAnB;MACA,IAAIC,GAAG,GAAG38B,MAAM,CAACC,IAAP,CAAYi8B,SAAZ,EAAuB,CAAvB,CAAV;MACA,IAAIU,iBAAiB,GAAGV,SAAS,CAACS,GAAD,CAAjC;;MACA,IAAIC,iBAAiB,CAACF,YAAD,CAArB,EAAqC;QACjCE,iBAAiB,CAACD,GAAD,CAAjB,GAAyBC,iBAAiB,CAACF,YAAD,CAA1C;QACA,OAAOE,iBAAiB,CAACF,YAAD,CAAxB;MACH;;MACD,OAAOnjC,sBAAsB,CAACqjC,iBAAD,CAA7B;IACH;;IACD,OAAO,EAAP;EACH,CAnBM,CAAP;AAoBH,CArBD;;AAsBA,IAAIhsB,oBAAoB,GAAG,UAAUlB,MAAV,EAAkB4B,IAAlB,EAAwB;EAC/C,IAAIA,IAAI,CAACN,IAAL,KAAc1U,SAAlB,EAA6B;IACzB,OAAOgV,IAAI,CAACN,IAAZ;EACH;;EACD,IAAItB,MAAM,CAACC,UAAP,IAAqB,GAAzB,EAA8B;IAC1B,OAAO,UAAP;EACH;;EACD,OAAO,EAAP;AACH,CARD"},"metadata":{},"sourceType":"module"}