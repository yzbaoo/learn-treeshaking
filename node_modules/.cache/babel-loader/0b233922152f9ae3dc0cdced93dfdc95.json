{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ListBucketsOutput } from \"../models/models_0\";\nimport { deserializeAws_restXmlListBucketsCommand, serializeAws_restXmlListBucketsCommand } from \"../protocols/Aws_restXml\";\n\nvar ListBucketsCommand = function (_super) {\n  __extends(ListBucketsCommand, _super);\n\n  function ListBucketsCommand(input) {\n    var _this = _super.call(this) || this;\n\n    _this.input = input;\n    return _this;\n  }\n\n  ListBucketsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"ListBucketsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: function (input) {\n        return input;\n      },\n      outputFilterSensitiveLog: ListBucketsOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  ListBucketsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlListBucketsCommand(input, context);\n  };\n\n  ListBucketsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlListBucketsCommand(output, context);\n  };\n\n  return ListBucketsCommand;\n}($Command);\n\nexport { ListBucketsCommand };","map":{"version":3,"names":["__extends","getSerdePlugin","Command","$Command","ListBucketsOutput","deserializeAws_restXmlListBucketsCommand","serializeAws_restXmlListBucketsCommand","ListBucketsCommand","_super","input","_this","call","prototype","resolveMiddleware","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","logger","clientName","commandName","handlerExecutionContext","inputFilterSensitiveLog","outputFilterSensitiveLog","filterSensitiveLog","requestHandler","resolve","request","handle","context","output"],"sources":["/Users/yzbaoo/Desktop/huohua/ilc-web-packages/node_modules/@aws-sdk/client-s3/dist-es/commands/ListBucketsCommand.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ListBucketsOutput } from \"../models/models_0\";\nimport { deserializeAws_restXmlListBucketsCommand, serializeAws_restXmlListBucketsCommand, } from \"../protocols/Aws_restXml\";\nvar ListBucketsCommand = (function (_super) {\n    __extends(ListBucketsCommand, _super);\n    function ListBucketsCommand(input) {\n        var _this = _super.call(this) || this;\n        _this.input = input;\n        return _this;\n    }\n    ListBucketsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"S3Client\";\n        var commandName = \"ListBucketsCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: function (input) { return input; },\n            outputFilterSensitiveLog: ListBucketsOutput.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    ListBucketsCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restXmlListBucketsCommand(input, context);\n    };\n    ListBucketsCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restXmlListBucketsCommand(output, context);\n    };\n    return ListBucketsCommand;\n}($Command));\nexport { ListBucketsCommand };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,wCAAT,EAAmDC,sCAAnD,QAAkG,0BAAlG;;AACA,IAAIC,kBAAkB,GAAI,UAAUC,MAAV,EAAkB;EACxCR,SAAS,CAACO,kBAAD,EAAqBC,MAArB,CAAT;;EACA,SAASD,kBAAT,CAA4BE,KAA5B,EAAmC;IAC/B,IAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACD,KAAN,GAAcA,KAAd;IACA,OAAOC,KAAP;EACH;;EACDH,kBAAkB,CAACK,SAAnB,CAA6BC,iBAA7B,GAAiD,UAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+C;IAC5F,KAAKC,eAAL,CAAqBC,GAArB,CAAyBjB,cAAc,CAACc,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,IAAIC,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAZ;IACA,IAAIM,MAAM,GAAGR,aAAa,CAACQ,MAA3B;IACA,IAAIC,UAAU,GAAG,UAAjB;IACA,IAAIC,WAAW,GAAG,oBAAlB;IACA,IAAIC,uBAAuB,GAAG;MAC1BH,MAAM,EAAEA,MADkB;MAE1BC,UAAU,EAAEA,UAFc;MAG1BC,WAAW,EAAEA,WAHa;MAI1BE,uBAAuB,EAAE,UAAUlB,KAAV,EAAiB;QAAE,OAAOA,KAAP;MAAe,CAJjC;MAK1BmB,wBAAwB,EAAExB,iBAAiB,CAACyB;IALlB,CAA9B;IAOA,IAAIC,cAAc,GAAGf,aAAa,CAACe,cAAnC;IACA,OAAOT,KAAK,CAACU,OAAN,CAAc,UAAUC,OAAV,EAAmB;MACpC,OAAOF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuChB,OAAO,IAAI,EAAlD,CAAP;IACH,CAFM,EAEJU,uBAFI,CAAP;EAGH,CAjBD;;EAkBAnB,kBAAkB,CAACK,SAAnB,CAA6BO,SAA7B,GAAyC,UAAUV,KAAV,EAAiByB,OAAjB,EAA0B;IAC/D,OAAO5B,sCAAsC,CAACG,KAAD,EAAQyB,OAAR,CAA7C;EACH,CAFD;;EAGA3B,kBAAkB,CAACK,SAAnB,CAA6BQ,WAA7B,GAA2C,UAAUe,MAAV,EAAkBD,OAAlB,EAA2B;IAClE,OAAO7B,wCAAwC,CAAC8B,MAAD,EAASD,OAAT,CAA/C;EACH,CAFD;;EAGA,OAAO3B,kBAAP;AACH,CAhCyB,CAgCxBJ,QAhCwB,CAA1B;;AAiCA,SAASI,kBAAT"},"metadata":{},"sourceType":"module"}