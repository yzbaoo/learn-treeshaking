{"ast":null,"code":"import { __awaiter, __generator, __rest } from \"tslib\";\nexport var loggerMiddleware = function () {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var clientName, commandName, inputFilterSensitiveLog, logger, outputFilterSensitiveLog, response, _a, $metadata, outputWithoutMetadata;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              clientName = context.clientName, commandName = context.commandName, inputFilterSensitiveLog = context.inputFilterSensitiveLog, logger = context.logger, outputFilterSensitiveLog = context.outputFilterSensitiveLog;\n              return [4, next(args)];\n\n            case 1:\n              response = _b.sent();\n\n              if (!logger) {\n                return [2, response];\n              }\n\n              if (typeof logger.info === \"function\") {\n                _a = response.output, $metadata = _a.$metadata, outputWithoutMetadata = __rest(_a, [\"$metadata\"]);\n                logger.info({\n                  clientName: clientName,\n                  commandName: commandName,\n                  input: inputFilterSensitiveLog(args.input),\n                  output: outputFilterSensitiveLog(outputWithoutMetadata),\n                  metadata: $metadata\n                });\n              }\n\n              return [2, response];\n          }\n        });\n      });\n    };\n  };\n};\nexport var loggerMiddlewareOptions = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\",\n  override: true\n};\nexport var getLoggerPlugin = function (options) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"names":["__awaiter","__generator","__rest","loggerMiddleware","next","context","args","clientName","commandName","inputFilterSensitiveLog","logger","outputFilterSensitiveLog","response","_a","$metadata","outputWithoutMetadata","_b","label","sent","info","output","input","metadata","loggerMiddlewareOptions","name","tags","step","override","getLoggerPlugin","options","applyToStack","clientStack","add"],"sources":["/Users/yzbaoo/Desktop/huohua/ilc-web-packages/node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js"],"sourcesContent":["import { __awaiter, __generator, __rest } from \"tslib\";\nexport var loggerMiddleware = function () {\n    return function (next, context) {\n        return function (args) { return __awaiter(void 0, void 0, void 0, function () {\n            var clientName, commandName, inputFilterSensitiveLog, logger, outputFilterSensitiveLog, response, _a, $metadata, outputWithoutMetadata;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        clientName = context.clientName, commandName = context.commandName, inputFilterSensitiveLog = context.inputFilterSensitiveLog, logger = context.logger, outputFilterSensitiveLog = context.outputFilterSensitiveLog;\n                        return [4, next(args)];\n                    case 1:\n                        response = _b.sent();\n                        if (!logger) {\n                            return [2, response];\n                        }\n                        if (typeof logger.info === \"function\") {\n                            _a = response.output, $metadata = _a.$metadata, outputWithoutMetadata = __rest(_a, [\"$metadata\"]);\n                            logger.info({\n                                clientName: clientName,\n                                commandName: commandName,\n                                input: inputFilterSensitiveLog(args.input),\n                                output: outputFilterSensitiveLog(outputWithoutMetadata),\n                                metadata: $metadata,\n                            });\n                        }\n                        return [2, response];\n                }\n            });\n        }); };\n    };\n};\nexport var loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport var getLoggerPlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n}); };\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,MAAjC,QAA+C,OAA/C;AACA,OAAO,IAAIC,gBAAgB,GAAG,YAAY;EACtC,OAAO,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;IAC5B,OAAO,UAAUC,IAAV,EAAgB;MAAE,OAAON,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;QAC1E,IAAIO,UAAJ,EAAgBC,WAAhB,EAA6BC,uBAA7B,EAAsDC,MAAtD,EAA8DC,wBAA9D,EAAwFC,QAAxF,EAAkGC,EAAlG,EAAsGC,SAAtG,EAAiHC,qBAAjH;;QACA,OAAOd,WAAW,CAAC,IAAD,EAAO,UAAUe,EAAV,EAAc;UACnC,QAAQA,EAAE,CAACC,KAAX;YACI,KAAK,CAAL;cACIV,UAAU,GAAGF,OAAO,CAACE,UAArB,EAAiCC,WAAW,GAAGH,OAAO,CAACG,WAAvD,EAAoEC,uBAAuB,GAAGJ,OAAO,CAACI,uBAAtG,EAA+HC,MAAM,GAAGL,OAAO,CAACK,MAAhJ,EAAwJC,wBAAwB,GAAGN,OAAO,CAACM,wBAA3L;cACA,OAAO,CAAC,CAAD,EAAIP,IAAI,CAACE,IAAD,CAAR,CAAP;;YACJ,KAAK,CAAL;cACIM,QAAQ,GAAGI,EAAE,CAACE,IAAH,EAAX;;cACA,IAAI,CAACR,MAAL,EAAa;gBACT,OAAO,CAAC,CAAD,EAAIE,QAAJ,CAAP;cACH;;cACD,IAAI,OAAOF,MAAM,CAACS,IAAd,KAAuB,UAA3B,EAAuC;gBACnCN,EAAE,GAAGD,QAAQ,CAACQ,MAAd,EAAsBN,SAAS,GAAGD,EAAE,CAACC,SAArC,EAAgDC,qBAAqB,GAAGb,MAAM,CAACW,EAAD,EAAK,CAAC,WAAD,CAAL,CAA9E;gBACAH,MAAM,CAACS,IAAP,CAAY;kBACRZ,UAAU,EAAEA,UADJ;kBAERC,WAAW,EAAEA,WAFL;kBAGRa,KAAK,EAAEZ,uBAAuB,CAACH,IAAI,CAACe,KAAN,CAHtB;kBAIRD,MAAM,EAAET,wBAAwB,CAACI,qBAAD,CAJxB;kBAKRO,QAAQ,EAAER;gBALF,CAAZ;cAOH;;cACD,OAAO,CAAC,CAAD,EAAIF,QAAJ,CAAP;UAnBR;QAqBH,CAtBiB,CAAlB;MAuBH,CAzBwC,CAAhB;IAyBpB,CAzBL;EA0BH,CA3BD;AA4BH,CA7BM;AA8BP,OAAO,IAAIW,uBAAuB,GAAG;EACjCC,IAAI,EAAE,kBAD2B;EAEjCC,IAAI,EAAE,CAAC,QAAD,CAF2B;EAGjCC,IAAI,EAAE,YAH2B;EAIjCC,QAAQ,EAAE;AAJuB,CAA9B;AAMP,OAAO,IAAIC,eAAe,GAAG,UAAUC,OAAV,EAAmB;EAAE,OAAQ;IACtDC,YAAY,EAAE,UAAUC,WAAV,EAAuB;MACjCA,WAAW,CAACC,GAAZ,CAAgB7B,gBAAgB,EAAhC,EAAoCoB,uBAApC;IACH;EAHqD,CAAR;AAI7C,CAJE"},"metadata":{},"sourceType":"module"}