{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function addExpectContinueMiddleware(options) {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var request;\n        return __generator(this, function (_a) {\n          request = args.request;\n\n          if (HttpRequest.isInstance(request) && request.body && options.runtime === \"node\") {\n            request.headers = __assign(__assign({}, request.headers), {\n              Expect: \"100-continue\"\n            });\n          }\n\n          return [2, next(__assign(__assign({}, args), {\n            request: request\n          }))];\n        });\n      });\n    };\n  };\n}\nexport var addExpectContinueMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"SET_EXPECT_HEADER\", \"EXPECT_HEADER\"],\n  name: \"addExpectContinueMiddleware\",\n  override: true\n};\nexport var getAddExpectContinuePlugin = function (options) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(addExpectContinueMiddleware(options), addExpectContinueMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"names":["__assign","__awaiter","__generator","HttpRequest","addExpectContinueMiddleware","options","_this","next","args","request","_a","isInstance","body","runtime","headers","Expect","addExpectContinueMiddlewareOptions","step","tags","name","override","getAddExpectContinuePlugin","applyToStack","clientStack","add"],"sources":["/Users/yzbaoo/Desktop/huohua/ilc-web-packages/node_modules/@aws-sdk/middleware-expect-continue/dist-es/index.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function addExpectContinueMiddleware(options) {\n    var _this = this;\n    return function (next) {\n        return function (args) { return __awaiter(_this, void 0, void 0, function () {\n            var request;\n            return __generator(this, function (_a) {\n                request = args.request;\n                if (HttpRequest.isInstance(request) && request.body && options.runtime === \"node\") {\n                    request.headers = __assign(__assign({}, request.headers), { Expect: \"100-continue\" });\n                }\n                return [2, next(__assign(__assign({}, args), { request: request }))];\n            });\n        }); };\n    };\n}\nexport var addExpectContinueMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_EXPECT_HEADER\", \"EXPECT_HEADER\"],\n    name: \"addExpectContinueMiddleware\",\n    override: true,\n};\nexport var getAddExpectContinuePlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(addExpectContinueMiddleware(options), addExpectContinueMiddlewareOptions);\n    },\n}); };\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,SAASC,2BAAT,CAAqCC,OAArC,EAA8C;EACjD,IAAIC,KAAK,GAAG,IAAZ;;EACA,OAAO,UAAUC,IAAV,EAAgB;IACnB,OAAO,UAAUC,IAAV,EAAgB;MAAE,OAAOP,SAAS,CAACK,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;QACzE,IAAIG,OAAJ;QACA,OAAOP,WAAW,CAAC,IAAD,EAAO,UAAUQ,EAAV,EAAc;UACnCD,OAAO,GAAGD,IAAI,CAACC,OAAf;;UACA,IAAIN,WAAW,CAACQ,UAAZ,CAAuBF,OAAvB,KAAmCA,OAAO,CAACG,IAA3C,IAAmDP,OAAO,CAACQ,OAAR,KAAoB,MAA3E,EAAmF;YAC/EJ,OAAO,CAACK,OAAR,GAAkBd,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKS,OAAO,CAACK,OAAb,CAAT,EAAgC;cAAEC,MAAM,EAAE;YAAV,CAAhC,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIR,IAAI,CAACP,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKQ,IAAL,CAAT,EAAqB;YAAEC,OAAO,EAAEA;UAAX,CAArB,CAAT,CAAR,CAAP;QACH,CANiB,CAAlB;MAOH,CATwC,CAAhB;IASpB,CATL;EAUH,CAXD;AAYH;AACD,OAAO,IAAIO,kCAAkC,GAAG;EAC5CC,IAAI,EAAE,OADsC;EAE5CC,IAAI,EAAE,CAAC,mBAAD,EAAsB,eAAtB,CAFsC;EAG5CC,IAAI,EAAE,6BAHsC;EAI5CC,QAAQ,EAAE;AAJkC,CAAzC;AAMP,OAAO,IAAIC,0BAA0B,GAAG,UAAUhB,OAAV,EAAmB;EAAE,OAAQ;IACjEiB,YAAY,EAAE,UAAUC,WAAV,EAAuB;MACjCA,WAAW,CAACC,GAAZ,CAAgBpB,2BAA2B,CAACC,OAAD,CAA3C,EAAsDW,kCAAtD;IACH;EAHgE,CAAR;AAIxD,CAJE"},"metadata":{},"sourceType":"module"}