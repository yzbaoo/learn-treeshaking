{"ast":null,"code":"'use strict';\n\nconst char = function (a) {\n  return String.fromCharCode(a);\n};\n\nconst chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n  emptyChar: char(178),\n  emptyValue: char(177),\n  //empty Premitive\n  boundryChar: char(179),\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185)\n};\nconst charsArr = [chars.nilChar, chars.nilPremitive, chars.missingChar, chars.missingPremitive, chars.boundryChar, chars.emptyChar, chars.emptyValue, chars.arrayEnd, chars.objStart, chars.arrStart];\n\nconst _e = function (node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    const hasValidData = hasData(node);\n\n    if (hasValidData === true) {\n      let str = '';\n\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        const itemSchema = e_schema[0]; //var itemSchemaType = itemSchema;\n\n        const arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = _e(node[arr_i], itemSchema, options);\n\n            str = processValue(str, r);\n          }\n        }\n\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        const keys = Object.keys(e_schema);\n\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n\n        for (let i in keys) {\n          const key = keys[i]; //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n\n          let r;\n\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            r = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            r = _e(node.val, e_schema[key], options);\n          } else {\n            r = _e(node.child[key], e_schema[key], options);\n          }\n\n          str = processValue(str, r);\n        }\n      }\n\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nconst getValue = function (a\n/*, type*/\n) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n\n    case null:\n      return chars.nilPremitive;\n\n    case '':\n      return chars.emptyValue;\n\n    default:\n      return a;\n  }\n};\n\nconst processValue = function (str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n\n  return str + r;\n};\n\nconst isAppChar = function (ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (jObj.child && Object.keys(jObj.child).length === 0 && (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nconst x2j = require('./xmlstr2xmlnode');\n\nconst buildOptions = require('./util').buildOptions;\n\nconst convert2nimn = function (node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;","map":{"version":3,"names":["char","a","String","fromCharCode","chars","nilChar","missingChar","nilPremitive","missingPremitive","emptyChar","emptyValue","boundryChar","objStart","arrStart","arrayEnd","charsArr","_e","node","e_schema","options","val","undefined","getValue","hasValidData","hasData","str","Array","isArray","itemSchema","arr_len","length","arr_i","r","processValue","keys","Object","i","key","ignoreAttributes","attrsMap","textNodeName","child","isAppChar","ch","indexOf","jObj","x2j","require","buildOptions","convert2nimn","defaultOptions","props","exports"],"sources":["/Users/yzbaoo/Desktop/huohua/ilc-web-packages/node_modules/fast-xml-parser/src/nimndata.js"],"sourcesContent":["'use strict';\nconst char = function(a) {\n  return String.fromCharCode(a);\n};\n\nconst chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n\n  emptyChar: char(178),\n  emptyValue: char(177), //empty Premitive\n\n  boundryChar: char(179),\n\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185),\n};\n\nconst charsArr = [\n  chars.nilChar,\n  chars.nilPremitive,\n  chars.missingChar,\n  chars.missingPremitive,\n  chars.boundryChar,\n  chars.emptyChar,\n  chars.emptyValue,\n  chars.arrayEnd,\n  chars.objStart,\n  chars.arrStart,\n];\n\nconst _e = function(node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    const hasValidData = hasData(node);\n    if (hasValidData === true) {\n      let str = '';\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        const itemSchema = e_schema[0];\n        //var itemSchemaType = itemSchema;\n        const arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = _e(node[arr_i], itemSchema, options);\n            str = processValue(str, r);\n          }\n        }\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        const keys = Object.keys(e_schema);\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n        for (let i in keys) {\n          const key = keys[i];\n          //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n          let r;\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            r = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            r = _e(node.val, e_schema[key], options);\n          } else {\n            r = _e(node.child[key], e_schema[key], options);\n          }\n          str = processValue(str, r);\n        }\n      }\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nconst getValue = function(a /*, type*/) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n    case null:\n      return chars.nilPremitive;\n    case '':\n      return chars.emptyValue;\n    default:\n      return a;\n  }\n};\n\nconst processValue = function(str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n  return str + r;\n};\n\nconst isAppChar = function(ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (\n    jObj.child &&\n    Object.keys(jObj.child).length === 0 &&\n    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)\n  ) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nconst x2j = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\n\nconst convert2nimn = function(node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}