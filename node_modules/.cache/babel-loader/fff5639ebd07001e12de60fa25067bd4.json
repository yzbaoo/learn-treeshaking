{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nexport var getEndpointFromRegion = function (input) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, tls, region, dnsHostRegex, useDualstackEndpoint, useFipsEndpoint, hostname;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = input.tls, tls = _a === void 0 ? true : _a;\n          return [4, input.region()];\n\n        case 1:\n          region = _c.sent();\n          dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n\n          if (!dnsHostRegex.test(region)) {\n            throw new Error(\"Invalid region in client config\");\n          }\n\n          return [4, input.useDualstackEndpoint()];\n\n        case 2:\n          useDualstackEndpoint = _c.sent();\n          return [4, input.useFipsEndpoint()];\n\n        case 3:\n          useFipsEndpoint = _c.sent();\n          return [4, input.regionInfoProvider(region, {\n            useDualstackEndpoint: useDualstackEndpoint,\n            useFipsEndpoint: useFipsEndpoint\n          })];\n\n        case 4:\n          hostname = ((_b = _c.sent()) !== null && _b !== void 0 ? _b : {}).hostname;\n\n          if (!hostname) {\n            throw new Error(\"Cannot resolve hostname from client config\");\n          }\n\n          return [2, input.urlParser((tls ? \"https:\" : \"http:\") + \"//\" + hostname)];\n      }\n    });\n  });\n};","map":{"version":3,"names":["__awaiter","__generator","getEndpointFromRegion","input","_a","tls","region","dnsHostRegex","useDualstackEndpoint","useFipsEndpoint","hostname","_b","_c","label","sent","RegExp","test","Error","regionInfoProvider","urlParser"],"sources":["/Users/yzbaoo/Desktop/huohua/ilc-web-packages/node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/utils/getEndpointFromRegion.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nexport var getEndpointFromRegion = function (input) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, tls, region, dnsHostRegex, useDualstackEndpoint, useFipsEndpoint, hostname;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = input.tls, tls = _a === void 0 ? true : _a;\n                return [4, input.region()];\n            case 1:\n                region = _c.sent();\n                dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n                if (!dnsHostRegex.test(region)) {\n                    throw new Error(\"Invalid region in client config\");\n                }\n                return [4, input.useDualstackEndpoint()];\n            case 2:\n                useDualstackEndpoint = _c.sent();\n                return [4, input.useFipsEndpoint()];\n            case 3:\n                useFipsEndpoint = _c.sent();\n                return [4, input.regionInfoProvider(region, { useDualstackEndpoint: useDualstackEndpoint, useFipsEndpoint: useFipsEndpoint })];\n            case 4:\n                hostname = ((_b = (_c.sent())) !== null && _b !== void 0 ? _b : {}).hostname;\n                if (!hostname) {\n                    throw new Error(\"Cannot resolve hostname from client config\");\n                }\n                return [2, input.urlParser((tls ? \"https:\" : \"http:\") + \"//\" + hostname)];\n        }\n    });\n}); };\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,OAAvC;AACA,OAAO,IAAIC,qBAAqB,GAAG,UAAUC,KAAV,EAAiB;EAAE,OAAOH,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvG,IAAII,EAAJ,EAAQC,GAAR,EAAaC,MAAb,EAAqBC,YAArB,EAAmCC,oBAAnC,EAAyDC,eAAzD,EAA0EC,QAA1E;;IACA,IAAIC,EAAJ;;IACA,OAAOV,WAAW,CAAC,IAAD,EAAO,UAAUW,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIT,EAAE,GAAGD,KAAK,CAACE,GAAX,EAAgBA,GAAG,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAA7C;UACA,OAAO,CAAC,CAAD,EAAID,KAAK,CAACG,MAAN,EAAJ,CAAP;;QACJ,KAAK,CAAL;UACIA,MAAM,GAAGM,EAAE,CAACE,IAAH,EAAT;UACAP,YAAY,GAAG,IAAIQ,MAAJ,CAAW,0DAAX,CAAf;;UACA,IAAI,CAACR,YAAY,CAACS,IAAb,CAAkBV,MAAlB,CAAL,EAAgC;YAC5B,MAAM,IAAIW,KAAJ,CAAU,iCAAV,CAAN;UACH;;UACD,OAAO,CAAC,CAAD,EAAId,KAAK,CAACK,oBAAN,EAAJ,CAAP;;QACJ,KAAK,CAAL;UACIA,oBAAoB,GAAGI,EAAE,CAACE,IAAH,EAAvB;UACA,OAAO,CAAC,CAAD,EAAIX,KAAK,CAACM,eAAN,EAAJ,CAAP;;QACJ,KAAK,CAAL;UACIA,eAAe,GAAGG,EAAE,CAACE,IAAH,EAAlB;UACA,OAAO,CAAC,CAAD,EAAIX,KAAK,CAACe,kBAAN,CAAyBZ,MAAzB,EAAiC;YAAEE,oBAAoB,EAAEA,oBAAxB;YAA8CC,eAAe,EAAEA;UAA/D,CAAjC,CAAJ,CAAP;;QACJ,KAAK,CAAL;UACIC,QAAQ,GAAG,CAAC,CAACC,EAAE,GAAIC,EAAE,CAACE,IAAH,EAAP,MAAuB,IAAvB,IAA+BH,EAAE,KAAK,KAAK,CAA3C,GAA+CA,EAA/C,GAAoD,EAArD,EAAyDD,QAApE;;UACA,IAAI,CAACA,QAAL,EAAe;YACX,MAAM,IAAIO,KAAJ,CAAU,4CAAV,CAAN;UACH;;UACD,OAAO,CAAC,CAAD,EAAId,KAAK,CAACgB,SAAN,CAAgB,CAACd,GAAG,GAAG,QAAH,GAAc,OAAlB,IAA6B,IAA7B,GAAoCK,QAApD,CAAJ,CAAP;MAtBR;IAwBH,CAzBiB,CAAlB;EA0BH,CA7BqE,CAAhB;AA6BjD,CA7BE"},"metadata":{},"sourceType":"module"}