{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport var resolveRegionConfig = function (input) {\n  var region = input.region,\n      useFipsEndpoint = input.useFipsEndpoint;\n\n  if (!region) {\n    throw new Error(\"Region is missing\");\n  }\n\n  return __assign(__assign({}, input), {\n    region: function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var providedRegion;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (typeof region === \"string\") {\n                return [2, getRealRegion(region)];\n              }\n\n              return [4, region()];\n\n            case 1:\n              providedRegion = _a.sent();\n              return [2, getRealRegion(providedRegion)];\n          }\n        });\n      });\n    },\n    useFipsEndpoint: function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var providedRegion, _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!(typeof region === \"string\")) return [3, 1];\n              _a = region;\n              return [3, 3];\n\n            case 1:\n              return [4, region()];\n\n            case 2:\n              _a = _b.sent();\n              _b.label = 3;\n\n            case 3:\n              providedRegion = _a;\n\n              if (isFipsRegion(providedRegion)) {\n                return [2, true];\n              }\n\n              return [2, typeof useFipsEndpoint === \"boolean\" ? Promise.resolve(useFipsEndpoint) : useFipsEndpoint()];\n          }\n        });\n      });\n    }\n  });\n};","map":{"version":3,"names":["__assign","__awaiter","__generator","getRealRegion","isFipsRegion","resolveRegionConfig","input","region","useFipsEndpoint","Error","providedRegion","_a","label","sent","_b","Promise","resolve"],"sources":["/Users/yzbaoo/Desktop/huohua/ilc-web-packages/node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/resolveRegionConfig.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport var resolveRegionConfig = function (input) {\n    var region = input.region, useFipsEndpoint = input.useFipsEndpoint;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return __assign(__assign({}, input), { region: function () { return __awaiter(void 0, void 0, void 0, function () {\n            var providedRegion;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typeof region === \"string\") {\n                            return [2, getRealRegion(region)];\n                        }\n                        return [4, region()];\n                    case 1:\n                        providedRegion = _a.sent();\n                        return [2, getRealRegion(providedRegion)];\n                }\n            });\n        }); }, useFipsEndpoint: function () { return __awaiter(void 0, void 0, void 0, function () {\n            var providedRegion, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(typeof region === \"string\")) return [3, 1];\n                        _a = region;\n                        return [3, 3];\n                    case 1: return [4, region()];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        providedRegion = _a;\n                        if (isFipsRegion(providedRegion)) {\n                            return [2, true];\n                        }\n                        return [2, typeof useFipsEndpoint === \"boolean\" ? Promise.resolve(useFipsEndpoint) : useFipsEndpoint()];\n                }\n            });\n        }); } });\n};\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAO,IAAIC,mBAAmB,GAAG,UAAUC,KAAV,EAAiB;EAC9C,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;EAAA,IAA2BC,eAAe,GAAGF,KAAK,CAACE,eAAnD;;EACA,IAAI,CAACD,MAAL,EAAa;IACT,MAAM,IAAIE,KAAJ,CAAU,mBAAV,CAAN;EACH;;EACD,OAAOT,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKM,KAAL,CAAT,EAAsB;IAAEC,MAAM,EAAE,YAAY;MAAE,OAAON,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;QAC1G,IAAIS,cAAJ;QACA,OAAOR,WAAW,CAAC,IAAD,EAAO,UAAUS,EAAV,EAAc;UACnC,QAAQA,EAAE,CAACC,KAAX;YACI,KAAK,CAAL;cACI,IAAI,OAAOL,MAAP,KAAkB,QAAtB,EAAgC;gBAC5B,OAAO,CAAC,CAAD,EAAIJ,aAAa,CAACI,MAAD,CAAjB,CAAP;cACH;;cACD,OAAO,CAAC,CAAD,EAAIA,MAAM,EAAV,CAAP;;YACJ,KAAK,CAAL;cACIG,cAAc,GAAGC,EAAE,CAACE,IAAH,EAAjB;cACA,OAAO,CAAC,CAAD,EAAIV,aAAa,CAACO,cAAD,CAAjB,CAAP;UARR;QAUH,CAXiB,CAAlB;MAYH,CAdwE,CAAhB;IAcpD,CAd4B;IAc1BF,eAAe,EAAE,YAAY;MAAE,OAAOP,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;QACvF,IAAIS,cAAJ,EAAoBC,EAApB;;QACA,OAAOT,WAAW,CAAC,IAAD,EAAO,UAAUY,EAAV,EAAc;UACnC,QAAQA,EAAE,CAACF,KAAX;YACI,KAAK,CAAL;cACI,IAAI,EAAE,OAAOL,MAAP,KAAkB,QAApB,CAAJ,EAAmC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;cACnCI,EAAE,GAAGJ,MAAL;cACA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACJ,KAAK,CAAL;cAAQ,OAAO,CAAC,CAAD,EAAIA,MAAM,EAAV,CAAP;;YACR,KAAK,CAAL;cACII,EAAE,GAAGG,EAAE,CAACD,IAAH,EAAL;cACAC,EAAE,CAACF,KAAH,GAAW,CAAX;;YACJ,KAAK,CAAL;cACIF,cAAc,GAAGC,EAAjB;;cACA,IAAIP,YAAY,CAACM,cAAD,CAAhB,EAAkC;gBAC9B,OAAO,CAAC,CAAD,EAAI,IAAJ,CAAP;cACH;;cACD,OAAO,CAAC,CAAD,EAAI,OAAOF,eAAP,KAA2B,SAA3B,GAAuCO,OAAO,CAACC,OAAR,CAAgBR,eAAhB,CAAvC,GAA0EA,eAAe,EAA7F,CAAP;UAdR;QAgBH,CAjBiB,CAAlB;MAkBH,CApBqD,CAAhB;IAoBjC;EAlC4B,CAAtB,CAAf;AAmCH,CAxCM"},"metadata":{},"sourceType":"module"}