{"ast":null,"code":"export var getResolvedSigningRegion = function (hostname, _a) {\n  var signingRegion = _a.signingRegion,\n      regionRegex = _a.regionRegex,\n      useFipsEndpoint = _a.useFipsEndpoint;\n\n  if (signingRegion) {\n    return signingRegion;\n  } else if (useFipsEndpoint) {\n    var regionRegexJs = regionRegex.replace(\"\\\\\\\\\", \"\\\\\").replace(/^\\^/g, \"\\\\.\").replace(/\\$$/g, \"\\\\.\");\n    var regionRegexmatchArray = hostname.match(regionRegexJs);\n\n    if (regionRegexmatchArray) {\n      return regionRegexmatchArray[0].slice(1, -1);\n    }\n  }\n};","map":{"version":3,"names":["getResolvedSigningRegion","hostname","_a","signingRegion","regionRegex","useFipsEndpoint","regionRegexJs","replace","regionRegexmatchArray","match","slice"],"sources":["/Users/yzbaoo/Desktop/huohua/ilc-web-packages/node_modules/@aws-sdk/config-resolver/dist-es/regionInfo/getResolvedSigningRegion.js"],"sourcesContent":["export var getResolvedSigningRegion = function (hostname, _a) {\n    var signingRegion = _a.signingRegion, regionRegex = _a.regionRegex, useFipsEndpoint = _a.useFipsEndpoint;\n    if (signingRegion) {\n        return signingRegion;\n    }\n    else if (useFipsEndpoint) {\n        var regionRegexJs = regionRegex.replace(\"\\\\\\\\\", \"\\\\\").replace(/^\\^/g, \"\\\\.\").replace(/\\$$/g, \"\\\\.\");\n        var regionRegexmatchArray = hostname.match(regionRegexJs);\n        if (regionRegexmatchArray) {\n            return regionRegexmatchArray[0].slice(1, -1);\n        }\n    }\n};\n"],"mappings":"AAAA,OAAO,IAAIA,wBAAwB,GAAG,UAAUC,QAAV,EAAoBC,EAApB,EAAwB;EAC1D,IAAIC,aAAa,GAAGD,EAAE,CAACC,aAAvB;EAAA,IAAsCC,WAAW,GAAGF,EAAE,CAACE,WAAvD;EAAA,IAAoEC,eAAe,GAAGH,EAAE,CAACG,eAAzF;;EACA,IAAIF,aAAJ,EAAmB;IACf,OAAOA,aAAP;EACH,CAFD,MAGK,IAAIE,eAAJ,EAAqB;IACtB,IAAIC,aAAa,GAAGF,WAAW,CAACG,OAAZ,CAAoB,MAApB,EAA4B,IAA5B,EAAkCA,OAAlC,CAA0C,MAA1C,EAAkD,KAAlD,EAAyDA,OAAzD,CAAiE,MAAjE,EAAyE,KAAzE,CAApB;IACA,IAAIC,qBAAqB,GAAGP,QAAQ,CAACQ,KAAT,CAAeH,aAAf,CAA5B;;IACA,IAAIE,qBAAJ,EAA2B;MACvB,OAAOA,qBAAqB,CAAC,CAAD,CAArB,CAAyBE,KAAzB,CAA+B,CAA/B,EAAkC,CAAC,CAAnC,CAAP;IACH;EACJ;AACJ,CAZM"},"metadata":{},"sourceType":"module"}