{"ast":null,"code":"import { __assign, __read, __spreadArray } from \"tslib\";\n\nvar HttpRequest = function () {\n  function HttpRequest(options) {\n    this.method = options.method || \"GET\";\n    this.hostname = options.hostname || \"localhost\";\n    this.port = options.port;\n    this.query = options.query || {};\n    this.headers = options.headers || {};\n    this.body = options.body;\n    this.protocol = options.protocol ? options.protocol.substr(-1) !== \":\" ? options.protocol + \":\" : options.protocol : \"https:\";\n    this.path = options.path ? options.path.charAt(0) !== \"/\" ? \"/\" + options.path : options.path : \"/\";\n  }\n\n  HttpRequest.isInstance = function (request) {\n    if (!request) return false;\n    var req = request;\n    return \"method\" in req && \"protocol\" in req && \"hostname\" in req && \"path\" in req && typeof req[\"query\"] === \"object\" && typeof req[\"headers\"] === \"object\";\n  };\n\n  HttpRequest.prototype.clone = function () {\n    var cloned = new HttpRequest(__assign(__assign({}, this), {\n      headers: __assign({}, this.headers)\n    }));\n    if (cloned.query) cloned.query = cloneQuery(cloned.query);\n    return cloned;\n  };\n\n  return HttpRequest;\n}();\n\nexport { HttpRequest };\n\nfunction cloneQuery(query) {\n  return Object.keys(query).reduce(function (carry, paramName) {\n    var _a;\n\n    var param = query[paramName];\n    return __assign(__assign({}, carry), (_a = {}, _a[paramName] = Array.isArray(param) ? __spreadArray([], __read(param)) : param, _a));\n  }, {});\n}","map":{"version":3,"names":["__assign","__read","__spreadArray","HttpRequest","options","method","hostname","port","query","headers","body","protocol","substr","path","charAt","isInstance","request","req","prototype","clone","cloned","cloneQuery","Object","keys","reduce","carry","paramName","_a","param","Array","isArray"],"sources":["/Users/yzbaoo/Desktop/huohua/ilc-web-packages/node_modules/@aws-sdk/protocol-http/dist-es/httpRequest.js"],"sourcesContent":["import { __assign, __read, __spreadArray } from \"tslib\";\nvar HttpRequest = (function () {\n    function HttpRequest(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.substr(-1) !== \":\"\n                ? options.protocol + \":\"\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? \"/\" + options.path : options.path) : \"/\";\n    }\n    HttpRequest.isInstance = function (request) {\n        if (!request)\n            return false;\n        var req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    };\n    HttpRequest.prototype.clone = function () {\n        var cloned = new HttpRequest(__assign(__assign({}, this), { headers: __assign({}, this.headers) }));\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    };\n    return HttpRequest;\n}());\nexport { HttpRequest };\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce(function (carry, paramName) {\n        var _a;\n        var param = query[paramName];\n        return __assign(__assign({}, carry), (_a = {}, _a[paramName] = Array.isArray(param) ? __spreadArray([], __read(param)) : param, _a));\n    }, {});\n}\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,aAA3B,QAAgD,OAAhD;;AACA,IAAIC,WAAW,GAAI,YAAY;EAC3B,SAASA,WAAT,CAAqBC,OAArB,EAA8B;IAC1B,KAAKC,MAAL,GAAcD,OAAO,CAACC,MAAR,IAAkB,KAAhC;IACA,KAAKC,QAAL,GAAgBF,OAAO,CAACE,QAAR,IAAoB,WAApC;IACA,KAAKC,IAAL,GAAYH,OAAO,CAACG,IAApB;IACA,KAAKC,KAAL,GAAaJ,OAAO,CAACI,KAAR,IAAiB,EAA9B;IACA,KAAKC,OAAL,GAAeL,OAAO,CAACK,OAAR,IAAmB,EAAlC;IACA,KAAKC,IAAL,GAAYN,OAAO,CAACM,IAApB;IACA,KAAKC,QAAL,GAAgBP,OAAO,CAACO,QAAR,GACVP,OAAO,CAACO,QAAR,CAAiBC,MAAjB,CAAwB,CAAC,CAAzB,MAAgC,GAAhC,GACIR,OAAO,CAACO,QAAR,GAAmB,GADvB,GAEIP,OAAO,CAACO,QAHF,GAIV,QAJN;IAKA,KAAKE,IAAL,GAAYT,OAAO,CAACS,IAAR,GAAgBT,OAAO,CAACS,IAAR,CAAaC,MAAb,CAAoB,CAApB,MAA2B,GAA3B,GAAiC,MAAMV,OAAO,CAACS,IAA/C,GAAsDT,OAAO,CAACS,IAA9E,GAAsF,GAAlG;EACH;;EACDV,WAAW,CAACY,UAAZ,GAAyB,UAAUC,OAAV,EAAmB;IACxC,IAAI,CAACA,OAAL,EACI,OAAO,KAAP;IACJ,IAAIC,GAAG,GAAGD,OAAV;IACA,OAAQ,YAAYC,GAAZ,IACJ,cAAcA,GADV,IAEJ,cAAcA,GAFV,IAGJ,UAAUA,GAHN,IAIJ,OAAOA,GAAG,CAAC,OAAD,CAAV,KAAwB,QAJpB,IAKJ,OAAOA,GAAG,CAAC,SAAD,CAAV,KAA0B,QAL9B;EAMH,CAVD;;EAWAd,WAAW,CAACe,SAAZ,CAAsBC,KAAtB,GAA8B,YAAY;IACtC,IAAIC,MAAM,GAAG,IAAIjB,WAAJ,CAAgBH,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK,IAAL,CAAT,EAAqB;MAAES,OAAO,EAAET,QAAQ,CAAC,EAAD,EAAK,KAAKS,OAAV;IAAnB,CAArB,CAAxB,CAAb;IACA,IAAIW,MAAM,CAACZ,KAAX,EACIY,MAAM,CAACZ,KAAP,GAAea,UAAU,CAACD,MAAM,CAACZ,KAAR,CAAzB;IACJ,OAAOY,MAAP;EACH,CALD;;EAMA,OAAOjB,WAAP;AACH,CAjCkB,EAAnB;;AAkCA,SAASA,WAAT;;AACA,SAASkB,UAAT,CAAoBb,KAApB,EAA2B;EACvB,OAAOc,MAAM,CAACC,IAAP,CAAYf,KAAZ,EAAmBgB,MAAnB,CAA0B,UAAUC,KAAV,EAAiBC,SAAjB,EAA4B;IACzD,IAAIC,EAAJ;;IACA,IAAIC,KAAK,GAAGpB,KAAK,CAACkB,SAAD,CAAjB;IACA,OAAO1B,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKyB,KAAL,CAAT,GAAuBE,EAAE,GAAG,EAAL,EAASA,EAAE,CAACD,SAAD,CAAF,GAAgBG,KAAK,CAACC,OAAN,CAAcF,KAAd,IAAuB1B,aAAa,CAAC,EAAD,EAAKD,MAAM,CAAC2B,KAAD,CAAX,CAApC,GAA0DA,KAAnF,EAA0FD,EAAjH,EAAf;EACH,CAJM,EAIJ,EAJI,CAAP;AAKH"},"metadata":{},"sourceType":"module"}