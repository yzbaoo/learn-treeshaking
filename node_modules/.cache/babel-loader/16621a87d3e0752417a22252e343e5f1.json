{"ast":null,"code":"import { __read } from \"tslib\";\nexport var parseBoolean = function (value) {\n  switch (value) {\n    case \"true\":\n      return true;\n\n    case \"false\":\n      return false;\n\n    default:\n      throw new Error(\"Unable to parse boolean value \\\"\" + value + \"\\\"\");\n  }\n};\nexport var expectBoolean = function (value) {\n  if (value === null || value === undefined) {\n    return undefined;\n  }\n\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n\n  throw new TypeError(\"Expected boolean, got \" + typeof value);\n};\nexport var expectNumber = function (value) {\n  if (value === null || value === undefined) {\n    return undefined;\n  }\n\n  if (typeof value === \"number\") {\n    return value;\n  }\n\n  throw new TypeError(\"Expected number, got \" + typeof value);\n};\nvar MAX_FLOAT = Math.ceil(Math.pow(2, 127) * (2 - Math.pow(2, -23)));\nexport var expectFloat32 = function (value) {\n  var expected = expectNumber(value);\n\n  if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n    if (Math.abs(expected) > MAX_FLOAT) {\n      throw new TypeError(\"Expected 32-bit float, got \" + value);\n    }\n  }\n\n  return expected;\n};\nexport var expectLong = function (value) {\n  if (value === null || value === undefined) {\n    return undefined;\n  }\n\n  if (Number.isInteger(value) && !Number.isNaN(value)) {\n    return value;\n  }\n\n  throw new TypeError(\"Expected integer, got \" + typeof value);\n};\nexport var expectInt = expectLong;\nexport var expectInt32 = function (value) {\n  return expectSizedInt(value, 32);\n};\nexport var expectShort = function (value) {\n  return expectSizedInt(value, 16);\n};\nexport var expectByte = function (value) {\n  return expectSizedInt(value, 8);\n};\n\nvar expectSizedInt = function (value, size) {\n  var expected = expectLong(value);\n\n  if (expected !== undefined && castInt(expected, size) !== expected) {\n    throw new TypeError(\"Expected \" + size + \"-bit integer, got \" + value);\n  }\n\n  return expected;\n};\n\nvar castInt = function (value, size) {\n  switch (size) {\n    case 32:\n      return Int32Array.of(value)[0];\n\n    case 16:\n      return Int16Array.of(value)[0];\n\n    case 8:\n      return Int8Array.of(value)[0];\n  }\n};\n\nexport var expectNonNull = function (value, location) {\n  if (value === null || value === undefined) {\n    if (location) {\n      throw new TypeError(\"Expected a non-null value for \" + location);\n    }\n\n    throw new TypeError(\"Expected a non-null value\");\n  }\n\n  return value;\n};\nexport var expectObject = function (value) {\n  if (value === null || value === undefined) {\n    return undefined;\n  }\n\n  if (typeof value === \"object\" && !Array.isArray(value)) {\n    return value;\n  }\n\n  throw new TypeError(\"Expected object, got \" + typeof value);\n};\nexport var expectString = function (value) {\n  if (value === null || value === undefined) {\n    return undefined;\n  }\n\n  if (typeof value === \"string\") {\n    return value;\n  }\n\n  throw new TypeError(\"Expected string, got \" + typeof value);\n};\nexport var expectUnion = function (value) {\n  if (value === null || value === undefined) {\n    return undefined;\n  }\n\n  var asObject = expectObject(value);\n  var setKeys = Object.entries(asObject).filter(function (_a) {\n    var _b = __read(_a, 2),\n        _ = _b[0],\n        v = _b[1];\n\n    return v !== null && v !== undefined;\n  }).map(function (_a) {\n    var _b = __read(_a, 2),\n        k = _b[0],\n        _ = _b[1];\n\n    return k;\n  });\n\n  if (setKeys.length === 0) {\n    throw new TypeError(\"Unions must have exactly one non-null member\");\n  }\n\n  if (setKeys.length > 1) {\n    throw new TypeError(\"Unions must have exactly one non-null member. Keys \" + setKeys + \" were not null.\");\n  }\n\n  return asObject;\n};\nexport var strictParseDouble = function (value) {\n  if (typeof value == \"string\") {\n    return expectNumber(parseNumber(value));\n  }\n\n  return expectNumber(value);\n};\nexport var strictParseFloat = strictParseDouble;\nexport var strictParseFloat32 = function (value) {\n  if (typeof value == \"string\") {\n    return expectFloat32(parseNumber(value));\n  }\n\n  return expectFloat32(value);\n};\nvar NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\n\nvar parseNumber = function (value) {\n  var matches = value.match(NUMBER_REGEX);\n\n  if (matches === null || matches[0].length !== value.length) {\n    throw new TypeError(\"Expected real number, got implicit NaN\");\n  }\n\n  return parseFloat(value);\n};\n\nexport var limitedParseDouble = function (value) {\n  if (typeof value == \"string\") {\n    return parseFloatString(value);\n  }\n\n  return expectNumber(value);\n};\nexport var handleFloat = limitedParseDouble;\nexport var limitedParseFloat = limitedParseDouble;\nexport var limitedParseFloat32 = function (value) {\n  if (typeof value == \"string\") {\n    return parseFloatString(value);\n  }\n\n  return expectFloat32(value);\n};\n\nvar parseFloatString = function (value) {\n  switch (value) {\n    case \"NaN\":\n      return NaN;\n\n    case \"Infinity\":\n      return Infinity;\n\n    case \"-Infinity\":\n      return -Infinity;\n\n    default:\n      throw new Error(\"Unable to parse float value: \" + value);\n  }\n};\n\nexport var strictParseLong = function (value) {\n  if (typeof value === \"string\") {\n    return expectLong(parseNumber(value));\n  }\n\n  return expectLong(value);\n};\nexport var strictParseInt = strictParseLong;\nexport var strictParseInt32 = function (value) {\n  if (typeof value === \"string\") {\n    return expectInt32(parseNumber(value));\n  }\n\n  return expectInt32(value);\n};\nexport var strictParseShort = function (value) {\n  if (typeof value === \"string\") {\n    return expectShort(parseNumber(value));\n  }\n\n  return expectShort(value);\n};\nexport var strictParseByte = function (value) {\n  if (typeof value === \"string\") {\n    return expectByte(parseNumber(value));\n  }\n\n  return expectByte(value);\n};","map":{"version":3,"names":["__read","parseBoolean","value","Error","expectBoolean","undefined","TypeError","expectNumber","MAX_FLOAT","Math","ceil","pow","expectFloat32","expected","Number","isNaN","Infinity","abs","expectLong","isInteger","expectInt","expectInt32","expectSizedInt","expectShort","expectByte","size","castInt","Int32Array","of","Int16Array","Int8Array","expectNonNull","location","expectObject","Array","isArray","expectString","expectUnion","asObject","setKeys","Object","entries","filter","_a","_b","_","v","map","k","length","strictParseDouble","parseNumber","strictParseFloat","strictParseFloat32","NUMBER_REGEX","matches","match","parseFloat","limitedParseDouble","parseFloatString","handleFloat","limitedParseFloat","limitedParseFloat32","NaN","strictParseLong","strictParseInt","strictParseInt32","strictParseShort","strictParseByte"],"sources":["/Users/yzbaoo/Desktop/huohua/ilc-web-packages/node_modules/@aws-sdk/smithy-client/dist-es/parse-utils.js"],"sourcesContent":["import { __read } from \"tslib\";\nexport var parseBoolean = function (value) {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(\"Unable to parse boolean value \\\"\" + value + \"\\\"\");\n    }\n};\nexport var expectBoolean = function (value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(\"Expected boolean, got \" + typeof value);\n};\nexport var expectNumber = function (value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(\"Expected number, got \" + typeof value);\n};\nvar MAX_FLOAT = Math.ceil(Math.pow(2, 127) * (2 - Math.pow(2, -23)));\nexport var expectFloat32 = function (value) {\n    var expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(\"Expected 32-bit float, got \" + value);\n        }\n    }\n    return expected;\n};\nexport var expectLong = function (value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(\"Expected integer, got \" + typeof value);\n};\nexport var expectInt = expectLong;\nexport var expectInt32 = function (value) { return expectSizedInt(value, 32); };\nexport var expectShort = function (value) { return expectSizedInt(value, 16); };\nexport var expectByte = function (value) { return expectSizedInt(value, 8); };\nvar expectSizedInt = function (value, size) {\n    var expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(\"Expected \" + size + \"-bit integer, got \" + value);\n    }\n    return expected;\n};\nvar castInt = function (value, size) {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport var expectNonNull = function (value, location) {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(\"Expected a non-null value for \" + location);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport var expectObject = function (value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    throw new TypeError(\"Expected object, got \" + typeof value);\n};\nexport var expectString = function (value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    throw new TypeError(\"Expected string, got \" + typeof value);\n};\nexport var expectUnion = function (value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    var asObject = expectObject(value);\n    var setKeys = Object.entries(asObject)\n        .filter(function (_a) {\n        var _b = __read(_a, 2), _ = _b[0], v = _b[1];\n        return v !== null && v !== undefined;\n    })\n        .map(function (_a) {\n        var _b = __read(_a, 2), k = _b[0], _ = _b[1];\n        return k;\n    });\n    if (setKeys.length === 0) {\n        throw new TypeError(\"Unions must have exactly one non-null member\");\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(\"Unions must have exactly one non-null member. Keys \" + setKeys + \" were not null.\");\n    }\n    return asObject;\n};\nexport var strictParseDouble = function (value) {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport var strictParseFloat = strictParseDouble;\nexport var strictParseFloat32 = function (value) {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nvar NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nvar parseNumber = function (value) {\n    var matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(\"Expected real number, got implicit NaN\");\n    }\n    return parseFloat(value);\n};\nexport var limitedParseDouble = function (value) {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport var handleFloat = limitedParseDouble;\nexport var limitedParseFloat = limitedParseDouble;\nexport var limitedParseFloat32 = function (value) {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nvar parseFloatString = function (value) {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(\"Unable to parse float value: \" + value);\n    }\n};\nexport var strictParseLong = function (value) {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport var strictParseInt = strictParseLong;\nexport var strictParseInt32 = function (value) {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport var strictParseShort = function (value) {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport var strictParseByte = function (value) {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}